// This file was automatically generated by auto_generate_qstr.py


 QDEF(MP_QSTRnull, (const byte*)"\x00\x00\x00" "") 
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF(MP_QSTR___sizeof__, (const byte*)"\x09\x3b\x0a" "__sizeof__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF(MP_QSTR___ne__, (const byte*)"\x0e\x0b\x06" "__ne__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF(MP_QSTR___imul__, (const byte*)"\x18\xce\x08" "__imul__")
QDEF(MP_QSTR___imatmul__, (const byte*)"\xc0\x6e\x0b" "__imatmul__")
QDEF(MP_QSTR___ifloordiv__, (const byte*)"\x4f\x0f\x0d" "__ifloordiv__")
QDEF(MP_QSTR___itruediv__, (const byte*)"\x21\x02\x0c" "__itruediv__")
QDEF(MP_QSTR___imod__, (const byte*)"\x4a\x86\x08" "__imod__")
QDEF(MP_QSTR___ipow__, (const byte*)"\x84\xd5\x08" "__ipow__")
QDEF(MP_QSTR___ior__, (const byte*)"\xf1\x8f\x07" "__ior__")
QDEF(MP_QSTR___ixor__, (const byte*)"\x09\xb9\x08" "__ixor__")
QDEF(MP_QSTR___iand__, (const byte*)"\xa7\x21\x08" "__iand__")
QDEF(MP_QSTR___ilshift__, (const byte*)"\x80\xa2\x0b" "__ilshift__")
QDEF(MP_QSTR___irshift__, (const byte*)"\xde\xf8\x0b" "__irshift__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF(MP_QSTR___matmul__, (const byte*)"\x49\xf3\x0a" "__matmul__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF(MP_QSTR___radd__, (const byte*)"\x16\xc5\x08" "__radd__")
QDEF(MP_QSTR___rsub__, (const byte*)"\x73\x77\x08" "__rsub__")
QDEF(MP_QSTR___rmul__, (const byte*)"\x63\x01\x08" "__rmul__")
QDEF(MP_QSTR___rmatmul__, (const byte*)"\xdb\x03\x0b" "__rmatmul__")
QDEF(MP_QSTR___rfloordiv__, (const byte*)"\x54\x98\x0d" "__rfloordiv__")
QDEF(MP_QSTR___rtruediv__, (const byte*)"\x5a\xd7\x0c" "__rtruediv__")
QDEF(MP_QSTR___rmod__, (const byte*)"\x31\x8a\x08" "__rmod__")
QDEF(MP_QSTR___rpow__, (const byte*)"\xff\x9a\x08" "__rpow__")
QDEF(MP_QSTR___ror__, (const byte*)"\x2a\xdc\x07" "__ror__")
QDEF(MP_QSTR___rxor__, (const byte*)"\xf2\x86\x08" "__rxor__")
QDEF(MP_QSTR___rand__, (const byte*)"\xdc\x2e\x08" "__rand__")
QDEF(MP_QSTR___rlshift__, (const byte*)"\x1b\xd1\x0b" "__rlshift__")
QDEF(MP_QSTR___rrshift__, (const byte*)"\xc5\x9d\x0b" "__rrshift__")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF(MP_QSTR___get__, (const byte*)"\xb3\x8f\x07" "__get__")
QDEF(MP_QSTR___delete__, (const byte*)"\xdc\xed\x0a" "__delete__")
QDEF(MP_QSTR___set__, (const byte*)"\xa7\xb3\x07" "__set__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xf4\xc3\x0e" "_lt_module_gt_")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\xa9\x3e\x0e" "_lt_lambda_gt_")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\x7d\x43\x10" "_lt_listcomp_gt_")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\x65\x5c\x10" "_lt_dictcomp_gt_")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\xbd\xcc\x0f" "_lt_setcomp_gt_")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\xdd\xd9\x0f" "_lt_genexpr_gt_")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x3b\x37\x0e" "_lt_string_gt_")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\x2a\x3b\x0d" "_lt_stdin_gt_")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF(MP_QSTR_btree, (const byte*)"\xe1\x91\x05" "btree")
QDEF(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF(MP_QSTR_put, (const byte*)"\x74\x70\x03" "put")
QDEF(MP_QSTR_seq, (const byte*)"\x22\x8f\x03" "seq")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF(MP_QSTR__open, (const byte*)"\x2e\x18\x05" "_open")
QDEF(MP_QSTR_INCL, (const byte*)"\x0d\xbb\x04" "INCL")
QDEF(MP_QSTR_DESC, (const byte*)"\x34\x0d\x04" "DESC")
QDEF(MP_QSTR_factorial, (const byte*)"\xcc\x32\x09" "factorial")
QDEF(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF(MP_QSTR_fibonacci, (const byte*)"\x81\xb1\x09" "fibonacci")
QDEF(MP_QSTR_access, (const byte*)"\x61\x8a\x06" "access")
QDEF(MP_QSTR_make_array, (const byte*)"\x21\x09\x0a" "make_array")
QDEF(MP_QSTR_VAL, (const byte*)"\x1e\xf6\x03" "VAL")
QDEF(MP_QSTR_MSG, (const byte*)"\x5c\xca\x03" "MSG")
QDEF(MP_QSTR_HELLO_MICROPYTHON, (const byte*)"\x36\x36\x11" "HELLO_MICROPYTHON")
QDEF(MP_QSTR_add_f, (const byte*)"\x9d\xcd\x05" "add_f")
QDEF(MP_QSTR_add_d, (const byte*)"\x9f\xcd\x05" "add_d")
QDEF(MP_QSTR_productf, (const byte*)"\xc8\xab\x08" "productf")
QDEF(MP_QSTR_FrameBuffer, (const byte*)"\xd8\xbe\x0b" "FrameBuffer")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF(MP_QSTR_fill_rect, (const byte*)"\x35\xed\x09" "fill_rect")
QDEF(MP_QSTR_pixel, (const byte*)"\x4d\xf0\x05" "pixel")
QDEF(MP_QSTR_hline, (const byte*)"\x83\x3c\x05" "hline")
QDEF(MP_QSTR_vline, (const byte*)"\x1d\xf6\x05" "vline")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF(MP_QSTR_blit, (const byte*)"\xf6\x50\x04" "blit")
QDEF(MP_QSTR_scroll, (const byte*)"\x28\x5a\x06" "scroll")
QDEF(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF(MP_QSTR_FrameBuffer1, (const byte*)"\xe9\x99\x0c" "FrameBuffer1")
QDEF(MP_QSTR_MVLSB, (const byte*)"\x03\x14\x05" "MVLSB")
QDEF(MP_QSTR_MONO_VLSB, (const byte*)"\x12\xfc\x09" "MONO_VLSB")
QDEF(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF(MP_QSTR_GS2_HMSB, (const byte*)"\x28\xc3\x08" "GS2_HMSB")
QDEF(MP_QSTR_GS4_HMSB, (const byte*)"\x6e\x73\x08" "GS4_HMSB")
QDEF(MP_QSTR_GS8, (const byte*)"\xa9\xc0\x03" "GS8")
QDEF(MP_QSTR_MONO_HLSB, (const byte*)"\x4c\x98\x09" "MONO_HLSB")
QDEF(MP_QSTR_MONO_HMSB, (const byte*)"\xcd\x83\x09" "MONO_HMSB")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF(MP_QSTR_groups, (const byte*)"\x89\xc7\x06" "groups")
QDEF(MP_QSTR_span, (const byte*)"\xc9\x46\x04" "span")
QDEF(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF(MP_QSTR_xxx, (const byte*)"\xdd\x91\x03" "xxx")
QDEF(MP_QSTR_cexample, (const byte*)"\xce\xcf\x08" "cexample")
QDEF(MP_QSTR_add_ints, (const byte*)"\x3b\x60\x08" "add_ints")
QDEF(MP_QSTR_cppexample, (const byte*)"\xce\x67\x0a" "cppexample")
QDEF(MP_QSTR_cppfunc, (const byte*)"\xd8\xe0\x07" "cppfunc")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF(MP_QSTR_writevto, (const byte*)"\x75\x75\x08" "writevto")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF(MP_QSTR_SoftI2C, (const byte*)"\x13\xf2\x07" "SoftI2C")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x43\x07" "PinBase")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF(MP_QSTR_duty, (const byte*)"\x19\x2c\x04" "duty")
QDEF(MP_QSTR_duty_u16, (const byte*)"\xf4\xf6\x08" "duty_u16")
QDEF(MP_QSTR_duty_ns, (const byte*)"\x3b\x25\x07" "duty_ns")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF(MP_QSTR_UUID, (const byte*)"\xc8\xe9\x04" "UUID")
QDEF(MP_QSTR_gap_name, (const byte*)"\x2b\xb0\x08" "gap_name")
QDEF(MP_QSTR_mac, (const byte*)"\xaa\x43\x03" "mac")
QDEF(MP_QSTR_rxbuf, (const byte*)"\x7e\x67\x05" "rxbuf")
QDEF(MP_QSTR_mtu, (const byte*)"\x49\x46\x03" "mtu")
QDEF(MP_QSTR_addr_mode, (const byte*)"\x4a\x9e\x09" "addr_mode")
QDEF(MP_QSTR_bond, (const byte*)"\x02\x3c\x04" "bond")
QDEF(MP_QSTR_mitm, (const byte*)"\x38\x99\x04" "mitm")
QDEF(MP_QSTR_io, (const byte*)"\x23\x6f\x02" "io")
QDEF(MP_QSTR_le_secure, (const byte*)"\xc4\xfd\x09" "le_secure")
QDEF(MP_QSTR_interval_us, (const byte*)"\xa3\x2b\x0b" "interval_us")
QDEF(MP_QSTR_adv_data, (const byte*)"\x59\x08\x08" "adv_data")
QDEF(MP_QSTR_resp_data, (const byte*)"\x5e\x73\x09" "resp_data")
QDEF(MP_QSTR_connectable, (const byte*)"\x71\x36\x0b" "connectable")
QDEF(MP_QSTR_active, (const byte*)"\x69\xea\x06" "active")
QDEF(MP_QSTR_config, (const byte*)"\x4f\xa2\x06" "config")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF(MP_QSTR_gap_advertise, (const byte*)"\x23\x58\x0d" "gap_advertise")
QDEF(MP_QSTR_gap_connect, (const byte*)"\x32\x1b\x0b" "gap_connect")
QDEF(MP_QSTR_gap_scan, (const byte*)"\xd3\xb5\x08" "gap_scan")
QDEF(MP_QSTR_gap_disconnect, (const byte*)"\xac\xff\x0e" "gap_disconnect")
QDEF(MP_QSTR_gap_pair, (const byte*)"\x66\x10\x08" "gap_pair")
QDEF(MP_QSTR_gap_passkey, (const byte*)"\x0a\x6f\x0b" "gap_passkey")
QDEF(MP_QSTR_gatts_register_services, (const byte*)"\xf7\x3e\x17" "gatts_register_services")
QDEF(MP_QSTR_gatts_read, (const byte*)"\x9d\xbb\x0a" "gatts_read")
QDEF(MP_QSTR_gatts_write, (const byte*)"\x72\xd6\x0b" "gatts_write")
QDEF(MP_QSTR_gatts_notify, (const byte*)"\x6c\x24\x0c" "gatts_notify")
QDEF(MP_QSTR_gatts_indicate, (const byte*)"\x76\xe2\x0e" "gatts_indicate")
QDEF(MP_QSTR_gatts_set_buffer, (const byte*)"\x92\x70\x10" "gatts_set_buffer")
QDEF(MP_QSTR_gattc_discover_services, (const byte*)"\x7d\x91\x17" "gattc_discover_services")
QDEF(MP_QSTR_gattc_discover_characteristics, (const byte*)"\x5d\xec\x1e" "gattc_discover_characteristics")
QDEF(MP_QSTR_gattc_discover_descriptors, (const byte*)"\xb3\x7a\x1a" "gattc_discover_descriptors")
QDEF(MP_QSTR_gattc_read, (const byte*)"\x8d\xb5\x0a" "gattc_read")
QDEF(MP_QSTR_gattc_write, (const byte*)"\x62\x96\x0b" "gattc_write")
QDEF(MP_QSTR_gattc_exchange_mtu, (const byte*)"\x77\x28\x12" "gattc_exchange_mtu")
QDEF(MP_QSTR_l2cap_listen, (const byte*)"\x5f\x3d\x0c" "l2cap_listen")
QDEF(MP_QSTR_l2cap_connect, (const byte*)"\xa8\x9a\x0d" "l2cap_connect")
QDEF(MP_QSTR_l2cap_disconnect, (const byte*)"\x76\xce\x10" "l2cap_disconnect")
QDEF(MP_QSTR_l2cap_send, (const byte*)"\x6a\xe6\x0a" "l2cap_send")
QDEF(MP_QSTR_l2cap_recvinto, (const byte*)"\x88\x04\x0e" "l2cap_recvinto")
QDEF(MP_QSTR_hci_cmd, (const byte*)"\x52\x47\x07" "hci_cmd")
QDEF(MP_QSTR_BLE, (const byte*)"\xae\xc3\x03" "BLE")
QDEF(MP_QSTR_ubluetooth, (const byte*)"\xe6\x90\x0a" "ubluetooth")
QDEF(MP_QSTR_FLAG_READ, (const byte*)"\x64\x6d\x09" "FLAG_READ")
QDEF(MP_QSTR_FLAG_WRITE, (const byte*)"\x8b\x63\x0a" "FLAG_WRITE")
QDEF(MP_QSTR_FLAG_NOTIFY, (const byte*)"\xd5\x5d\x0b" "FLAG_NOTIFY")
QDEF(MP_QSTR_FLAG_INDICATE, (const byte*)"\xcf\xa9\x0d" "FLAG_INDICATE")
QDEF(MP_QSTR_FLAG_WRITE_NO_RESPONSE, (const byte*)"\xa9\xf7\x16" "FLAG_WRITE_NO_RESPONSE")
QDEF(MP_QSTR_flags, (const byte*)"\xfa\x8f\x05" "flags")
QDEF(MP_QSTR_cachesize, (const byte*)"\xcc\x78\x09" "cachesize")
QDEF(MP_QSTR_pagesize, (const byte*)"\x13\x28\x08" "pagesize")
QDEF(MP_QSTR_minkeypage, (const byte*)"\xab\x6f\x0a" "minkeypage")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF(MP_QSTR_framebuf, (const byte*)"\x69\x82\x08" "framebuf")
QDEF(MP_QSTR_status, (const byte*)"\x71\x09\x06" "status")
QDEF(MP_QSTR_slip, (const byte*)"\xc3\x9a\x04" "slip")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF(MP_QSTR_sendall, (const byte*)"\x38\x9f\x07" "sendall")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF(MP_QSTR_makefile, (const byte*)"\xc1\xd5\x08" "makefile")
QDEF(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF(MP_QSTR_lwip, (const byte*)"\x67\x89\x04" "lwip")
QDEF(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF(MP_QSTR_print_pcbs, (const byte*)"\x49\x67\x0a" "print_pcbs")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\xdf\x0a" "SOL_SOCKET")
QDEF(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x53\x0c" "SO_REUSEADDR")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x8e\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IP_ADD_MEMBERSHIP, (const byte*)"\x6f\x5b\x11" "IP_ADD_MEMBERSHIP")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF(MP_QSTR_route, (const byte*)"\x3c\x28\x05" "route")
QDEF(MP_QSTR_STA_IF, (const byte*)"\xb3\x1b\x06" "STA_IF")
QDEF(MP_QSTR_AP_IF, (const byte*)"\x04\x96\x05" "AP_IF")
QDEF(MP_QSTR_dhcp, (const byte*)"\x7a\xf8\x04" "dhcp")
QDEF(MP_QSTR_onewire, (const byte*)"\x28\xfc\x07" "onewire")
QDEF(MP_QSTR_readbit, (const byte*)"\x08\x4f\x07" "readbit")
QDEF(MP_QSTR_readbyte, (const byte*)"\x7d\xf0\x08" "readbyte")
QDEF(MP_QSTR_writebit, (const byte*)"\xc7\xa5\x08" "writebit")
QDEF(MP_QSTR_writebyte, (const byte*)"\xd2\x1e\x09" "writebyte")
QDEF(MP_QSTR_crc8, (const byte*)"\xcf\xef\x04" "crc8")
QDEF(MP_QSTR_peek, (const byte*)"\x7e\xc1\x04" "peek")
QDEF(MP_QSTR_push_sorted, (const byte*)"\x1f\xa0\x0b" "push_sorted")
QDEF(MP_QSTR_push_head, (const byte*)"\x6c\x1e\x09" "push_head")
QDEF(MP_QSTR_pop_head, (const byte*)"\x1d\x28\x08" "pop_head")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF(MP_QSTR_TaskQueue, (const byte*)"\x99\x5c\x09" "TaskQueue")
QDEF(MP_QSTR_cur_task, (const byte*)"\xf3\x2d\x08" "cur_task")
QDEF(MP_QSTR__task_queue, (const byte*)"\xd9\xc5\x0b" "_task_queue")
QDEF(MP_QSTR_CancelledError, (const byte*)"\xf6\x9b\x0e" "CancelledError")
QDEF(MP_QSTR_coro, (const byte*)"\xb4\xdb\x04" "coro")
QDEF(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF(MP_QSTR_state, (const byte*)"\xd2\xf0\x05" "state")
QDEF(MP_QSTR_done, (const byte*)"\x45\x03\x04" "done")
QDEF(MP_QSTR_cancel, (const byte*)"\x03\x87\x06" "cancel")
QDEF(MP_QSTR_ph_key, (const byte*)"\xf5\x1a\x06" "ph_key")
QDEF(MP_QSTR_Task, (const byte*)"\x08\x42\x04" "Task")
QDEF(MP_QSTR__uasyncio, (const byte*)"\xcf\x5f\x09" "_uasyncio")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF(MP_QSTR_crc32, (const byte*)"\x76\xe8\x05" "crc32")
QDEF(MP_QSTR_encrypt, (const byte*)"\xc2\x78\x07" "encrypt")
QDEF(MP_QSTR_decrypt, (const byte*)"\xa8\x72\x07" "decrypt")
QDEF(MP_QSTR_aes, (const byte*)"\x32\x32\x03" "aes")
QDEF(MP_QSTR_ucryptolib, (const byte*)"\x34\xda\x0a" "ucryptolib")
QDEF(MP_QSTR_MODE_ECB, (const byte*)"\xbd\x1b\x08" "MODE_ECB")
QDEF(MP_QSTR_MODE_CBC, (const byte*)"\x1b\x23\x08" "MODE_CBC")
QDEF(MP_QSTR_MODE_CTR, (const byte*)"\x5c\x22\x08" "MODE_CTR")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x1b\x05" "SHORT")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\xf4\x06" "USHORT")
QDEF(MP_QSTR_INT, (const byte*)"\x36\xd7\x03" "INT")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x3d\x04" "UINT")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x65\x04" "LONG")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x8d\x05" "ULONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\xd4\x08" "LONGLONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\xc6\x09" "ULONGLONG")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF(MP_QSTR_sha1, (const byte*)"\x8e\xac\x04" "sha1")
QDEF(MP_QSTR_md5, (const byte*)"\x19\x44\x03" "md5")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF(MP_QSTR_separators, (const byte*)"\xeb\x0c\x0a" "separators")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x2f\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF(MP_QSTR_uplatform, (const byte*)"\xaf\x3f\x09" "uplatform")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF(MP_QSTR_python_compiler, (const byte*)"\x8d\x95\x0f" "python_compiler")
QDEF(MP_QSTR_libc_ver, (const byte*)"\xff\xb9\x08" "libc_ver")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x6d\x05" "DEBUG")
QDEF(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF(MP_QSTR_SO_KEEPALIVE, (const byte*)"\x2a\xa3\x0c" "SO_KEEPALIVE")
QDEF(MP_QSTR_SO_SNDTIMEO, (const byte*)"\x25\xff\x0b" "SO_SNDTIMEO")
QDEF(MP_QSTR_SO_RCVTIMEO, (const byte*)"\xdb\x28\x0b" "SO_RCVTIMEO")
QDEF(MP_QSTR_IPPROTO_ICMP, (const byte*)"\xa2\x87\x0c" "IPPROTO_ICMP")
QDEF(MP_QSTR_IPPROTO_IPV4, (const byte*)"\x2e\x4b\x0c" "IPPROTO_IPV4")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\xde\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\xdb\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IPPROTO_IPV6, (const byte*)"\x2c\x4b\x0c" "IPPROTO_IPV6")
QDEF(MP_QSTR_IPPROTO_RAW, (const byte*)"\xf1\x08\x0b" "IPPROTO_RAW")
QDEF(MP_QSTR_ussl, (const byte*)"\x1c\xf2\x04" "ussl")
QDEF(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF(MP_QSTR_cert, (const byte*)"\x25\xb1\x04" "cert")
QDEF(MP_QSTR_server_side, (const byte*)"\x64\xef\x0b" "server_side")
QDEF(MP_QSTR_server_hostname, (const byte*)"\x58\xef\x0f" "server_hostname")
QDEF(MP_QSTR_do_handshake, (const byte*)"\x86\x7f\x0c" "do_handshake")
QDEF(MP_QSTR_wrap_socket, (const byte*)"\xcb\xf3\x0b" "wrap_socket")
QDEF(MP_QSTR_getpeercert, (const byte*)"\xb1\x92\x0b" "getpeercert")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF(MP_QSTR_websocket, (const byte*)"\x90\x8d\x09" "websocket")
QDEF(MP_QSTR_uwebsocket, (const byte*)"\xe5\x33\x0a" "uwebsocket")
QDEF(MP_QSTR_rb, (const byte*)"\xd5\x70\x02" "rb")
QDEF(MP_QSTR_wb, (const byte*)"\x70\x70\x02" "wb")
QDEF(MP_QSTR__webrepl, (const byte*)"\x21\x95\x08" "_webrepl")
QDEF(MP_QSTR_password, (const byte*)"\x9a\x6f\x08" "password")
QDEF(MP_QSTR_passive, (const byte*)"\x8e\xc2\x07" "passive")
QDEF(MP_QSTR_essid, (const byte*)"\x4d\xb1\x05" "essid")
QDEF(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF(MP_QSTR_auth, (const byte*)"\xad\xb8\x04" "auth")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x91\x07" "channel")
QDEF(MP_QSTR_stations, (const byte*)"\x2c\x1b\x08" "stations")
QDEF(MP_QSTR_antenna, (const byte*)"\xba\xec\x07" "antenna")
QDEF(MP_QSTR_txpower, (const byte*)"\xd6\xf6\x07" "txpower")
QDEF(MP_QSTR_monitor, (const byte*)"\x29\x8f\x07" "monitor")
QDEF(MP_QSTR_pm, (const byte*)"\x18\x70\x02" "pm")
QDEF(MP_QSTR_trace, (const byte*)"\xa4\x43\x05" "trace")
QDEF(MP_QSTR_send_ethernet, (const byte*)"\x97\xd6\x0d" "send_ethernet")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF(MP_QSTR_CYW43, (const byte*)"\x0f\x9b\x05" "CYW43")
QDEF(MP_QSTR_security, (const byte*)"\x93\x48\x08" "security")
QDEF(MP_QSTR_fw_version, (const byte*)"\x71\x22\x0a" "fw_version")
QDEF(MP_QSTR_rssi, (const byte*)"\x7e\xb0\x04" "rssi")
QDEF(MP_QSTR_OPEN, (const byte*)"\x91\x42\x04" "OPEN")
QDEF(MP_QSTR_WEP, (const byte*)"\x07\x03\x03" "WEP")
QDEF(MP_QSTR_WPA_PSK, (const byte*)"\xb4\x1d\x07" "WPA_PSK")
QDEF(MP_QSTR_nina, (const byte*)"\x0d\x55\x04" "nina")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF(MP_QSTR__slash_, (const byte*)"\x00\x6e\x07" "_slash_")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x9b\x06" "VfsFat")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF(MP_QSTR_readsize, (const byte*)"\xd2\xc9\x08" "readsize")
QDEF(MP_QSTR_progsize, (const byte*)"\x0a\xd3\x08" "progsize")
QDEF(MP_QSTR_lookahead, (const byte*)"\xeb\x20\x09" "lookahead")
QDEF(MP_QSTR_mtime, (const byte*)"\xfd\x23\x05" "mtime")
QDEF(MP_QSTR_VfsLfs1, (const byte*)"\xee\x75\x07" "VfsLfs1")
QDEF(MP_QSTR_VfsLfs2, (const byte*)"\xed\x75\x07" "VfsLfs2")
QDEF(MP_QSTR_VfsPosix, (const byte*)"\xbb\x4e\x08" "VfsPosix")
QDEF(MP_QSTR_fileno, (const byte*)"\x82\x76\x06" "fileno")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF(MP_QSTR_wipy, (const byte*)"\x72\x75\x04" "wipy")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF(MP_QSTR__slash_flash, (const byte*)"\x50\x49\x0c" "_slash_flash")
QDEF(MP_QSTR__slash_flash_slash_lib, (const byte*)"\x92\x7a\x16" "_slash_flash_slash_lib")
QDEF(MP_QSTR_trigger, (const byte*)"\x9d\x8c\x07" "trigger")
QDEF(MP_QSTR_priority, (const byte*)"\x77\xb6\x08" "priority")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF(MP_QSTR_wake, (const byte*)"\xdd\x55\x04" "wake")
QDEF(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF(MP_QSTR_lightsleep, (const byte*)"\x54\xe7\x0a" "lightsleep")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF(MP_QSTR_wake_reason, (const byte*)"\x66\xc6\x0b" "wake_reason")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF(MP_QSTR_WDT, (const byte*)"\x62\x03\x03" "WDT")
QDEF(MP_QSTR_SD, (const byte*)"\xf2\x74\x02" "SD")
QDEF(MP_QSTR_IDLE, (const byte*)"\xa1\xe4\x04" "IDLE")
QDEF(MP_QSTR_SLEEP, (const byte*)"\x0a\x27\x05" "SLEEP")
QDEF(MP_QSTR_DEEPSLEEP, (const byte*)"\x7e\xf3\x09" "DEEPSLEEP")
QDEF(MP_QSTR_POWER_ON, (const byte*)"\xc4\x64\x08" "POWER_ON")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0e\x0f" "DEEPSLEEP_RESET")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF(MP_QSTR_WLAN_WAKE, (const byte*)"\xb6\xc0\x09" "WLAN_WAKE")
QDEF(MP_QSTR_PIN_WAKE, (const byte*)"\xd5\x94\x08" "PIN_WAKE")
QDEF(MP_QSTR_RTC_WAKE, (const byte*)"\xa7\x56\x08" "RTC_WAKE")
QDEF(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF(MP_QSTR_login, (const byte*)"\x46\x88\x05" "login")
QDEF(MP_QSTR_WLAN, (const byte*)"\x11\x94\x04" "WLAN")
QDEF(MP_QSTR_Server, (const byte*)"\xa0\x0b\x06" "Server")
QDEF(MP_QSTR_isrunning, (const byte*)"\x18\xfb\x09" "isrunning")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF(MP_QSTR_IPPROTO_SEC, (const byte*)"\x60\x04\x0b" "IPPROTO_SEC")
QDEF(MP_QSTR_sock, (const byte*)"\xd1\x9f\x04" "sock")
QDEF(MP_QSTR_keyfile, (const byte*)"\x74\xf4\x07" "keyfile")
QDEF(MP_QSTR_certfile, (const byte*)"\xe3\xd0\x08" "certfile")
QDEF(MP_QSTR_cert_reqs, (const byte*)"\xef\x3a\x09" "cert_reqs")
QDEF(MP_QSTR_ssl_version, (const byte*)"\x8c\x0f\x0b" "ssl_version")
QDEF(MP_QSTR_ca_certs, (const byte*)"\x0b\x06\x08" "ca_certs")
QDEF(MP_QSTR_SSLError, (const byte*)"\x91\x69\x08" "SSLError")
QDEF(MP_QSTR_CERT_NONE, (const byte*)"\x90\x4d\x09" "CERT_NONE")
QDEF(MP_QSTR_CERT_OPTIONAL, (const byte*)"\xf4\xa2\x0d" "CERT_OPTIONAL")
QDEF(MP_QSTR_CERT_REQUIRED, (const byte*)"\x73\xce\x0d" "CERT_REQUIRED")
QDEF(MP_QSTR_PROTOCOL_SSLv3, (const byte*)"\x25\x27\x0e" "PROTOCOL_SSLv3")
QDEF(MP_QSTR_PROTOCOL_TLSv1, (const byte*)"\x40\x9f\x0e" "PROTOCOL_TLSv1")
QDEF(MP_QSTR_PROTOCOL_TLSv1_1, (const byte*)"\xce\x6a\x10" "PROTOCOL_TLSv1_1")
QDEF(MP_QSTR_PROTOCOL_TLSv1_2, (const byte*)"\xcd\x6a\x10" "PROTOCOL_TLSv1_2")
QDEF(MP_QSTR_gmtime, (const byte*)"\x5a\x8e\x06" "gmtime")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF(MP_QSTR_heartbeat, (const byte*)"\x5d\x1f\x09" "heartbeat")
QDEF(MP_QSTR_ssid, (const byte*)"\x08\x4b\x04" "ssid")
QDEF(MP_QSTR_sec, (const byte*)"\x30\x8f\x03" "sec")
QDEF(MP_QSTR_connections, (const byte*)"\x20\x22\x0b" "connections")
QDEF(MP_QSTR_urn, (const byte*)"\x8c\x63\x03" "urn")
QDEF(MP_QSTR_print_ver, (const byte*)"\x2a\x80\x09" "print_ver")
QDEF(MP_QSTR_STA, (const byte*)"\x63\x11\x03" "STA")
QDEF(MP_QSTR_AP, (const byte*)"\x34\x72\x02" "AP")
QDEF(MP_QSTR_WPA, (const byte*)"\xe3\x00\x03" "WPA")
QDEF(MP_QSTR_WPA2, (const byte*)"\x71\x1d\x04" "WPA2")
QDEF(MP_QSTR_INT_ANT, (const byte*)"\xd2\x3c\x07" "INT_ANT")
QDEF(MP_QSTR_EXT_ANT, (const byte*)"\x88\x12\x07" "EXT_ANT")
QDEF(MP_QSTR_ANY_EVENT, (const byte*)"\xc0\xad\x09" "ANY_EVENT")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF(MP_QSTR_ADCChannel, (const byte*)"\x60\xc4\x0a" "ADCChannel")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x91\x05" "Flash")
QDEF(MP_QSTR_nbytes, (const byte*)"\xd2\x76\x06" "nbytes")
QDEF(MP_QSTR_buf, (const byte*)"\x74\x49\x03" "buf")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF(MP_QSTR_drive, (const byte*)"\x49\x68\x05" "drive")
QDEF(MP_QSTR_alt, (const byte*)"\x5c\x33\x03" "alt")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF(MP_QSTR_ALT, (const byte*)"\x7c\xb7\x03" "ALT")
QDEF(MP_QSTR_ALT_OPEN_DRAIN, (const byte*)"\xf8\xeb\x0e" "ALT_OPEN_DRAIN")
QDEF(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF(MP_QSTR_LOW_POWER, (const byte*)"\xb1\x59\x09" "LOW_POWER")
QDEF(MP_QSTR_MED_POWER, (const byte*)"\x69\xea\x09" "MED_POWER")
QDEF(MP_QSTR_HIGH_POWER, (const byte*)"\x8b\xcc\x0a" "HIGH_POWER")
QDEF(MP_QSTR_alt_list, (const byte*)"\x21\x57\x08" "alt_list")
QDEF(MP_QSTR_board, (const byte*)"\x7f\xd4\x05" "board")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_LOW_LEVEL, (const byte*)"\x8d\xe6\x0d" "IRQ_LOW_LEVEL")
QDEF(MP_QSTR_IRQ_HIGH_LEVEL, (const byte*)"\x57\x67\x0e" "IRQ_HIGH_LEVEL")
QDEF(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF(MP_QSTR_repeat, (const byte*)"\xf2\x09\x06" "repeat")
QDEF(MP_QSTR_now, (const byte*)"\xb3\x57\x03" "now")
QDEF(MP_QSTR_alarm, (const byte*)"\x16\x1f\x05" "alarm")
QDEF(MP_QSTR_alarm_left, (const byte*)"\x52\x58\x0a" "alarm_left")
QDEF(MP_QSTR_alarm_cancel, (const byte*)"\x8f\x62\x0c" "alarm_cancel")
QDEF(MP_QSTR_ALARM0, (const byte*)"\x06\x4f\x06" "ALARM0")
QDEF(MP_QSTR_pins, (const byte*)"\x41\xf2\x04" "pins")
QDEF(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\xff\x08" "ONE_SHOT")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF(MP_QSTR_duty_cycle, (const byte*)"\xf6\xce\x0a" "duty_cycle")
QDEF(MP_QSTR_A, (const byte*)"\xe4\xb5\x01" "A")
QDEF(MP_QSTR_B, (const byte*)"\xe7\xb5\x01" "B")
QDEF(MP_QSTR_POSITIVE, (const byte*)"\x2e\xc4\x08" "POSITIVE")
QDEF(MP_QSTR_NEGATIVE, (const byte*)"\xe6\xf1\x08" "NEGATIVE")
QDEF(MP_QSTR_TIMEOUT, (const byte*)"\x5e\x11\x07" "TIMEOUT")
QDEF(MP_QSTR_MATCH, (const byte*)"\x76\x2b\x05" "MATCH")
QDEF(MP_QSTR_TimerChannel, (const byte*)"\x41\x99\x0c" "TimerChannel")
QDEF(MP_QSTR_EVEN, (const byte*)"\xdd\xae\x04" "EVEN")
QDEF(MP_QSTR_ODD, (const byte*)"\x6a\xe1\x03" "ODD")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF(MP_QSTR_RX_ANY, (const byte*)"\xe6\xb6\x06" "RX_ANY")
QDEF(MP_QSTR_feed, (const byte*)"\xa7\x23\x04" "feed")
QDEF(MP_QSTR_get_i32, (const byte*)"\x84\x3e\x07" "get_i32")
QDEF(MP_QSTR_set_i32, (const byte*)"\x90\x91\x07" "set_i32")
QDEF(MP_QSTR_get_blob, (const byte*)"\x2f\x66\x08" "get_blob")
QDEF(MP_QSTR_set_blob, (const byte*)"\xbb\xbf\x08" "set_blob")
QDEF(MP_QSTR_erase_key, (const byte*)"\x0d\xcb\x09" "erase_key")
QDEF(MP_QSTR_commit, (const byte*)"\xb4\x21\x06" "commit")
QDEF(MP_QSTR_NVS, (const byte*)"\xee\xd6\x03" "NVS")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF(MP_QSTR_subtype, (const byte*)"\xb9\xf8\x07" "subtype")
QDEF(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF(MP_QSTR_set_boot, (const byte*)"\x6e\xc4\x08" "set_boot")
QDEF(MP_QSTR_mark_app_valid_cancel_rollback, (const byte*)"\x77\xe4\x1e" "mark_app_valid_cancel_rollback")
QDEF(MP_QSTR_get_next_update, (const byte*)"\x85\x5d\x0f" "get_next_update")
QDEF(MP_QSTR_BOOT, (const byte*)"\xf3\x3c\x04" "BOOT")
QDEF(MP_QSTR_RUNNING, (const byte*)"\x42\x45\x07" "RUNNING")
QDEF(MP_QSTR_TYPE_APP, (const byte*)"\xe3\x9e\x08" "TYPE_APP")
QDEF(MP_QSTR_TYPE_DATA, (const byte*)"\xf2\xc3\x09" "TYPE_DATA")
QDEF(MP_QSTR_Partition, (const byte*)"\xa7\x43\x09" "Partition")
QDEF(MP_QSTR_clock_div, (const byte*)"\x89\x56\x09" "clock_div")
QDEF(MP_QSTR_idle_level, (const byte*)"\x28\x75\x0a" "idle_level")
QDEF(MP_QSTR_tx_carrier, (const byte*)"\xca\x92\x0a" "tx_carrier")
QDEF(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF(MP_QSTR_source_freq, (const byte*)"\x47\x26\x0b" "source_freq")
QDEF(MP_QSTR_wait_done, (const byte*)"\x51\x5d\x09" "wait_done")
QDEF(MP_QSTR_loop, (const byte*)"\x39\x24\x04" "loop")
QDEF(MP_QSTR_write_pulses, (const byte*)"\xeb\xd4\x0c" "write_pulses")
QDEF(MP_QSTR_bitstream_channel, (const byte*)"\x9a\xa5\x11" "bitstream_channel")
QDEF(MP_QSTR_RMT, (const byte*)"\x8e\x07\x03" "RMT")
QDEF(MP_QSTR_set_wakeup_period, (const byte*)"\x3f\x08\x11" "set_wakeup_period")
QDEF(MP_QSTR_load_binary, (const byte*)"\xd3\xba\x0b" "load_binary")
QDEF(MP_QSTR_run, (const byte*)"\x6c\x89\x03" "run")
QDEF(MP_QSTR_RESERVE_MEM, (const byte*)"\xff\x5f\x0b" "RESERVE_MEM")
QDEF(MP_QSTR_ULP, (const byte*)"\x6c\xeb\x03" "ULP")
QDEF(MP_QSTR_read_u16, (const byte*)"\xda\xae\x08" "read_u16")
QDEF(MP_QSTR_atten, (const byte*)"\xaf\x50\x05" "atten")
QDEF(MP_QSTR_ATTN_0DB, (const byte*)"\x23\x45\x08" "ATTN_0DB")
QDEF(MP_QSTR_ATTN_2_5DB, (const byte*)"\xeb\xf6\x0a" "ATTN_2_5DB")
QDEF(MP_QSTR_ATTN_6DB, (const byte*)"\x25\x2d\x08" "ATTN_6DB")
QDEF(MP_QSTR_ATTN_11DB, (const byte*)"\x13\x1d\x09" "ATTN_11DB")
QDEF(MP_QSTR_WIDTH_9BIT, (const byte*)"\x5a\x2c\x0a" "WIDTH_9BIT")
QDEF(MP_QSTR_WIDTH_10BIT, (const byte*)"\xc2\x7c\x0b" "WIDTH_10BIT")
QDEF(MP_QSTR_WIDTH_11BIT, (const byte*)"\xa3\xdf\x0b" "WIDTH_11BIT")
QDEF(MP_QSTR_WIDTH_12BIT, (const byte*)"\x80\xa4\x0b" "WIDTH_12BIT")
QDEF(MP_QSTR_WIDTH_13BIT, (const byte*)"\x61\x08\x0b" "WIDTH_13BIT")
QDEF(MP_QSTR_DAC, (const byte*)"\x03\xba\x03" "DAC")
QDEF(MP_QSTR_ws, (const byte*)"\x61\x70\x02" "ws")
QDEF(MP_QSTR_sd, (const byte*)"\xf2\x70\x02" "sd")
QDEF(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF(MP_QSTR_rate, (const byte*)"\x47\x08\x04" "rate")
QDEF(MP_QSTR_ibuf, (const byte*)"\x9d\xe7\x04" "ibuf")
QDEF(MP_QSTR_shift, (const byte*)"\x85\x25\x05" "shift")
QDEF(MP_QSTR_RX, (const byte*)"\x8f\x74\x02" "RX")
QDEF(MP_QSTR_TX, (const byte*)"\x49\x74\x02" "TX")
QDEF(MP_QSTR_STEREO, (const byte*)"\xbf\x1e\x06" "STEREO")
QDEF(MP_QSTR_MONO, (const byte*)"\xa6\xc0\x04" "MONO")
QDEF(MP_QSTR_I2S, (const byte*)"\x4d\xdf\x03" "I2S")
QDEF(MP_QSTR_PULL_HOLD, (const byte*)"\x50\xee\x09" "PULL_HOLD")
QDEF(MP_QSTR_WAKE_LOW, (const byte*)"\x96\x2e\x08" "WAKE_LOW")
QDEF(MP_QSTR_WAKE_HIGH, (const byte*)"\x0c\xf7\x09" "WAKE_HIGH")
QDEF(MP_QSTR_IRQ, (const byte*)"\xaf\xda\x03" "IRQ")
QDEF(MP_QSTR_memory, (const byte*)"\x84\x1d\x06" "memory")
QDEF(MP_QSTR_slot, (const byte*)"\x81\x9a\x04" "slot")
QDEF(MP_QSTR_cd, (const byte*)"\xe2\x6e\x02" "cd")
QDEF(MP_QSTR_wp, (const byte*)"\x62\x70\x02" "wp")
QDEF(MP_QSTR_cs, (const byte*)"\xf5\x6e\x02" "cs")
QDEF(MP_QSTR_SDCard, (const byte*)"\xa6\xaf\x06" "SDCard")
QDEF(MP_QSTR_tick_hz, (const byte*)"\x7d\xdb\x07" "tick_hz")
QDEF(MP_QSTR_TouchPad, (const byte*)"\xd5\x8a\x08" "TouchPad")
QDEF(MP_QSTR_tx, (const byte*)"\x89\x6f\x02" "tx")
QDEF(MP_QSTR_rx, (const byte*)"\xcf\x70\x02" "rx")
QDEF(MP_QSTR_rts, (const byte*)"\x50\x89\x03" "rts")
QDEF(MP_QSTR_cts, (const byte*)"\x41\x4d\x03" "cts")
QDEF(MP_QSTR_txbuf, (const byte*)"\x78\xc6\x05" "txbuf")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF(MP_QSTR_INV_TX, (const byte*)"\xa7\xde\x06" "INV_TX")
QDEF(MP_QSTR_INV_RX, (const byte*)"\x61\xde\x06" "INV_RX")
QDEF(MP_QSTR_INV_RTS, (const byte*)"\x5e\xac\x07" "INV_RTS")
QDEF(MP_QSTR_INV_CTS, (const byte*)"\x8f\x67\x07" "INV_CTS")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x04\x03" "RTS")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\xd1\x03" "CTS")
QDEF(MP_QSTR__slash_lib, (const byte*)"\x47\x6c\x0a" "_slash_lib")
QDEF(MP_QSTR_esp, (const byte*)"\x63\x24\x03" "esp")
QDEF(MP_QSTR_osdebug, (const byte*)"\xe8\xe6\x07" "osdebug")
QDEF(MP_QSTR_flash_read, (const byte*)"\xb8\x48\x0a" "flash_read")
QDEF(MP_QSTR_flash_write, (const byte*)"\x37\x7f\x0b" "flash_write")
QDEF(MP_QSTR_flash_erase, (const byte*)"\xca\x81\x0b" "flash_erase")
QDEF(MP_QSTR_flash_size, (const byte*)"\x2f\xb9\x0a" "flash_size")
QDEF(MP_QSTR_flash_user_start, (const byte*)"\x84\x2a\x10" "flash_user_start")
QDEF(MP_QSTR_gpio_matrix_in, (const byte*)"\xa8\xac\x0e" "gpio_matrix_in")
QDEF(MP_QSTR_gpio_matrix_out, (const byte*)"\x61\x3b\x0f" "gpio_matrix_out")
QDEF(MP_QSTR_dht_readinto, (const byte*)"\xec\x62\x0c" "dht_readinto")
QDEF(MP_QSTR_LOG_NONE, (const byte*)"\xf4\xd3\x08" "LOG_NONE")
QDEF(MP_QSTR_LOG_ERROR, (const byte*)"\x06\xce\x09" "LOG_ERROR")
QDEF(MP_QSTR_LOG_WARNING, (const byte*)"\x94\xb9\x0b" "LOG_WARNING")
QDEF(MP_QSTR_LOG_INFO, (const byte*)"\xd0\x75\x08" "LOG_INFO")
QDEF(MP_QSTR_LOG_DEBUG, (const byte*)"\x6f\xdb\x09" "LOG_DEBUG")
QDEF(MP_QSTR_LOG_VERBOSE, (const byte*)"\x24\xbd\x0b" "LOG_VERBOSE")
QDEF(MP_QSTR_level, (const byte*)"\xd3\x4b\x05" "level")
QDEF(MP_QSTR_esp32, (const byte*)"\xc2\xce\x05" "esp32")
QDEF(MP_QSTR_wake_on_touch, (const byte*)"\xd9\x54\x0d" "wake_on_touch")
QDEF(MP_QSTR_wake_on_ext0, (const byte*)"\x05\xdc\x0c" "wake_on_ext0")
QDEF(MP_QSTR_wake_on_ext1, (const byte*)"\x04\xdc\x0c" "wake_on_ext1")
QDEF(MP_QSTR_raw_temperature, (const byte*)"\x52\xd0\x0f" "raw_temperature")
QDEF(MP_QSTR_hall_sensor, (const byte*)"\x05\x2c\x0b" "hall_sensor")
QDEF(MP_QSTR_idf_heap_info, (const byte*)"\xbc\x1a\x0d" "idf_heap_info")
QDEF(MP_QSTR_WAKEUP_ALL_LOW, (const byte*)"\x0d\xaa\x0e" "WAKEUP_ALL_LOW")
QDEF(MP_QSTR_WAKEUP_ANY_HIGH, (const byte*)"\x40\x48\x0f" "WAKEUP_ANY_HIGH")
QDEF(MP_QSTR_HEAP_DATA, (const byte*)"\x16\x76\x09" "HEAP_DATA")
QDEF(MP_QSTR_HEAP_EXEC, (const byte*)"\x9d\x51\x09" "HEAP_EXEC")
QDEF(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF(MP_QSTR_bitstream, (const byte*)"\xa6\x15\x09" "bitstream")
QDEF(MP_QSTR_time_pulse_us, (const byte*)"\x89\x0c\x0d" "time_pulse_us")
QDEF(MP_QSTR_EXT0_WAKE, (const byte*)"\x5b\xf3\x09" "EXT0_WAKE")
QDEF(MP_QSTR_EXT1_WAKE, (const byte*)"\xfa\xda\x09" "EXT1_WAKE")
QDEF(MP_QSTR_TIMER_WAKE, (const byte*)"\x65\x11\x0a" "TIMER_WAKE")
QDEF(MP_QSTR_TOUCHPAD_WAKE, (const byte*)"\xb2\x8c\x0d" "TOUCHPAD_WAKE")
QDEF(MP_QSTR_ULP_WAKE, (const byte*)"\x6b\x56\x08" "ULP_WAKE")
QDEF(MP_QSTR_LAN, (const byte*)"\x06\xdc\x03" "LAN")
QDEF(MP_QSTR_PPP, (const byte*)"\x35\x0d\x03" "PPP")
QDEF(MP_QSTR_phy_mode, (const byte*)"\x38\xa0\x08" "phy_mode")
QDEF(MP_QSTR_MODE_11B, (const byte*)"\xfb\x44\x08" "MODE_11B")
QDEF(MP_QSTR_MODE_11G, (const byte*)"\xfe\x44\x08" "MODE_11G")
QDEF(MP_QSTR_MODE_11N, (const byte*)"\xf7\x44\x08" "MODE_11N")
QDEF(MP_QSTR_AUTH_OPEN, (const byte*)"\x46\xb3\x09" "AUTH_OPEN")
QDEF(MP_QSTR_AUTH_WEP, (const byte*)"\xf0\x0d\x08" "AUTH_WEP")
QDEF(MP_QSTR_AUTH_WPA_PSK, (const byte*)"\xc3\x6c\x0c" "AUTH_WPA_PSK")
QDEF(MP_QSTR_AUTH_WPA2_PSK, (const byte*)"\xf1\xfe\x0d" "AUTH_WPA2_PSK")
QDEF(MP_QSTR_AUTH_WPA_WPA2_PSK, (const byte*)"\xe8\x79\x11" "AUTH_WPA_WPA2_PSK")
QDEF(MP_QSTR_AUTH_WPA2_ENTERPRISE, (const byte*)"\x2c\x6f\x14" "AUTH_WPA2_ENTERPRISE")
QDEF(MP_QSTR_AUTH_WPA3_PSK, (const byte*)"\x70\x2f\x0d" "AUTH_WPA3_PSK")
QDEF(MP_QSTR_AUTH_WPA2_WPA3_PSK, (const byte*)"\x9b\x60\x12" "AUTH_WPA2_WPA3_PSK")
QDEF(MP_QSTR_AUTH_WAPI_PSK, (const byte*)"\x6a\x36\x0d" "AUTH_WAPI_PSK")
QDEF(MP_QSTR_AUTH_MAX, (const byte*)"\x66\x8d\x08" "AUTH_MAX")
QDEF(MP_QSTR_PHY_LAN8720, (const byte*)"\xf5\x1f\x0b" "PHY_LAN8720")
QDEF(MP_QSTR_PHY_IP101, (const byte*)"\x72\x61\x09" "PHY_IP101")
QDEF(MP_QSTR_PHY_RTL8201, (const byte*)"\xda\xf4\x0b" "PHY_RTL8201")
QDEF(MP_QSTR_PHY_DP83848, (const byte*)"\x90\x31\x0b" "PHY_DP83848")
QDEF(MP_QSTR_PHY_KSZ8041, (const byte*)"\x74\x05\x0b" "PHY_KSZ8041")
QDEF(MP_QSTR_ETH_INITIALIZED, (const byte*)"\x2f\x28\x0f" "ETH_INITIALIZED")
QDEF(MP_QSTR_ETH_STARTED, (const byte*)"\xe2\x5b\x0b" "ETH_STARTED")
QDEF(MP_QSTR_ETH_STOPPED, (const byte*)"\x2a\xe6\x0b" "ETH_STOPPED")
QDEF(MP_QSTR_ETH_CONNECTED, (const byte*)"\xbc\xc7\x0d" "ETH_CONNECTED")
QDEF(MP_QSTR_ETH_DISCONNECTED, (const byte*)"\x22\xc5\x10" "ETH_DISCONNECTED")
QDEF(MP_QSTR_ETH_GOT_IP, (const byte*)"\xf9\xe6\x0a" "ETH_GOT_IP")
QDEF(MP_QSTR_STAT_IDLE, (const byte*)"\x0c\x1f\x09" "STAT_IDLE")
QDEF(MP_QSTR_STAT_CONNECTING, (const byte*)"\xf6\xb2\x0f" "STAT_CONNECTING")
QDEF(MP_QSTR_STAT_GOT_IP, (const byte*)"\xb2\xf2\x0b" "STAT_GOT_IP")
QDEF(MP_QSTR_STAT_NO_AP_FOUND, (const byte*)"\xee\xcd\x10" "STAT_NO_AP_FOUND")
QDEF(MP_QSTR_STAT_WRONG_PASSWORD, (const byte*)"\x0b\x98\x13" "STAT_WRONG_PASSWORD")
QDEF(MP_QSTR_STAT_BEACON_TIMEOUT, (const byte*)"\xa8\x58\x13" "STAT_BEACON_TIMEOUT")
QDEF(MP_QSTR_STAT_ASSOC_FAIL, (const byte*)"\xf8\xa8\x0f" "STAT_ASSOC_FAIL")
QDEF(MP_QSTR_STAT_HANDSHAKE_TIMEOUT, (const byte*)"\xfb\x42\x16" "STAT_HANDSHAKE_TIMEOUT")
QDEF(MP_QSTR_dupterm_notify, (const byte*)"\xb6\x77\x0e" "dupterm_notify")
QDEF(MP_QSTR_time_ns, (const byte*)"\x72\xb2\x07" "time_ns")
QDEF(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF(MP_QSTR__onewire, (const byte*)"\xf7\x79\x08" "_onewire")
QDEF(MP_QSTR_mdc, (const byte*)"\x4f\x44\x03" "mdc")
QDEF(MP_QSTR_mdio, (const byte*)"\x8a\xcc\x04" "mdio")
QDEF(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF(MP_QSTR_phy_addr, (const byte*)"\xa8\xcc\x08" "phy_addr")
QDEF(MP_QSTR_phy_type, (const byte*)"\x83\xc7\x08" "phy_type")
QDEF(MP_QSTR_authmode, (const byte*)"\xce\x65\x08" "authmode")
QDEF(MP_QSTR_username, (const byte*)"\x33\x98\x08" "username")
QDEF(MP_QSTR_AUTH_NONE, (const byte*)"\x18\x46\x09" "AUTH_NONE")
QDEF(MP_QSTR_AUTH_PAP, (const byte*)"\x73\x12\x08" "AUTH_PAP")
QDEF(MP_QSTR_AUTH_CHAP, (const byte*)"\x48\x85\x09" "AUTH_CHAP")
QDEF(MP_QSTR_hidden, (const byte*)"\xef\x48\x06" "hidden")
QDEF(MP_QSTR_dhcp_hostname, (const byte*)"\xa2\x49\x0d" "dhcp_hostname")
QDEF(MP_QSTR_max_clients, (const byte*)"\x84\xf5\x0b" "max_clients")
QDEF(MP_QSTR_reconnects, (const byte*)"\x9f\x3e\x0a" "reconnects")
QDEF(MP_QSTR_HSPI, (const byte*)"\xc7\xe9\x04" "HSPI")
QDEF(MP_QSTR_hard, (const byte*)"\xda\x70\x04" "hard")
QDEF(MP_QSTR_sleep_type, (const byte*)"\xed\x70\x0a" "sleep_type")
QDEF(MP_QSTR_flash_id, (const byte*)"\x27\x67\x08" "flash_id")
QDEF(MP_QSTR_apa102_write, (const byte*)"\xc4\x3d\x0c" "apa102_write")
QDEF(MP_QSTR_freemem, (const byte*)"\xd4\xdb\x07" "freemem")
QDEF(MP_QSTR_meminfo, (const byte*)"\xce\x21\x07" "meminfo")
QDEF(MP_QSTR_check_fw, (const byte*)"\x0d\xf6\x08" "check_fw")
QDEF(MP_QSTR_malloc, (const byte*)"\x85\x61\x06" "malloc")
QDEF(MP_QSTR_free, (const byte*)"\xf1\x3a\x04" "free")
QDEF(MP_QSTR_esf_free_bufs, (const byte*)"\xe3\xa6\x0d" "esf_free_bufs")
QDEF(MP_QSTR_set_native_code_location, (const byte*)"\x69\x21\x18" "set_native_code_location")
QDEF(MP_QSTR_SLEEP_NONE, (const byte*)"\x5f\x48\x0a" "SLEEP_NONE")
QDEF(MP_QSTR_SLEEP_LIGHT, (const byte*)"\xcb\x0e\x0b" "SLEEP_LIGHT")
QDEF(MP_QSTR_SLEEP_MODEM, (const byte*)"\x7b\x2a\x0b" "SLEEP_MODEM")
QDEF(MP_QSTR_STAT_CONNECT_FAIL, (const byte*)"\x0b\x43\x11" "STAT_CONNECT_FAIL")
QDEF(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF(MP_QSTR_LED, (const byte*)"\x88\xdc\x03" "LED")
QDEF(MP_QSTR_cpu, (const byte*)"\xc3\x4d\x03" "cpu")
QDEF(MP_QSTR_af, (const byte*)"\x22\x6e\x02" "af")
QDEF(MP_QSTR_low, (const byte*)"\x31\x3f\x03" "low")
QDEF(MP_QSTR_high, (const byte*)"\x2b\x4c\x04" "high")
QDEF(MP_QSTR_PULL_UP_47K, (const byte*)"\x2d\x4d\x0b" "PULL_UP_47K")
QDEF(MP_QSTR_PULL_UP_22K, (const byte*)"\x4e\x66\x0b" "PULL_UP_22K")
QDEF(MP_QSTR_DRIVER_OFF, (const byte*)"\x6b\x65\x0a" "DRIVER_OFF")
QDEF(MP_QSTR_POWER_0, (const byte*)"\x35\xfb\x07" "POWER_0")
QDEF(MP_QSTR_POWER_1, (const byte*)"\x34\xfb\x07" "POWER_1")
QDEF(MP_QSTR_POWER_2, (const byte*)"\x37\xfb\x07" "POWER_2")
QDEF(MP_QSTR_POWER_3, (const byte*)"\x36\xfb\x07" "POWER_3")
QDEF(MP_QSTR_POWER_4, (const byte*)"\x31\xfb\x07" "POWER_4")
QDEF(MP_QSTR_POWER_5, (const byte*)"\x30\xfb\x07" "POWER_5")
QDEF(MP_QSTR_POWER_6, (const byte*)"\x33\xfb\x07" "POWER_6")
QDEF(MP_QSTR_PinAF, (const byte*)"\x35\x58\x05" "PinAF")
QDEF(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF(MP_QSTR_xor, (const byte*)"\x20\x93\x03" "xor")
QDEF(MP_QSTR_deadtime, (const byte*)"\x54\xf8\x08" "deadtime")
QDEF(MP_QSTR_calibration, (const byte*)"\xaf\x33\x0b" "calibration")
QDEF(MP_QSTR_present, (const byte*)"\xee\x18\x07" "present")
QDEF(MP_QSTR_gap_ns, (const byte*)"\x91\x0e\x06" "gap_ns")
QDEF(MP_QSTR_timeout_ms, (const byte*)"\x5f\x45\x0a" "timeout_ms")
QDEF(MP_QSTR_mimxrt, (const byte*)"\x12\xf7\x06" "mimxrt")
QDEF(MP_QSTR_phy_clock, (const byte*)"\xf3\x26\x09" "phy_clock")
QDEF(MP_QSTR_low_power, (const byte*)"\xb1\x95\x09" "low_power")
QDEF(MP_QSTR_PHY_KSZ8081, (const byte*)"\xf8\x05\x0b" "PHY_KSZ8081")
QDEF(MP_QSTR_PHY_DP83825, (const byte*)"\x5b\x32\x0b" "PHY_DP83825")
QDEF(MP_QSTR__slash_sd, (const byte*)"\xb7\xfc\x09" "_slash_sd")
QDEF(MP_QSTR__slash_sd_slash_lib, (const byte*)"\x75\x64\x13" "_slash_sd_slash_lib")
QDEF(MP_QSTR_nrf, (const byte*)"\x1f\x5a\x03" "nrf")
QDEF(MP_QSTR_ubluepy, (const byte*)"\xe7\xb8\x07" "ubluepy")
QDEF(MP_QSTR_music, (const byte*)"\x04\x7c\x05" "music")
QDEF(MP_QSTR_ble, (const byte*)"\x4e\x48\x03" "ble")
QDEF(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF(MP_QSTR_a, (const byte*)"\xc4\xb5\x01" "a")
QDEF(MP_QSTR_a2, (const byte*)"\x76\x6e\x02" "a2")
QDEF(MP_QSTR_a4, (const byte*)"\x70\x6e\x02" "a4")
QDEF(MP_QSTR_b, (const byte*)"\xc7\xb5\x01" "b")
QDEF(MP_QSTR_b2, (const byte*)"\x95\x6e\x02" "b2")
QDEF(MP_QSTR_b3, (const byte*)"\x94\x6e\x02" "b3")
QDEF(MP_QSTR_b4, (const byte*)"\x93\x6e\x02" "b4")
QDEF(MP_QSTR_b5, (const byte*)"\x92\x6e\x02" "b5")
QDEF(MP_QSTR_c, (const byte*)"\xc6\xb5\x01" "c")
QDEF(MP_QSTR_c2, (const byte*)"\xb4\x6e\x02" "c2")
QDEF(MP_QSTR_c3, (const byte*)"\xb5\x6e\x02" "c3")
QDEF(MP_QSTR_c4, (const byte*)"\xb2\x6e\x02" "c4")
QDEF(MP_QSTR_c5, (const byte*)"\xb3\x6e\x02" "c5")
QDEF(MP_QSTR_d, (const byte*)"\xc1\xb5\x01" "d")
QDEF(MP_QSTR_d3, (const byte*)"\xd2\x6d\x02" "d3")
QDEF(MP_QSTR_d4, (const byte*)"\xd5\x6d\x02" "d4")
QDEF(MP_QSTR_d5, (const byte*)"\xd4\x6d\x02" "d5")
QDEF(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF(MP_QSTR_e3, (const byte*)"\xf3\x6d\x02" "e3")
QDEF(MP_QSTR_e4, (const byte*)"\xf4\x6d\x02" "e4")
QDEF(MP_QSTR_e5, (const byte*)"\xf5\x6d\x02" "e5")
QDEF(MP_QSTR_e6, (const byte*)"\xf6\x6d\x02" "e6")
QDEF(MP_QSTR_eb, (const byte*)"\xa2\x6d\x02" "eb")
QDEF(MP_QSTR_f, (const byte*)"\xc3\xb5\x01" "f")
QDEF(MP_QSTR_f2, (const byte*)"\x11\x6e\x02" "f2")
QDEF(MP_QSTR_g, (const byte*)"\xc2\xb5\x01" "g")
QDEF(MP_QSTR_g3, (const byte*)"\x31\x6e\x02" "g3")
QDEF(MP_QSTR_g4, (const byte*)"\x36\x6e\x02" "g4")
QDEF(MP_QSTR_g5, (const byte*)"\x37\x6e\x02" "g5")
QDEF(MP_QSTR_r4, (const byte*)"\x83\x70\x02" "r4")
QDEF(MP_QSTR_AF, (const byte*)"\x22\x72\x02" "AF")
QDEF(MP_QSTR_P, (const byte*)"\xf5\xb5\x01" "P")
QDEF(MP_QSTR_microbit, (const byte*)"\xc0\xa6\x08" "microbit")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF(MP_QSTR_image, (const byte*)"\x42\xa0\x05" "image")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF(MP_QSTR_wait, (const byte*)"\x8e\x55\x04" "wait")
QDEF(MP_QSTR_monospace, (const byte*)"\xe2\x26\x09" "monospace")
QDEF(MP_QSTR_get_pixel, (const byte*)"\xa4\x17\x09" "get_pixel")
QDEF(MP_QSTR_set_pixel, (const byte*)"\xb0\xda\x09" "set_pixel")
QDEF(MP_QSTR_show, (const byte*)"\x86\xaa\x04" "show")
QDEF(MP_QSTR_is_on, (const byte*)"\x61\x25\x05" "is_on")
QDEF(MP_QSTR_MicroBitDisplay, (const byte*)"\x5a\xa0\x0f" "MicroBitDisplay")
QDEF(MP_QSTR_height, (const byte*)"\xfa\x33\x06" "height")
QDEF(MP_QSTR_shift_left, (const byte*)"\xa1\x65\x0a" "shift_left")
QDEF(MP_QSTR_shift_right, (const byte*)"\xba\x68\x0b" "shift_right")
QDEF(MP_QSTR_shift_up, (const byte*)"\xdf\x5f\x08" "shift_up")
QDEF(MP_QSTR_shift_down, (const byte*)"\x48\xad\x0a" "shift_down")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF(MP_QSTR_crop, (const byte*)"\x0b\xf0\x04" "crop")
QDEF(MP_QSTR_HEART, (const byte*)"\x0f\x3d\x05" "HEART")
QDEF(MP_QSTR_HEART_SMALL, (const byte*)"\xcf\x48\x0b" "HEART_SMALL")
QDEF(MP_QSTR_HAPPY, (const byte*)"\x15\xaa\x05" "HAPPY")
QDEF(MP_QSTR_SMILE, (const byte*)"\x9b\x59\x05" "SMILE")
QDEF(MP_QSTR_SAD, (const byte*)"\x93\x13\x03" "SAD")
QDEF(MP_QSTR_CONFUSED, (const byte*)"\xa6\xd4\x08" "CONFUSED")
QDEF(MP_QSTR_ANGRY, (const byte*)"\x26\x30\x05" "ANGRY")
QDEF(MP_QSTR_ASLEEP, (const byte*)"\x0b\x24\x06" "ASLEEP")
QDEF(MP_QSTR_SURPRISED, (const byte*)"\x88\x10\x09" "SURPRISED")
QDEF(MP_QSTR_SILLY, (const byte*)"\xc6\x7e\x05" "SILLY")
QDEF(MP_QSTR_FABULOUS, (const byte*)"\x30\x06\x08" "FABULOUS")
QDEF(MP_QSTR_MEH, (const byte*)"\x05\xc8\x03" "MEH")
QDEF(MP_QSTR_YES, (const byte*)"\x0a\x1c\x03" "YES")
QDEF(MP_QSTR_NO, (const byte*)"\x04\x73\x02" "NO")
QDEF(MP_QSTR_CLOCK12, (const byte*)"\x6e\x4b\x07" "CLOCK12")
QDEF(MP_QSTR_CLOCK1, (const byte*)"\xdc\x4f\x06" "CLOCK1")
QDEF(MP_QSTR_CLOCK2, (const byte*)"\xdf\x4f\x06" "CLOCK2")
QDEF(MP_QSTR_CLOCK3, (const byte*)"\xde\x4f\x06" "CLOCK3")
QDEF(MP_QSTR_CLOCK4, (const byte*)"\xd9\x4f\x06" "CLOCK4")
QDEF(MP_QSTR_CLOCK5, (const byte*)"\xd8\x4f\x06" "CLOCK5")
QDEF(MP_QSTR_CLOCK6, (const byte*)"\xdb\x4f\x06" "CLOCK6")
QDEF(MP_QSTR_CLOCK7, (const byte*)"\xda\x4f\x06" "CLOCK7")
QDEF(MP_QSTR_CLOCK8, (const byte*)"\xd5\x4f\x06" "CLOCK8")
QDEF(MP_QSTR_CLOCK9, (const byte*)"\xd4\x4f\x06" "CLOCK9")
QDEF(MP_QSTR_CLOCK10, (const byte*)"\x6c\x4b\x07" "CLOCK10")
QDEF(MP_QSTR_CLOCK11, (const byte*)"\x6d\x4b\x07" "CLOCK11")
QDEF(MP_QSTR_ARROW_N, (const byte*)"\xed\x96\x07" "ARROW_N")
QDEF(MP_QSTR_ARROW_NE, (const byte*)"\xc8\x74\x08" "ARROW_NE")
QDEF(MP_QSTR_ARROW_E, (const byte*)"\xe6\x96\x07" "ARROW_E")
QDEF(MP_QSTR_ARROW_SE, (const byte*)"\xb5\x74\x08" "ARROW_SE")
QDEF(MP_QSTR_ARROW_S, (const byte*)"\xf0\x96\x07" "ARROW_S")
QDEF(MP_QSTR_ARROW_SW, (const byte*)"\xa7\x74\x08" "ARROW_SW")
QDEF(MP_QSTR_ARROW_W, (const byte*)"\xf4\x96\x07" "ARROW_W")
QDEF(MP_QSTR_ARROW_NW, (const byte*)"\xda\x74\x08" "ARROW_NW")
QDEF(MP_QSTR_TRIANGLE, (const byte*)"\xeb\x82\x08" "TRIANGLE")
QDEF(MP_QSTR_TRIANGLE_LEFT, (const byte*)"\x8f\x20\x0d" "TRIANGLE_LEFT")
QDEF(MP_QSTR_CHESSBOARD, (const byte*)"\x51\xb9\x0a" "CHESSBOARD")
QDEF(MP_QSTR_DIAMOND, (const byte*)"\xa1\x86\x07" "DIAMOND")
QDEF(MP_QSTR_DIAMOND_SMALL, (const byte*)"\x61\xd1\x0d" "DIAMOND_SMALL")
QDEF(MP_QSTR_SQUARE, (const byte*)"\x84\x69\x06" "SQUARE")
QDEF(MP_QSTR_SQUARE_SMALL, (const byte*)"\x84\xd0\x0c" "SQUARE_SMALL")
QDEF(MP_QSTR_RABBIT, (const byte*)"\xeb\xc0\x06" "RABBIT")
QDEF(MP_QSTR_COW, (const byte*)"\x5e\xd0\x03" "COW")
QDEF(MP_QSTR_MUSIC_CROTCHET, (const byte*)"\xab\xd3\x0e" "MUSIC_CROTCHET")
QDEF(MP_QSTR_MUSIC_QUAVER, (const byte*)"\x5f\x8f\x0c" "MUSIC_QUAVER")
QDEF(MP_QSTR_MUSIC_QUAVERS, (const byte*)"\x6c\x7b\x0d" "MUSIC_QUAVERS")
QDEF(MP_QSTR_PITCHFORK, (const byte*)"\x33\x24\x09" "PITCHFORK")
QDEF(MP_QSTR_XMAS, (const byte*)"\xe2\x21\x04" "XMAS")
QDEF(MP_QSTR_PACMAN, (const byte*)"\x55\x40\x06" "PACMAN")
QDEF(MP_QSTR_TARGET, (const byte*)"\xb4\x5a\x06" "TARGET")
QDEF(MP_QSTR_ALL_CLOCKS, (const byte*)"\xc0\x59\x0a" "ALL_CLOCKS")
QDEF(MP_QSTR_ALL_ARROWS, (const byte*)"\xf1\x51\x0a" "ALL_ARROWS")
QDEF(MP_QSTR_TSHIRT, (const byte*)"\x45\x3d\x06" "TSHIRT")
QDEF(MP_QSTR_ROLLERSKATE, (const byte*)"\x27\x1f\x0b" "ROLLERSKATE")
QDEF(MP_QSTR_DUCK, (const byte*)"\x3c\x4f\x04" "DUCK")
QDEF(MP_QSTR_HOUSE, (const byte*)"\xa1\x63\x05" "HOUSE")
QDEF(MP_QSTR_TORTOISE, (const byte*)"\xc8\xd5\x08" "TORTOISE")
QDEF(MP_QSTR_BUTTERFLY, (const byte*)"\x56\x94\x09" "BUTTERFLY")
QDEF(MP_QSTR_STICKFIGURE, (const byte*)"\xe9\x6c\x0b" "STICKFIGURE")
QDEF(MP_QSTR_GHOST, (const byte*)"\xc2\x57\x05" "GHOST")
QDEF(MP_QSTR_SWORD, (const byte*)"\x98\xa6\x05" "SWORD")
QDEF(MP_QSTR_GIRAFFE, (const byte*)"\x7d\x70\x07" "GIRAFFE")
QDEF(MP_QSTR_SKULL, (const byte*)"\x48\x5e\x05" "SKULL")
QDEF(MP_QSTR_UMBRELLA, (const byte*)"\xc9\xfe\x08" "UMBRELLA")
QDEF(MP_QSTR_SNAKE, (const byte*)"\x97\xdc\x05" "SNAKE")
QDEF(MP_QSTR_MicroBitImage, (const byte*)"\x87\x84\x0d" "MicroBitImage")
QDEF(MP_QSTR_ScrollingString, (const byte*)"\xbd\x54\x0f" "ScrollingString")
QDEF(MP_QSTR_Facade, (const byte*)"\xc1\x02\x06" "Facade")
QDEF(MP_QSTR_Image, (const byte*)"\x62\xa0\x05" "Image")
QDEF(MP_QSTR_display, (const byte*)"\x1f\x55\x07" "display")
QDEF(MP_QSTR_button_a, (const byte*)"\xed\x60\x08" "button_a")
QDEF(MP_QSTR_button_b, (const byte*)"\xee\x60\x08" "button_b")
QDEF(MP_QSTR_accelerometer, (const byte*)"\x1e\x32\x0d" "accelerometer")
QDEF(MP_QSTR_compass, (const byte*)"\x55\xa7\x07" "compass")
QDEF(MP_QSTR_i2c, (const byte*)"\x5d\x5f\x03" "i2c")
QDEF(MP_QSTR_uart, (const byte*)"\x77\x1a\x04" "uart")
QDEF(MP_QSTR_spi, (const byte*)"\xcf\x8d\x03" "spi")
QDEF(MP_QSTR_running_time, (const byte*)"\xc8\xe0\x0c" "running_time")
QDEF(MP_QSTR_panic, (const byte*)"\xd0\x1c\x05" "panic")
QDEF(MP_QSTR_temperature, (const byte*)"\xe9\xde\x0b" "temperature")
QDEF(MP_QSTR_pin0, (const byte*)"\x02\xf2\x04" "pin0")
QDEF(MP_QSTR_pin1, (const byte*)"\x03\xf2\x04" "pin1")
QDEF(MP_QSTR_pin2, (const byte*)"\x00\xf2\x04" "pin2")
QDEF(MP_QSTR_pin3, (const byte*)"\x01\xf2\x04" "pin3")
QDEF(MP_QSTR_pin4, (const byte*)"\x06\xf2\x04" "pin4")
QDEF(MP_QSTR_pin5, (const byte*)"\x07\xf2\x04" "pin5")
QDEF(MP_QSTR_pin6, (const byte*)"\x04\xf2\x04" "pin6")
QDEF(MP_QSTR_pin7, (const byte*)"\x05\xf2\x04" "pin7")
QDEF(MP_QSTR_pin8, (const byte*)"\x0a\xf2\x04" "pin8")
QDEF(MP_QSTR_pin9, (const byte*)"\x0b\xf2\x04" "pin9")
QDEF(MP_QSTR_pin10, (const byte*)"\x53\x32\x05" "pin10")
QDEF(MP_QSTR_pin11, (const byte*)"\x52\x32\x05" "pin11")
QDEF(MP_QSTR_pin12, (const byte*)"\x51\x32\x05" "pin12")
QDEF(MP_QSTR_pin13, (const byte*)"\x50\x32\x05" "pin13")
QDEF(MP_QSTR_pin14, (const byte*)"\x57\x32\x05" "pin14")
QDEF(MP_QSTR_pin15, (const byte*)"\x56\x32\x05" "pin15")
QDEF(MP_QSTR_pin16, (const byte*)"\x55\x32\x05" "pin16")
QDEF(MP_QSTR_pin19, (const byte*)"\x5a\x32\x05" "pin19")
QDEF(MP_QSTR_pin20, (const byte*)"\x30\x32\x05" "pin20")
QDEF(MP_QSTR_enabled, (const byte*)"\xe0\x9e\x07" "enabled")
QDEF(MP_QSTR_address, (const byte*)"\x73\x53\x07" "address")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x37\x09" "repl_info")
QDEF(MP_QSTR_battery_level, (const byte*)"\xa1\x5b\x0d" "battery_level")
QDEF(MP_QSTR_RTCounter, (const byte*)"\xf7\x09\x09" "RTCounter")
QDEF(MP_QSTR_Temp, (const byte*)"\xc9\x55\x04" "Temp")
QDEF(MP_QSTR_LOCKUP_RESET, (const byte*)"\x61\xcf\x0c" "LOCKUP_RESET")
QDEF(MP_QSTR_LPCOMP_RESET, (const byte*)"\x62\xa8\x0c" "LPCOMP_RESET")
QDEF(MP_QSTR_DEBUG_IF_RESET, (const byte*)"\xae\x8e\x0e" "DEBUG_IF_RESET")
QDEF(MP_QSTR_NFC_RESET, (const byte*)"\x84\xcf\x09" "NFC_RESET")
QDEF(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF(MP_QSTR_names, (const byte*)"\x91\x29\x05" "names")
QDEF(MP_QSTR_af_list, (const byte*)"\x5f\x80\x07" "af_list")
QDEF(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF(MP_QSTR_mapper, (const byte*)"\x5e\x05\x06" "mapper")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\xf2\x06" "ANALOG")
QDEF(MP_QSTR_PULL_DISABLED, (const byte*)"\x8f\x4f\x0d" "PULL_DISABLED")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x27\x06" "OUT_PP")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x2a\x06" "OUT_OD")
QDEF(MP_QSTR_AF_PP, (const byte*)"\x7d\x2f\x05" "AF_PP")
QDEF(MP_QSTR_AF_OD, (const byte*)"\x96\x2f\x05" "AF_OD")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\xb5\x09" "PULL_NONE")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF(MP_QSTR_reg, (const byte*)"\x75\x8b\x03" "reg")
QDEF(MP_QSTR_pulse_width, (const byte*)"\x23\x14\x0b" "pulse_width")
QDEF(MP_QSTR_FREQ_16MHZ, (const byte*)"\xc2\xf4\x0a" "FREQ_16MHZ")
QDEF(MP_QSTR_FREQ_8MHZ, (const byte*)"\x3d\x35\x09" "FREQ_8MHZ")
QDEF(MP_QSTR_FREQ_4MHZ, (const byte*)"\xb1\x65\x09" "FREQ_4MHZ")
QDEF(MP_QSTR_FREQ_2MHZ, (const byte*)"\x77\x1d\x09" "FREQ_2MHZ")
QDEF(MP_QSTR_FREQ_1MHZ, (const byte*)"\x94\xb9\x09" "FREQ_1MHZ")
QDEF(MP_QSTR_FREQ_500KHZ, (const byte*)"\x16\x80\x0b" "FREQ_500KHZ")
QDEF(MP_QSTR_FREQ_250KHZ, (const byte*)"\x34\xa6\x0b" "FREQ_250KHZ")
QDEF(MP_QSTR_FREQ_125KHZ, (const byte*)"\x35\x7b\x0b" "FREQ_125KHZ")
QDEF(MP_QSTR_MODE_LOW_HIGH, (const byte*)"\x7c\x51\x0d" "MODE_LOW_HIGH")
QDEF(MP_QSTR_MODE_HIGH_LOW, (const byte*)"\x5c\x47\x0d" "MODE_HIGH_LOW")
QDEF(MP_QSTR_counter, (const byte*)"\x11\x42\x07" "counter")
QDEF(MP_QSTR_ONESHOT, (const byte*)"\x61\x0b\x07" "ONESHOT")
QDEF(MP_QSTR_FREQUENCY, (const byte*)"\x01\x86\x09" "FREQUENCY")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\xe0\x09" "writechar")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x92\x08" "readchar")
QDEF(MP_QSTR_frequency, (const byte*)"\xa1\xce\x09" "frequency")
QDEF(MP_QSTR_duration, (const byte*)"\x7b\x4b\x08" "duration")
QDEF(MP_QSTR_ticks, (const byte*)"\x43\x08\x05" "ticks")
QDEF(MP_QSTR_bpm, (const byte*)"\xda\x49\x03" "bpm")
QDEF(MP_QSTR_set_tempo, (const byte*)"\x9b\xfc\x09" "set_tempo")
QDEF(MP_QSTR_get_tempo, (const byte*)"\x8f\x3b\x09" "get_tempo")
QDEF(MP_QSTR_play, (const byte*)"\x21\xde\x04" "play")
QDEF(MP_QSTR_pitch, (const byte*)"\x83\x01\x05" "pitch")
QDEF(MP_QSTR_DADADADUM, (const byte*)"\xfc\x71\x09" "DADADADUM")
QDEF(MP_QSTR_ENTERTAINER, (const byte*)"\x48\x17\x0b" "ENTERTAINER")
QDEF(MP_QSTR_PRELUDE, (const byte*)"\x3a\x1b\x07" "PRELUDE")
QDEF(MP_QSTR_ODE, (const byte*)"\x6b\xe1\x03" "ODE")
QDEF(MP_QSTR_NYAN, (const byte*)"\x3d\x77\x04" "NYAN")
QDEF(MP_QSTR_RINGTONE, (const byte*)"\xc7\x9b\x08" "RINGTONE")
QDEF(MP_QSTR_FUNK, (const byte*)"\xd3\x47\x04" "FUNK")
QDEF(MP_QSTR_BLUES, (const byte*)"\xc8\xa2\x05" "BLUES")
QDEF(MP_QSTR_BIRTHDAY, (const byte*)"\xfc\x89\x08" "BIRTHDAY")
QDEF(MP_QSTR_WEDDING, (const byte*)"\x17\xa2\x07" "WEDDING")
QDEF(MP_QSTR_FUNERAL, (const byte*)"\x42\xd3\x07" "FUNERAL")
QDEF(MP_QSTR_PUNCHLINE, (const byte*)"\xeb\xe7\x09" "PUNCHLINE")
QDEF(MP_QSTR_PYTHON, (const byte*)"\xb1\x5e\x06" "PYTHON")
QDEF(MP_QSTR_BADDY, (const byte*)"\x9f\x83\x05" "BADDY")
QDEF(MP_QSTR_CHASE, (const byte*)"\x59\xc2\x05" "CHASE")
QDEF(MP_QSTR_BA_DING, (const byte*)"\x9d\xd3\x07" "BA_DING")
QDEF(MP_QSTR_WAWAWAWAA, (const byte*)"\x64\x81\x09" "WAWAWAWAA")
QDEF(MP_QSTR_JUMP_UP, (const byte*)"\xfd\xca\x07" "JUMP_UP")
QDEF(MP_QSTR_JUMP_DOWN, (const byte*)"\xaa\x53\x09" "JUMP_DOWN")
QDEF(MP_QSTR_POWER_UP, (const byte*)"\x00\x65\x08" "POWER_UP")
QDEF(MP_QSTR_POWER_DOWN, (const byte*)"\x97\xdf\x0a" "POWER_DOWN")
QDEF(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF(MP_QSTR_dcdc, (const byte*)"\x05\xd2\x04" "dcdc")
QDEF(MP_QSTR_unused_flash_start, (const byte*)"\xc9\x80\x12" "unused_flash_start")
QDEF(MP_QSTR_unused_flash_length, (const byte*)"\x95\xfd\x13" "unused_flash_length")
QDEF(MP_QSTR_Peripheral, (const byte*)"\x29\xea\x0a" "Peripheral")
QDEF(MP_QSTR_Central, (const byte*)"\xe6\xea\x07" "Central")
QDEF(MP_QSTR_Scanner, (const byte*)"\xa3\xd1\x07" "Scanner")
QDEF(MP_QSTR_ScanEntry, (const byte*)"\xee\xe2\x09" "ScanEntry")
QDEF(MP_QSTR_DefaultDelegate, (const byte*)"\xf1\xcf\x0f" "DefaultDelegate")
QDEF(MP_QSTR_Service, (const byte*)"\xb8\xb4\x07" "Service")
QDEF(MP_QSTR_Characteristic, (const byte*)"\x58\x7e\x0e" "Characteristic")
QDEF(MP_QSTR_constants, (const byte*)"\x28\xa1\x09" "constants")
QDEF(MP_QSTR_Descriptor, (const byte*)"\xb6\x88\x0a" "Descriptor")
QDEF(MP_QSTR_uuid, (const byte*)"\xc8\xe9\x04" "uuid")
QDEF(MP_QSTR_props, (const byte*)"\x8b\xc0\x05" "props")
QDEF(MP_QSTR_attrs, (const byte*)"\x05\x53\x05" "attrs")
QDEF(MP_QSTR_with_response, (const byte*)"\xbb\x13\x0d" "with_response")
QDEF(MP_QSTR_supportsRead, (const byte*)"\xcb\x97\x0c" "supportsRead")
QDEF(MP_QSTR_propertiesToString, (const byte*)"\x4a\xe0\x12" "propertiesToString")
QDEF(MP_QSTR_getHandle, (const byte*)"\x99\xb8\x09" "getHandle")
QDEF(MP_QSTR_peripheral, (const byte*)"\x49\xc6\x0a" "peripheral")
QDEF(MP_QSTR_properties, (const byte*)"\x24\xf3\x0a" "properties")
QDEF(MP_QSTR_PROP_BROADCAST, (const byte*)"\x78\x40\x0e" "PROP_BROADCAST")
QDEF(MP_QSTR_PROP_READ, (const byte*)"\x15\x45\x09" "PROP_READ")
QDEF(MP_QSTR_PROP_WRITE_WO_RESP, (const byte*)"\xf6\xa6\x12" "PROP_WRITE_WO_RESP")
QDEF(MP_QSTR_PROP_WRITE, (const byte*)"\x9a\xd2\x0a" "PROP_WRITE")
QDEF(MP_QSTR_PROP_NOTIFY, (const byte*)"\x64\x8e\x0b" "PROP_NOTIFY")
QDEF(MP_QSTR_PROP_INDICATE, (const byte*)"\x3e\x69\x0d" "PROP_INDICATE")
QDEF(MP_QSTR_PROP_AUTH_SIGNED_WR, (const byte*)"\x38\x7c\x13" "PROP_AUTH_SIGNED_WR")
QDEF(MP_QSTR_ATTR_CCCD, (const byte*)"\xee\x2f\x09" "ATTR_CCCD")
QDEF(MP_QSTR_AD_TYPE_FLAGS, (const byte*)"\x67\x5f\x0d" "AD_TYPE_FLAGS")
QDEF(MP_QSTR_AD_TYPE_16BIT_SERVICE_UUID_MORE_AVAILABLE, (const byte*)"\x9c\x8e\x29" "AD_TYPE_16BIT_SERVICE_UUID_MORE_AVAILABLE")
QDEF(MP_QSTR_AD_TYPE_16BIT_SERVICE_UUID_COMPLETE, (const byte*)"\x06\x73\x23" "AD_TYPE_16BIT_SERVICE_UUID_COMPLETE")
QDEF(MP_QSTR_AD_TYPE_32BIT_SERVICE_UUID_MORE_AVAILABLE, (const byte*)"\x9a\x0e\x29" "AD_TYPE_32BIT_SERVICE_UUID_MORE_AVAILABLE")
QDEF(MP_QSTR_AD_TYPE_32BIT_SERVICE_UUID_COMPLETE, (const byte*)"\x00\xd8\x23" "AD_TYPE_32BIT_SERVICE_UUID_COMPLETE")
QDEF(MP_QSTR_AD_TYPE_128BIT_SERVICE_UUID_MORE_AVAILABLE, (const byte*)"\x80\xf7\x2a" "AD_TYPE_128BIT_SERVICE_UUID_MORE_AVAILABLE")
QDEF(MP_QSTR_AD_TYPE_128BIT_SERVICE_UUID_COMPLETE, (const byte*)"\x1a\x56\x24" "AD_TYPE_128BIT_SERVICE_UUID_COMPLETE")
QDEF(MP_QSTR_AD_TYPE_SHORT_LOCAL_NAME, (const byte*)"\xc0\x91\x18" "AD_TYPE_SHORT_LOCAL_NAME")
QDEF(MP_QSTR_AD_TYPE_COMPLETE_LOCAL_NAME, (const byte*)"\xfb\xd5\x1b" "AD_TYPE_COMPLETE_LOCAL_NAME")
QDEF(MP_QSTR_AD_TYPE_TX_POWER_LEVEL, (const byte*)"\x5d\xc2\x16" "AD_TYPE_TX_POWER_LEVEL")
QDEF(MP_QSTR_AD_TYPE_CLASS_OF_DEVICE, (const byte*)"\xa7\x86\x17" "AD_TYPE_CLASS_OF_DEVICE")
QDEF(MP_QSTR_AD_TYPE_SIMPLE_PAIRING_HASH_C, (const byte*)"\x32\xff\x1d" "AD_TYPE_SIMPLE_PAIRING_HASH_C")
QDEF(MP_QSTR_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R, (const byte*)"\xae\x98\x23" "AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R")
QDEF(MP_QSTR_AD_TYPE_SECURITY_MANAGER_TK_VALUE, (const byte*)"\xb6\xe9\x21" "AD_TYPE_SECURITY_MANAGER_TK_VALUE")
QDEF(MP_QSTR_AD_TYPE_SECURITY_MANAGER_OOB_FLAGS, (const byte*)"\xdf\x2e\x22" "AD_TYPE_SECURITY_MANAGER_OOB_FLAGS")
QDEF(MP_QSTR_AD_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE, (const byte*)"\xfc\x7d\x27" "AD_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE")
QDEF(MP_QSTR_AD_TYPE_SOLICITED_SERVICE_UUIDS_16BIT, (const byte*)"\xfa\xad\x25" "AD_TYPE_SOLICITED_SERVICE_UUIDS_16BIT")
QDEF(MP_QSTR_AD_TYPE_SOLICITED_SERVICE_UUIDS_128BIT, (const byte*)"\x26\x46\x26" "AD_TYPE_SOLICITED_SERVICE_UUIDS_128BIT")
QDEF(MP_QSTR_AD_TYPE_SERVICE_DATA, (const byte*)"\xea\x51\x14" "AD_TYPE_SERVICE_DATA")
QDEF(MP_QSTR_AD_TYPE_PUBLIC_TARGET_ADDRESS, (const byte*)"\x7e\x5f\x1d" "AD_TYPE_PUBLIC_TARGET_ADDRESS")
QDEF(MP_QSTR_AD_TYPE_RANDOM_TARGET_ADDRESS, (const byte*)"\x24\x20\x1d" "AD_TYPE_RANDOM_TARGET_ADDRESS")
QDEF(MP_QSTR_AD_TYPE_APPEARANCE, (const byte*)"\xc6\xbc\x12" "AD_TYPE_APPEARANCE")
QDEF(MP_QSTR_AD_TYPE_ADVERTISING_INTERVAL, (const byte*)"\x92\x4b\x1c" "AD_TYPE_ADVERTISING_INTERVAL")
QDEF(MP_QSTR_AD_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS, (const byte*)"\x56\x02\x23" "AD_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS")
QDEF(MP_QSTR_AD_TYPE_LE_ROLE, (const byte*)"\xba\xfc\x0f" "AD_TYPE_LE_ROLE")
QDEF(MP_QSTR_AD_TYPE_SIMPLE_PAIRING_HASH_C256, (const byte*)"\x23\x3c\x20" "AD_TYPE_SIMPLE_PAIRING_HASH_C256")
QDEF(MP_QSTR_AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R256, (const byte*)"\x3f\xb7\x26" "AD_TYPE_SIMPLE_PAIRING_RANDOMIZER_R256")
QDEF(MP_QSTR_AD_TYPE_SERVICE_DATA_32BIT_UUID, (const byte*)"\x19\xb9\x1f" "AD_TYPE_SERVICE_DATA_32BIT_UUID")
QDEF(MP_QSTR_AD_TYPE_SERVICE_DATA_128BIT_UUID, (const byte*)"\xa3\x56\x20" "AD_TYPE_SERVICE_DATA_128BIT_UUID")
QDEF(MP_QSTR_AD_TYPE_URI, (const byte*)"\x96\x42\x0b" "AD_TYPE_URI")
QDEF(MP_QSTR_AD_TYPE_3D_INFORMATION_DATA, (const byte*)"\xd3\x15\x1b" "AD_TYPE_3D_INFORMATION_DATA")
QDEF(MP_QSTR_AD_TYPE_MANUFACTURER_SPECIFIC_DATA, (const byte*)"\x3f\x51\x22" "AD_TYPE_MANUFACTURER_SPECIFIC_DATA")
QDEF(MP_QSTR_ad_types, (const byte*)"\xb4\x6b\x08" "ad_types")
QDEF(MP_QSTR_EVT_GAP_CONNECTED, (const byte*)"\xab\x6e\x11" "EVT_GAP_CONNECTED")
QDEF(MP_QSTR_EVT_GAP_DISCONNECTED, (const byte*)"\xd5\xb4\x14" "EVT_GAP_DISCONNECTED")
QDEF(MP_QSTR_EVT_GATTS_WRITE, (const byte*)"\x4a\x92\x0f" "EVT_GATTS_WRITE")
QDEF(MP_QSTR_UUID_CCCD, (const byte*)"\x50\xed\x09" "UUID_CCCD")
QDEF(MP_QSTR_ADDR_TYPE_PUBLIC, (const byte*)"\x6f\x1e\x10" "ADDR_TYPE_PUBLIC")
QDEF(MP_QSTR_ADDR_TYPE_RANDOM_STATIC, (const byte*)"\xf2\x4b\x17" "ADDR_TYPE_RANDOM_STATIC")
QDEF(MP_QSTR_handleConnection, (const byte*)"\x19\xab\x10" "handleConnection")
QDEF(MP_QSTR_handleNotification, (const byte*)"\xa2\x77\x12" "handleNotification")
QDEF(MP_QSTR_handleDiscovery, (const byte*)"\x65\x82\x0f" "handleDiscovery")
QDEF(MP_QSTR_binVal, (const byte*)"\x9b\x5d\x06" "binVal")
QDEF(MP_QSTR_device_name, (const byte*)"\xe5\xd9\x0b" "device_name")
QDEF(MP_QSTR_services, (const byte*)"\xeb\x28\x08" "services")
QDEF(MP_QSTR_addr_type, (const byte*)"\xb1\xbc\x09" "addr_type")
QDEF(MP_QSTR_withDelegate, (const byte*)"\x78\xd8\x0c" "withDelegate")
QDEF(MP_QSTR_setNotificationHandler, (const byte*)"\xd2\xf6\x16" "setNotificationHandler")
QDEF(MP_QSTR_setConnectionHandler, (const byte*)"\x89\x67\x14" "setConnectionHandler")
QDEF(MP_QSTR_getServices, (const byte*)"\x3d\x81\x0b" "getServices")
QDEF(MP_QSTR_getServiceByUUID, (const byte*)"\xb8\xfb\x10" "getServiceByUUID")
QDEF(MP_QSTR_getCharacteristics, (const byte*)"\x9d\xf2\x12" "getCharacteristics")
QDEF(MP_QSTR_getDescriptors, (const byte*)"\xf3\x43\x0e" "getDescriptors")
QDEF(MP_QSTR_waitForNotifications, (const byte*)"\x2b\x66\x14" "waitForNotifications")
QDEF(MP_QSTR_writeCharacteristic, (const byte*)"\xc5\x75\x13" "writeCharacteristic")
QDEF(MP_QSTR_readCharacteristic, (const byte*)"\xaa\x3f\x12" "readCharacteristic")
QDEF(MP_QSTR_advertise, (const byte*)"\xca\x17\x09" "advertise")
QDEF(MP_QSTR_advertise_stop, (const byte*)"\xcd\x75\x0e" "advertise_stop")
QDEF(MP_QSTR_addService, (const byte*)"\xd9\x55\x0a" "addService")
QDEF(MP_QSTR_addCharacteristic, (const byte*)"\x99\xf3\x11" "addCharacteristic")
QDEF(MP_QSTR_addDescriptor, (const byte*)"\x37\x80\x0d" "addDescriptor")
QDEF(MP_QSTR_getScanData, (const byte*)"\xfc\xc2\x0b" "getScanData")
QDEF(MP_QSTR_getCharacteristic, (const byte*)"\x2e\x4d\x11" "getCharacteristic")
QDEF(MP_QSTR_PRIMARY, (const byte*)"\x49\x4a\x07" "PRIMARY")
QDEF(MP_QSTR_SECONDARY, (const byte*)"\xff\xad\x09" "SECONDARY")
QDEF(MP_QSTR_getCommonName, (const byte*)"\x79\x93\x0d" "getCommonName")
QDEF(MP_QSTR_writable, (const byte*)"\xf7\xd6\x08" "writable")
QDEF(MP_QSTR_TextIO, (const byte*)"\x1e\x49\x06" "TextIO")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF(MP_QSTR_clock, (const byte*)"\x2d\x65\x05" "clock")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x71\x03" "pyb")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x21\x06" "millis")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\xc2\x0e" "elapsed_millis")
QDEF(MP_QSTR_Switch, (const byte*)"\x97\x00\x06" "Switch")
QDEF(MP_QSTR_CORE_TEMP, (const byte*)"\xcd\x58\x09" "CORE_TEMP")
QDEF(MP_QSTR_rp2, (const byte*)"\x95\x89\x03" "rp2")
QDEF(MP_QSTR_PIO, (const byte*)"\x13\x10\x03" "PIO")
QDEF(MP_QSTR_StateMachine, (const byte*)"\xd7\xa6\x0c" "StateMachine")
QDEF(MP_QSTR__rp2, (const byte*)"\x0a\xe5\x04" "_rp2")
QDEF(MP_QSTR_add_program, (const byte*)"\x8f\x8b\x0b" "add_program")
QDEF(MP_QSTR_remove_program, (const byte*)"\x68\x75\x0e" "remove_program")
QDEF(MP_QSTR_state_machine, (const byte*)"\x28\xe9\x0d" "state_machine")
QDEF(MP_QSTR_IN_LOW, (const byte*)"\xe9\xb0\x06" "IN_LOW")
QDEF(MP_QSTR_IN_HIGH, (const byte*)"\x53\xd8\x07" "IN_HIGH")
QDEF(MP_QSTR_OUT_LOW, (const byte*)"\xc0\x60\x07" "OUT_LOW")
QDEF(MP_QSTR_OUT_HIGH, (const byte*)"\x9a\x82\x08" "OUT_HIGH")
QDEF(MP_QSTR_SHIFT_LEFT, (const byte*)"\xc1\xb2\x0a" "SHIFT_LEFT")
QDEF(MP_QSTR_SHIFT_RIGHT, (const byte*)"\x7a\x62\x0b" "SHIFT_RIGHT")
QDEF(MP_QSTR_JOIN_NONE, (const byte*)"\x12\xf1\x09" "JOIN_NONE")
QDEF(MP_QSTR_JOIN_TX, (const byte*)"\x54\xbe\x07" "JOIN_TX")
QDEF(MP_QSTR_JOIN_RX, (const byte*)"\x92\xbd\x07" "JOIN_RX")
QDEF(MP_QSTR_IRQ_SM0, (const byte*)"\x5e\xf0\x07" "IRQ_SM0")
QDEF(MP_QSTR_IRQ_SM1, (const byte*)"\x5f\xf0\x07" "IRQ_SM1")
QDEF(MP_QSTR_IRQ_SM2, (const byte*)"\x5c\xf0\x07" "IRQ_SM2")
QDEF(MP_QSTR_IRQ_SM3, (const byte*)"\x5d\xf0\x07" "IRQ_SM3")
QDEF(MP_QSTR_prog, (const byte*)"\xef\x81\x04" "prog")
QDEF(MP_QSTR_in_base, (const byte*)"\x08\xcc\x07" "in_base")
QDEF(MP_QSTR_out_base, (const byte*)"\xe1\x78\x08" "out_base")
QDEF(MP_QSTR_set_base, (const byte*)"\x6d\xca\x08" "set_base")
QDEF(MP_QSTR_jmp_pin, (const byte*)"\x1a\x93\x07" "jmp_pin")
QDEF(MP_QSTR_sideset_base, (const byte*)"\x16\xc1\x0c" "sideset_base")
QDEF(MP_QSTR_in_shiftdir, (const byte*)"\x82\xa1\x0b" "in_shiftdir")
QDEF(MP_QSTR_out_shiftdir, (const byte*)"\xeb\xd6\x0c" "out_shiftdir")
QDEF(MP_QSTR_push_thresh, (const byte*)"\xf4\xd9\x0b" "push_thresh")
QDEF(MP_QSTR_pull_thresh, (const byte*)"\x2f\xc5\x0b" "pull_thresh")
QDEF(MP_QSTR_asm_pio_encode, (const byte*)"\x6a\x75\x0e" "asm_pio_encode")
QDEF(MP_QSTR_restart, (const byte*)"\xb2\x75\x07" "restart")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF(MP_QSTR_rx_fifo, (const byte*)"\xf6\xd2\x07" "rx_fifo")
QDEF(MP_QSTR_tx_fifo, (const byte*)"\xf0\xc8\x07" "tx_fifo")
QDEF(MP_QSTR_PULL_OFF, (const byte*)"\xf0\x5e\x08" "PULL_OFF")
QDEF(MP_QSTR_uart_init, (const byte*)"\x12\x49\x09" "uart_init")
QDEF(MP_QSTR_uart_deinit, (const byte*)"\x93\xb6\x0b" "uart_deinit")
QDEF(MP_QSTR_samd, (const byte*)"\x9e\x86\x04" "samd")
QDEF(MP_QSTR_flash_version, (const byte*)"\x10\x5f\x0d" "flash_version")
QDEF(MP_QSTR_flash_init, (const byte*)"\x50\xe1\x0a" "flash_init")
QDEF(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF(MP_QSTR_z, (const byte*)"\xdf\xb5\x01" "z")
QDEF(MP_QSTR_tilt, (const byte*)"\x00\xc1\x04" "tilt")
QDEF(MP_QSTR_filtered_xyz, (const byte*)"\x20\x15\x0c" "filtered_xyz")
QDEF(MP_QSTR_Accel, (const byte*)"\xed\x6f\x05" "Accel")
QDEF(MP_QSTR_read_timed, (const byte*)"\xf9\xfe\x0a" "read_timed")
QDEF(MP_QSTR_read_timed_multi, (const byte*)"\x8f\x72\x10" "read_timed_multi")
QDEF(MP_QSTR_read_channel, (const byte*)"\xcb\xb6\x0c" "read_channel")
QDEF(MP_QSTR_read_core_temp, (const byte*)"\xe0\xc2\x0e" "read_core_temp")
QDEF(MP_QSTR_read_core_vbat, (const byte*)"\xed\xb7\x0e" "read_core_vbat")
QDEF(MP_QSTR_read_core_vref, (const byte*)"\x6b\x74\x0e" "read_core_vref")
QDEF(MP_QSTR_read_vref, (const byte*)"\x6f\x00\x09" "read_vref")
QDEF(MP_QSTR_ADCAll, (const byte*)"\x02\x28\x06" "ADCAll")
QDEF(MP_QSTR_noise, (const byte*)"\x9b\xf4\x05" "noise")
QDEF(MP_QSTR_triangle, (const byte*)"\xeb\x99\x08" "triangle")
QDEF(MP_QSTR_write_timed, (const byte*)"\x96\x4f\x0b" "write_timed")
QDEF(MP_QSTR_write_noise, (const byte*)"\x99\xd3\x0b" "write_noise")
QDEF(MP_QSTR_write_triangle, (const byte*)"\x29\x90\x0e" "write_triangle")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF(MP_QSTR_CIRCULAR, (const byte*)"\xb4\x76\x08" "CIRCULAR")
QDEF(MP_QSTR_swint, (const byte*)"\xb2\x7a\x05" "swint")
QDEF(MP_QSTR_regs, (const byte*)"\x66\xfa\x04" "regs")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\xd5\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_EVT_RISING, (const byte*)"\x55\xfe\x0a" "EVT_RISING")
QDEF(MP_QSTR_EVT_FALLING, (const byte*)"\x3a\x5d\x0b" "EVT_FALLING")
QDEF(MP_QSTR_EVT_RISING_FALLING, (const byte*)"\xcd\x08\x12" "EVT_RISING_FALLING")
QDEF(MP_QSTR_ExtInt, (const byte*)"\x7f\x5c\x06" "ExtInt")
QDEF(MP_QSTR_command, (const byte*)"\x02\x77\x07" "command")
QDEF(MP_QSTR_contrast, (const byte*)"\x07\x8a\x08" "contrast")
QDEF(MP_QSTR_light, (const byte*)"\xfb\x91\x05" "light")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\xdc\x03" "LCD")
QDEF(MP_QSTR_intensity, (const byte*)"\xca\x3d\x09" "intensity")
QDEF(MP_QSTR_VREF, (const byte*)"\xa2\x80\x04" "VREF")
QDEF(MP_QSTR_CORE_VREF, (const byte*)"\x06\x58\x09" "CORE_VREF")
QDEF(MP_QSTR_CORE_VBAT, (const byte*)"\x80\x9c\x09" "CORE_VBAT")
QDEF(MP_QSTR_timingr, (const byte*)"\xa7\x89\x07" "timingr")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x09\x0c" "read_buf_len")
QDEF(MP_QSTR_IRQ_RXIDLE, (const byte*)"\x7e\x72\x0a" "IRQ_RXIDLE")
QDEF(MP_QSTR_opt, (const byte*)"\xce\x5e\x03" "opt")
QDEF(MP_QSTR_HeartBeat, (const byte*)"\x5d\xc3\x09" "HeartBeat")
QDEF(MP_QSTR_patch_version, (const byte*)"\x6e\x98\x0d" "patch_version")
QDEF(MP_QSTR_patch_program, (const byte*)"\x40\x73\x0d" "patch_program")
QDEF(MP_QSTR_CC3K, (const byte*)"\x3d\xc6\x04" "CC3K")
QDEF(MP_QSTR_WIZNET5K, (const byte*)"\x80\x43\x08" "WIZNET5K")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\xc1\x0b" "fault_debug")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x51\x0a" "hard_reset")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x7e\x03" "wfi")
QDEF(MP_QSTR_irq_stats, (const byte*)"\x51\xa9\x09" "irq_stats")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\xd9\x07" "standby")
QDEF(MP_QSTR_repl_uart, (const byte*)"\x23\x58\x09" "repl_uart")
QDEF(MP_QSTR_country, (const byte*)"\xed\x44\x07" "country")
QDEF(MP_QSTR_usb_mode, (const byte*)"\xbd\x6d\x08" "usb_mode")
QDEF(MP_QSTR_hid_mouse, (const byte*)"\x3e\x1e\x09" "hid_mouse")
QDEF(MP_QSTR_hid_keyboard, (const byte*)"\x92\xb1\x0c" "hid_keyboard")
QDEF(MP_QSTR_USB_HID, (const byte*)"\x5b\xb6\x07" "USB_HID")
QDEF(MP_QSTR_USB_VCP, (const byte*)"\x1b\x8a\x07" "USB_VCP")
QDEF(MP_QSTR_have_cdc, (const byte*)"\x84\x08\x08" "have_cdc")
QDEF(MP_QSTR_hid, (const byte*)"\xe0\x4f\x03" "hid")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x88\x06" "micros")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\xfa\x0e" "elapsed_micros")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\xaf\x06" "udelay")
QDEF(MP_QSTR_pwm, (const byte*)"\x2f\x70\x03" "pwm")
QDEF(MP_QSTR_servo, (const byte*)"\x78\xda\x05" "servo")
QDEF(MP_QSTR_Servo, (const byte*)"\x98\xd9\x05" "Servo")
QDEF(MP_QSTR_MMCard, (const byte*)"\xf1\x3b\x06" "MMCard")
QDEF(MP_QSTR_CAN, (const byte*)"\x89\xcf\x03" "CAN")
QDEF(MP_QSTR_stm, (const byte*)"\x4f\x8d\x03" "stm")
QDEF(MP_QSTR_rfcore_status, (const byte*)"\x41\x40\x0d" "rfcore_status")
QDEF(MP_QSTR_rfcore_fw_version, (const byte*)"\x01\x1a\x11" "rfcore_fw_version")
QDEF(MP_QSTR_rfcore_sys_hci, (const byte*)"\x71\xe1\x0e" "rfcore_sys_hci")
QDEF(MP_QSTR_gpio, (const byte*)"\x54\xd8\x04" "gpio")
QDEF(MP_QSTR_LOOPBACK, (const byte*)"\x12\x3d\x08" "LOOPBACK")
QDEF(MP_QSTR_SILENT, (const byte*)"\x6c\x24\x06" "SILENT")
QDEF(MP_QSTR_SILENT_LOOPBACK, (const byte*)"\x24\x5d\x0f" "SILENT_LOOPBACK")
QDEF(MP_QSTR_True, (const byte*)"\x13\x17\x04" "True")
QDEF(MP_QSTR_False, (const byte*)"\x38\x6f\x05" "False")
QDEF(MP_QSTR_extframe, (const byte*)"\x11\x74\x08" "extframe")
QDEF(MP_QSTR_prescaler, (const byte*)"\x28\x15\x09" "prescaler")
QDEF(MP_QSTR_sjw, (const byte*)"\x0b\x90\x03" "sjw")
QDEF(MP_QSTR_bs1, (const byte*)"\x65\x49\x03" "bs1")
QDEF(MP_QSTR_bs2, (const byte*)"\x66\x49\x03" "bs2")
QDEF(MP_QSTR_auto_restart, (const byte*)"\x02\xff\x0c" "auto_restart")
QDEF(MP_QSTR_sample_point, (const byte*)"\xb0\x97\x0c" "sample_point")
QDEF(MP_QSTR_rtr, (const byte*)"\x51\x89\x03" "rtr")
QDEF(MP_QSTR_fifo, (const byte*)"\x03\x35\x04" "fifo")
QDEF(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF(MP_QSTR_bank, (const byte*)"\x83\x44\x04" "bank")
QDEF(MP_QSTR_params, (const byte*)"\x79\xe2\x06" "params")
QDEF(MP_QSTR_initfilterbanks, (const byte*)"\x2a\x2b\x0f" "initfilterbanks")
QDEF(MP_QSTR_setfilter, (const byte*)"\xc7\x1e\x09" "setfilter")
QDEF(MP_QSTR_clearfilter, (const byte*)"\xdc\x2c\x0b" "clearfilter")
QDEF(MP_QSTR_rxcallback, (const byte*)"\x86\xd0\x0a" "rxcallback")
QDEF(MP_QSTR_RANGE, (const byte*)"\x7a\x36\x05" "RANGE")
QDEF(MP_QSTR_DUAL, (const byte*)"\x79\x4f\x04" "DUAL")
QDEF(MP_QSTR_MASK, (const byte*)"\x91\xba\x04" "MASK")
QDEF(MP_QSTR_MASK16, (const byte*)"\xb6\x9c\x06" "MASK16")
QDEF(MP_QSTR_LIST16, (const byte*)"\xc0\x28\x06" "LIST16")
QDEF(MP_QSTR_MASK32, (const byte*)"\xf0\x9c\x06" "MASK32")
QDEF(MP_QSTR_LIST32, (const byte*)"\x86\x28\x06" "LIST32")
QDEF(MP_QSTR_STOPPED, (const byte*)"\x4c\x81\x07" "STOPPED")
QDEF(MP_QSTR_ERROR_ACTIVE, (const byte*)"\x8e\x61\x0c" "ERROR_ACTIVE")
QDEF(MP_QSTR_ERROR_WARNING, (const byte*)"\xc8\x52\x0d" "ERROR_WARNING")
QDEF(MP_QSTR_ERROR_PASSIVE, (const byte*)"\x29\x3e\x0d" "ERROR_PASSIVE")
QDEF(MP_QSTR_BUS_OFF, (const byte*)"\x71\xfe\x07" "BUS_OFF")
QDEF(MP_QSTR_gencall, (const byte*)"\x8b\x06\x07" "gencall")
QDEF(MP_QSTR_dma, (const byte*)"\x6d\x1f\x03" "dma")
QDEF(MP_QSTR_addr_size, (const byte*)"\x4c\x40\x09" "addr_size")
QDEF(MP_QSTR_is_ready, (const byte*)"\x0b\x00\x08" "is_ready")
QDEF(MP_QSTR_mem_read, (const byte*)"\x8d\xeb\x08" "mem_read")
QDEF(MP_QSTR_mem_write, (const byte*)"\x62\x8c\x09" "mem_write")
QDEF(MP_QSTR_CONTROLLER, (const byte*)"\x99\x0d\x0a" "CONTROLLER")
QDEF(MP_QSTR_PERIPHERAL, (const byte*)"\x89\x91\x0a" "PERIPHERAL")
QDEF(MP_QSTR_MASTER, (const byte*)"\x39\x8d\x06" "MASTER")
QDEF(MP_QSTR_SLAVE, (const byte*)"\x68\x15\x05" "SLAVE")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF(MP_QSTR_nss, (const byte*)"\x2b\x5a\x03" "nss")
QDEF(MP_QSTR_ti, (const byte*)"\x98\x6f\x02" "ti")
QDEF(MP_QSTR_crc, (const byte*)"\x17\x4d\x03" "crc")
QDEF(MP_QSTR_send_recv, (const byte*)"\xa4\x30\x09" "send_recv")
QDEF(MP_QSTR_DIRECTION_2LINES, (const byte*)"\x30\xbf\x10" "DIRECTION_2LINES")
QDEF(MP_QSTR_DIRECTION_2LINES_RXONLY, (const byte*)"\xd1\x66\x17" "DIRECTION_2LINES_RXONLY")
QDEF(MP_QSTR_DIRECTION_1LINE, (const byte*)"\x80\xae\x0f" "DIRECTION_1LINE")
QDEF(MP_QSTR_NSS_SOFT, (const byte*)"\x9a\x4d\x08" "NSS_SOFT")
QDEF(MP_QSTR_NSS_HARD_INPUT, (const byte*)"\x62\x69\x0e" "NSS_HARD_INPUT")
QDEF(MP_QSTR_NSS_HARD_OUTPUT, (const byte*)"\x0b\x06\x0f" "NSS_HARD_OUTPUT")
QDEF(MP_QSTR_VCP, (const byte*)"\x40\xf6\x03" "VCP")
QDEF(MP_QSTR_MSC, (const byte*)"\x58\xca\x03" "MSC")
QDEF(MP_QSTR_2xVCP, (const byte*)"\x8a\xb3\x05" "2xVCP")
QDEF(MP_QSTR_3xVCP, (const byte*)"\x0b\xc4\x05" "3xVCP")
QDEF(MP_QSTR_wakeup, (const byte*)"\x78\x32\x06" "wakeup")
QDEF(MP_QSTR_angle, (const byte*)"\x84\x2c\x05" "angle")
QDEF(MP_QSTR_speed, (const byte*)"\x62\x0f\x05" "speed")
QDEF(MP_QSTR_PWM_INVERTED, (const byte*)"\xe3\xff\x0c" "PWM_INVERTED")
QDEF(MP_QSTR_OC_TIMING, (const byte*)"\xe6\x28\x09" "OC_TIMING")
QDEF(MP_QSTR_OC_ACTIVE, (const byte*)"\xfa\x02\x09" "OC_ACTIVE")
QDEF(MP_QSTR_OC_INACTIVE, (const byte*)"\x1d\x9c\x0b" "OC_INACTIVE")
QDEF(MP_QSTR_OC_TOGGLE, (const byte*)"\x64\x08\x09" "OC_TOGGLE")
QDEF(MP_QSTR_OC_FORCED_ACTIVE, (const byte*)"\xfc\x6f\x10" "OC_FORCED_ACTIVE")
QDEF(MP_QSTR_OC_FORCED_INACTIVE, (const byte*)"\x1b\x51\x12" "OC_FORCED_INACTIVE")
QDEF(MP_QSTR_IC, (const byte*)"\x2f\x73\x02" "IC")
QDEF(MP_QSTR_ENC_A, (const byte*)"\x93\x1e\x05" "ENC_A")
QDEF(MP_QSTR_ENC_B, (const byte*)"\x90\x1e\x05" "ENC_B")
QDEF(MP_QSTR_ENC_AB, (const byte*)"\xb1\xf0\x06" "ENC_AB")
QDEF(MP_QSTR_div, (const byte*)"\xfe\x1e\x03" "div")
QDEF(MP_QSTR_brk, (const byte*)"\x1e\x49\x03" "brk")
QDEF(MP_QSTR_pulse_width_percent, (const byte*)"\x27\xb7\x13" "pulse_width_percent")
QDEF(MP_QSTR_compare, (const byte*)"\x22\xa7\x07" "compare")
QDEF(MP_QSTR_UP, (const byte*)"\xa0\x73\x02" "UP")
QDEF(MP_QSTR_DOWN, (const byte*)"\x37\x47\x04" "DOWN")
QDEF(MP_QSTR_CENTER, (const byte*)"\x8e\xdb\x06" "CENTER")
QDEF(MP_QSTR_HIGH, (const byte*)"\x2b\x6c\x04" "HIGH")
QDEF(MP_QSTR_LOW, (const byte*)"\x51\xdc\x03" "LOW")
QDEF(MP_QSTR_RISING, (const byte*)"\x2d\x0b\x06" "RISING")
QDEF(MP_QSTR_FALLING, (const byte*)"\x02\x69\x07" "FALLING")
QDEF(MP_QSTR_BOTH, (const byte*)"\x14\x3f\x04" "BOTH")
QDEF(MP_QSTR_BRK_OFF, (const byte*)"\x8e\xd4\x07" "BRK_OFF")
QDEF(MP_QSTR_BRK_LOW, (const byte*)"\x35\xbf\x07" "BRK_LOW")
QDEF(MP_QSTR_BRK_HIGH, (const byte*)"\x8f\x8b\x08" "BRK_HIGH")
QDEF(MP_QSTR_capture, (const byte*)"\x61\xb6\x07" "capture")
QDEF(MP_QSTR_VCP_plus_MSC, (const byte*)"\x67\x04\x0c" "VCP_plus_MSC")
QDEF(MP_QSTR_VCP_plus_HID, (const byte*)"\x3f\xf2\x0c" "VCP_plus_HID")
QDEF(MP_QSTR_VCP_plus_MSC_plus_HID, (const byte*)"\xf8\xce\x15" "VCP_plus_MSC_plus_HID")
QDEF(MP_QSTR_2xVCP_plus_MSC, (const byte*)"\xed\xfd\x0e" "2xVCP_plus_MSC")
QDEF(MP_QSTR_2xVCP_plus_MSC_plus_HID, (const byte*)"\x32\x2a\x17" "2xVCP_plus_MSC_plus_HID")
QDEF(MP_QSTR_3xVCP_plus_MSC, (const byte*)"\xcc\x6d\x0e" "3xVCP_plus_MSC")
QDEF(MP_QSTR_3xVCP_plus_MSC_plus_HID, (const byte*)"\x33\x5b\x17" "3xVCP_plus_MSC_plus_HID")
QDEF(MP_QSTR_vid, (const byte*)"\xfe\x7b\x03" "vid")
QDEF(MP_QSTR_pid, (const byte*)"\xf8\x73\x03" "pid")
QDEF(MP_QSTR_msc, (const byte*)"\x78\x46\x03" "msc")
QDEF(MP_QSTR_high_speed, (const byte*)"\x93\x88\x0a" "high_speed")
QDEF(MP_QSTR_host, (const byte*)"\x25\x35\x04" "host")
QDEF(MP_QSTR_setinterrupt, (const byte*)"\xc0\x8b\x0c" "setinterrupt")
QDEF(MP_QSTR_debug_mode_enabled, (const byte*)"\x52\x7f\x12" "debug_mode_enabled")
QDEF(MP_QSTR_IRQ_RX, (const byte*)"\x9a\x9a\x06" "IRQ_RX")
QDEF(MP_QSTR_WINC, (const byte*)"\x76\x76\x04" "WINC")
QDEF(MP_QSTR_source_dir, (const byte*)"\xd8\x4e\x0a" "source_dir")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF(MP_QSTR_led, (const byte*)"\x68\x40\x03" "led")
QDEF(MP_QSTR_analogRead, (const byte*)"\x3d\x09\x0a" "analogRead")
QDEF(MP_QSTR_analogWrite, (const byte*)"\xd2\xd7\x0b" "analogWrite")
QDEF(MP_QSTR_analogWriteResolution, (const byte*)"\x7c\x4f\x15" "analogWriteResolution")
QDEF(MP_QSTR_analogWriteFrequency, (const byte*)"\x76\xc4\x14" "analogWriteFrequency")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF(MP_QSTR_set_buf, (const byte*)"\x89\xa7\x07" "set_buf")
QDEF(MP_QSTR_set_error, (const byte*)"\x40\xfb\x09" "set_error")
QDEF(MP_QSTR_read1, (const byte*)"\xa6\x30\x05" "read1")
QDEF(MP_QSTR_write1, (const byte*)"\xa9\xbb\x06" "write1")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF(MP_QSTR_extra_coverage, (const byte*)"\x6e\x9a\x0e" "extra_coverage")
QDEF(MP_QSTR_extra_cpp_coverage, (const byte*)"\x32\x6e\x12" "extra_cpp_coverage")
QDEF(MP_QSTR_lock, (const byte*)"\xae\x23\x04" "lock")
QDEF(MP_QSTR_func, (const byte*)"\x1b\x68\x04" "func")
QDEF(MP_QSTR_var, (const byte*)"\xe0\x7a\x03" "var")
QDEF(MP_QSTR_ffimod, (const byte*)"\xca\xb2\x06" "ffimod")
QDEF(MP_QSTR_ffifunc, (const byte*)"\x92\x0b\x07" "ffifunc")
QDEF(MP_QSTR_cfun, (const byte*)"\x5b\x9d\x04" "cfun")
QDEF(MP_QSTR_fficallback, (const byte*)"\xc5\x5e\x0b" "fficallback")
QDEF(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF(MP_QSTR_ffivar, (const byte*)"\x49\x13\x06" "ffivar")
QDEF(MP_QSTR_opaqueval, (const byte*)"\x61\x5a\x09" "opaqueval")
QDEF(MP_QSTR_ffi, (const byte*)"\x8c\x36\x03" "ffi")
QDEF(MP_QSTR_as_bytearray, (const byte*)"\x1b\x19\x0c" "as_bytearray")
QDEF(MP_QSTR_jclass, (const byte*)"\x21\xd7\x06" "jclass")
QDEF(MP_QSTR_jobject, (const byte*)"\xda\xc8\x07" "jobject")
QDEF(MP_QSTR_jmethod, (const byte*)"\xd0\x01\x07" "jmethod")
QDEF(MP_QSTR_jni, (const byte*)"\x88\x67\x03" "jni")
QDEF(MP_QSTR_cls, (const byte*)"\x59\x4c\x03" "cls")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF(MP_QSTR_env, (const byte*)"\x18\x23\x03" "env")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF(MP_QSTR_system, (const byte*)"\xa0\x14\x06" "system")
QDEF(MP_QSTR_getenv, (const byte*)"\xae\xfb\x06" "getenv")
QDEF(MP_QSTR_putenv, (const byte*)"\xc9\x6c\x06" "putenv")
QDEF(MP_QSTR_unsetenv, (const byte*)"\x81\x46\x08" "unsetenv")
QDEF(MP_QSTR_termios, (const byte*)"\x7e\xdf\x07" "termios")
QDEF(MP_QSTR_tcgetattr, (const byte*)"\xb7\xc5\x09" "tcgetattr")
QDEF(MP_QSTR_tcsetattr, (const byte*)"\xa3\x34\x09" "tcsetattr")
QDEF(MP_QSTR_setraw, (const byte*)"\x83\x71\x06" "setraw")
QDEF(MP_QSTR_uos_vfs, (const byte*)"\x30\xa5\x07" "uos_vfs")
QDEF(MP_QSTR_inet_pton, (const byte*)"\xc9\x94\x09" "inet_pton")
QDEF(MP_QSTR_inet_ntop, (const byte*)"\x89\x1d\x09" "inet_ntop")
QDEF(MP_QSTR_sockaddr, (const byte*)"\x62\x8c\x08" "sockaddr")
QDEF(MP_QSTR_pkt_get_info, (const byte*)"\x52\x20\x0c" "pkt_get_info")
QDEF(MP_QSTR_zephyr, (const byte*)"\xa9\x22\x06" "zephyr")
QDEF(MP_QSTR_is_preempt_thread, (const byte*)"\x1a\x8b\x11" "is_preempt_thread")
QDEF(MP_QSTR_current_tid, (const byte*)"\xca\x28\x0b" "current_tid")
QDEF(MP_QSTR_thread_analyze, (const byte*)"\x30\x31\x0e" "thread_analyze")
QDEF(MP_QSTR_shell_exec, (const byte*)"\xff\x8d\x0a" "shell_exec")
QDEF(MP_QSTR_DiskAccess, (const byte*)"\xd4\x95\x0a" "DiskAccess")
QDEF(MP_QSTR_FlashArea, (const byte*)"\xe2\x07\x09" "FlashArea")
QDEF(MP_QSTR_measure, (const byte*)"\x1d\xae\x07" "measure")
QDEF(MP_QSTR_get_float, (const byte*)"\xdc\x0a\x09" "get_float")
QDEF(MP_QSTR_get_micros, (const byte*)"\x25\x7b\x0a" "get_micros")
QDEF(MP_QSTR_get_millis, (const byte*)"\x92\x79\x0a" "get_millis")
QDEF(MP_QSTR_get_int, (const byte*)"\x7f\x35\x07" "get_int")
QDEF(MP_QSTR_Sensor, (const byte*)"\x33\xd0\x06" "Sensor")
QDEF(MP_QSTR_zsensor, (const byte*)"\x89\x36\x07" "zsensor")
QDEF(MP_QSTR_STORAGE, (const byte*)"\xdc\x0a\x07" "STORAGE")
QDEF(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF(MP_QSTR_asm_thumb, (const byte*)"\x43\x6d\x09" "asm_thumb")
QDEF(MP_QSTR_asm_xtensa, (const byte*)"\xb0\x12\x0a" "asm_xtensa")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF(MP_QSTR__star_, (const byte*)"\xb1\xc2\x06" "_star_")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF(MP_QSTR___doc__, (const byte*)"\x2d\xac\x07" "__doc__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF(MP_QSTR_ldr, (const byte*)"\x5f\x40\x03" "ldr")
QDEF(MP_QSTR_ldrb, (const byte*)"\x5d\x4c\x04" "ldrb")
QDEF(MP_QSTR_ldrh, (const byte*)"\x57\x4c\x04" "ldrh")
QDEF(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF(MP_QSTR_strb, (const byte*)"\x32\x37\x04" "strb")
QDEF(MP_QSTR_strh, (const byte*)"\x38\x37\x04" "strh")
QDEF(MP_QSTR_vcmp, (const byte*)"\xad\xc1\x04" "vcmp")
QDEF(MP_QSTR_vsqrt, (const byte*)"\xf7\x42\x05" "vsqrt")
QDEF(MP_QSTR_vneg, (const byte*)"\xff\xee\x04" "vneg")
QDEF(MP_QSTR_vcvt_f32_s32, (const byte*)"\x47\xc9\x0c" "vcvt_f32_s32")
QDEF(MP_QSTR_vcvt_s32_f32, (const byte*)"\x07\x33\x0c" "vcvt_s32_f32")
QDEF(MP_QSTR_vmrs, (const byte*)"\x9f\x09\x04" "vmrs")
QDEF(MP_QSTR_vmov, (const byte*)"\xe7\x0a\x04" "vmov")
QDEF(MP_QSTR_vldr, (const byte*)"\xc9\x07\x04" "vldr")
QDEF(MP_QSTR_vstr, (const byte*)"\xc6\x7e\x04" "vstr")
QDEF(MP_QSTR_nop, (const byte*)"\xb4\x57\x03" "nop")
QDEF(MP_QSTR_bl, (const byte*)"\xcb\x6e\x02" "bl")
QDEF(MP_QSTR_bx, (const byte*)"\xdf\x6e\x02" "bx")
QDEF(MP_QSTR_cpsid, (const byte*)"\xe8\xc7\x05" "cpsid")
QDEF(MP_QSTR_cpsie, (const byte*)"\xe9\xc7\x05" "cpsie")
QDEF(MP_QSTR_mov, (const byte*)"\xf1\x43\x03" "mov")
QDEF(MP_QSTR_clz, (const byte*)"\x50\x4c\x03" "clz")
QDEF(MP_QSTR_rbit, (const byte*)"\xe8\xee\x04" "rbit")
QDEF(MP_QSTR_mrs, (const byte*)"\x89\x45\x03" "mrs")
QDEF(MP_QSTR_and_, (const byte*)"\x91\x94\x04" "and_")
QDEF(MP_QSTR_cmp, (const byte*)"\x3b\x4c\x03" "cmp")
QDEF(MP_QSTR_movw, (const byte*)"\x66\xc2\x04" "movw")
QDEF(MP_QSTR_movt, (const byte*)"\x65\xc2\x04" "movt")
QDEF(MP_QSTR_movwt, (const byte*)"\x52\x0f\x05" "movwt")
QDEF(MP_QSTR_ldrex, (const byte*)"\xe2\xd7\x05" "ldrex")
QDEF(MP_QSTR_lsl, (const byte*)"\xb6\x41\x03" "lsl")
QDEF(MP_QSTR_lsr, (const byte*)"\xa8\x41\x03" "lsr")
QDEF(MP_QSTR_asr, (const byte*)"\x65\x35\x03" "asr")
QDEF(MP_QSTR_sdiv, (const byte*)"\xcd\x7a\x04" "sdiv")
QDEF(MP_QSTR_udiv, (const byte*)"\x8b\x31\x04" "udiv")
QDEF(MP_QSTR_strex, (const byte*)"\xad\x1d\x05" "strex")
QDEF(MP_QSTR_or_, (const byte*)"\x27\x5e\x03" "or_")
QDEF(MP_QSTR_mull, (const byte*)"\x3d\x0c\x04" "mull")
QDEF(MP_QSTR_l8ui, (const byte*)"\x6d\x59\x04" "l8ui")
QDEF(MP_QSTR_l16ui, (const byte*)"\x52\x83\x05" "l16ui")
QDEF(MP_QSTR_l32i, (const byte*)"\x41\x8f\x04" "l32i")
QDEF(MP_QSTR_s8i, (const byte*)"\x07\x86\x03" "s8i")
QDEF(MP_QSTR_s16i, (const byte*)"\xb8\x3b\x04" "s16i")
QDEF(MP_QSTR_s32i, (const byte*)"\x3e\x34\x04" "s32i")
QDEF(MP_QSTR_l16si, (const byte*)"\x14\x83\x05" "l16si")
QDEF(MP_QSTR_addi, (const byte*)"\xad\x7a\x04" "addi")
QDEF(MP_QSTR_ball, (const byte*)"\x46\x45\x04" "ball")
QDEF(MP_QSTR_bany, (const byte*)"\x91\x44\x04" "bany")
QDEF(MP_QSTR_bbc, (const byte*)"\x06\x47\x03" "bbc")
QDEF(MP_QSTR_bbs, (const byte*)"\x16\x47\x03" "bbs")
QDEF(MP_QSTR_beq, (const byte*)"\x73\x47\x03" "beq")
QDEF(MP_QSTR_bge, (const byte*)"\xa5\x46\x03" "bge")
QDEF(MP_QSTR_bgeu, (const byte*)"\x30\x1b\x04" "bgeu")
QDEF(MP_QSTR_blt, (const byte*)"\x5f\x48\x03" "blt")
QDEF(MP_QSTR_bnall, (const byte*)"\x08\x55\x05" "bnall")
QDEF(MP_QSTR_bne, (const byte*)"\x8c\x47\x03" "bne")
QDEF(MP_QSTR_bnone, (const byte*)"\x4d\x3d\x05" "bnone")
QDEF(MP_QSTR_ret_n, (const byte*)"\xf7\x07\x05" "ret_n")
QDEF(MP_QSTR_callx0, (const byte*)"\x2f\xb6\x06" "callx0")
QDEF(MP_QSTR_j, (const byte*)"\xcf\xb5\x01" "j")
QDEF(MP_QSTR_jx, (const byte*)"\xd7\x6f\x02" "jx")
QDEF(MP_QSTR_beqz, (const byte*)"\xa9\x35\x04" "beqz")
QDEF(MP_QSTR_bnez, (const byte*)"\x76\x39\x04" "bnez")
QDEF(MP_QSTR_mov_n, (const byte*)"\x60\x0c\x05" "mov_n")
QDEF(MP_QSTR_movi, (const byte*)"\x78\xc2\x04" "movi")
QDEF(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF(MP_QSTR_uarray, (const byte*)"\x89\x86\x06" "uarray")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\xf6\xe5\x27" "_brace_open__colon__hash_b_brace_close_")
QDEF(MP_QSTR__dir__, (const byte*)"\x85\xe7\x06" "_dir__")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x14\x52\x10" "_percent__hash_x")
QDEF(MP_QSTR__brace_open__colon__hash_x_brace_close_, (const byte*)"\x2c\x88\x27" "_brace_open__colon__hash_x_brace_close_")
QDEF(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x03\x52\x10" "_percent__hash_o")
QDEF(MP_QSTR__brace_open__colon__hash_o_brace_close_, (const byte*)"\xdb\x4d\x27" "_brace_open__colon__hash_o_brace_close_")
QDEF(MP_QSTR__space_, (const byte*)"\xe1\x13\x07" "_space_")
QDEF(MP_QSTR__0x0a_, (const byte*)"\x1c\x01\x01" "\x0a")
QDEF(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF(MP_QSTR_NotImplemented, (const byte*)"\x3e\xc6\x0e" "NotImplemented")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x99\x05" "deque")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF(MP_QSTR_IOBase, (const byte*)"\x36\xbe\x06" "IOBase")
QDEF(MP_QSTR_BufferedWriter, (const byte*)"\xeb\x2c\x0e" "BufferedWriter")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF(MP_QSTR_rel_tol, (const byte*)"\x56\x46\x07" "rel_tol")
QDEF(MP_QSTR_abs_tol, (const byte*)"\x7d\x6d\x07" "abs_tol")
QDEF(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF(MP_QSTR_isclose, (const byte*)"\x49\x4e\x07" "isclose")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF(MP_QSTR_mem_total, (const byte*)"\xfd\x6a\x09" "mem_total")
QDEF(MP_QSTR_mem_current, (const byte*)"\x16\xba\x0b" "mem_current")
QDEF(MP_QSTR_mem_peak, (const byte*)"\x40\x25\x08" "mem_peak")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF(MP_QSTR_pystack_use, (const byte*)"\xfe\x41\x0b" "pystack_use")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF(MP_QSTR_heap_locked, (const byte*)"\x4c\x67\x0b" "heap_locked")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF(MP_QSTR_mpy, (const byte*)"\xc1\x45\x03" "mpy")
QDEF(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF(MP_QSTR_big, (const byte*)"\xe9\x48\x03" "big")
QDEF(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF(MP_QSTR_settrace, (const byte*)"\x46\x83\x08" "settrace")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF(MP_QSTR_exc_info, (const byte*)"\x0a\xff\x08" "exc_info")
QDEF(MP_QSTR_getsizeof, (const byte*)"\xff\x23\x09" "getsizeof")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF(MP_QSTR_atexit, (const byte*)"\xb0\x98\x06" "atexit")
QDEF(MP_QSTR_acquire, (const byte*)"\x1d\xd3\x07" "acquire")
QDEF(MP_QSTR_locked, (const byte*)"\x0f\xba\x06" "locked")
QDEF(MP_QSTR__thread, (const byte*)"\xd4\x02\x07" "_thread")
QDEF(MP_QSTR_LockType, (const byte*)"\x36\x20\x08" "LockType")
QDEF(MP_QSTR_get_ident, (const byte*)"\xfe\xb1\x09" "get_ident")
QDEF(MP_QSTR_stack_size, (const byte*)"\x31\x3b\x0a" "stack_size")
QDEF(MP_QSTR_start_new_thread, (const byte*)"\xd7\x25\x10" "start_new_thread")
QDEF(MP_QSTR_allocate_lock, (const byte*)"\xec\xed\x0d" "allocate_lock")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF(MP_QSTR_itemsize, (const byte*)"\x75\x77\x08" "itemsize")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x9a\x07" "popleft")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF(MP_QSTR___globals__, (const byte*)"\x9d\xae\x0b" "__globals__")
QDEF(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF(MP_QSTR_usys, (const byte*)"\xc9\xf3\x04" "usys")
QDEF(MP_QSTR__asdict, (const byte*)"\x32\x48\x07" "_asdict")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF(MP_QSTR___setattr__, (const byte*)"\x54\x19\x0b" "__setattr__")
QDEF(MP_QSTR___delattr__, (const byte*)"\x5b\x77\x0b" "__delattr__")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF(MP_QSTR_indices, (const byte*)"\x5a\x48\x07" "indices")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\x78\xbc\x0c" "utf_hyphen_8")
QDEF(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF(MP_QSTR_co_code, (const byte*)"\xfb\x51\x07" "co_code")
QDEF(MP_QSTR_co_consts, (const byte*)"\xa0\x03\x09" "co_consts")
QDEF(MP_QSTR_co_filename, (const byte*)"\x77\x1b\x0b" "co_filename")
QDEF(MP_QSTR_co_firstlineno, (const byte*)"\x23\x5a\x0e" "co_firstlineno")
QDEF(MP_QSTR_co_name, (const byte*)"\xb1\xb3\x07" "co_name")
QDEF(MP_QSTR_co_names, (const byte*)"\xa2\x29\x08" "co_names")
QDEF(MP_QSTR_co_lnotab, (const byte*)"\x0c\xbc\x09" "co_lnotab")
QDEF(MP_QSTR_f_back, (const byte*)"\x97\x48\x06" "f_back")
QDEF(MP_QSTR_f_code, (const byte*)"\x91\x81\x06" "f_code")
QDEF(MP_QSTR_f_globals, (const byte*)"\x44\x1c\x09" "f_globals")
QDEF(MP_QSTR_f_lasti, (const byte*)"\xff\x15\x07" "f_lasti")
QDEF(MP_QSTR_f_lineno, (const byte*)"\xf3\x27\x08" "f_lineno")
QDEF(MP_QSTR_frame, (const byte*)"\x78\x8a\x05" "frame")
QDEF(MP_QSTR_call, (const byte*)"\x67\xc1\x04" "call")
QDEF(MP_QSTR_exception, (const byte*)"\xd2\xeb\x09" "exception")
QDEF(MP_QSTR_return, (const byte*)"\x8f\x5a\x06" "return")
QDEF(MP_QSTR_opcode, (const byte*)"\x17\xf2\x06" "opcode")
QDEF(MP_QSTR_LOAD_CONST_FALSE, (const byte*)"\xfb\x1d\x10" "LOAD_CONST_FALSE")
QDEF(MP_QSTR_LOAD_CONST_NONE, (const byte*)"\x2c\xc7\x0f" "LOAD_CONST_NONE")
QDEF(MP_QSTR_LOAD_CONST_TRUE, (const byte*)"\x10\x0d\x0f" "LOAD_CONST_TRUE")
QDEF(MP_QSTR_LOAD_CONST_SMALL_INT, (const byte*)"\xb5\x55\x14" "LOAD_CONST_SMALL_INT")
QDEF(MP_QSTR_LOAD_CONST_STRING, (const byte*)"\x93\x8f\x11" "LOAD_CONST_STRING")
QDEF(MP_QSTR_LOAD_CONST_OBJ, (const byte*)"\x61\x13\x0e" "LOAD_CONST_OBJ")
QDEF(MP_QSTR_LOAD_NULL, (const byte*)"\x07\x06\x09" "LOAD_NULL")
QDEF(MP_QSTR_LOAD_FAST_N, (const byte*)"\x0d\xdd\x0b" "LOAD_FAST_N")
QDEF(MP_QSTR_LOAD_DEREF, (const byte*)"\x8c\xa2\x0a" "LOAD_DEREF")
QDEF(MP_QSTR_LOAD_NAME, (const byte*)"\x7b\x3a\x09" "LOAD_NAME")
QDEF(MP_QSTR_LOAD_GLOBAL, (const byte*)"\xf7\x29\x0b" "LOAD_GLOBAL")
QDEF(MP_QSTR_LOAD_ATTR, (const byte*)"\x6f\xb9\x09" "LOAD_ATTR")
QDEF(MP_QSTR_LOAD_METHOD, (const byte*)"\x83\xa3\x0b" "LOAD_METHOD")
QDEF(MP_QSTR_LOAD_SUPER_METHOD, (const byte*)"\x7d\x32\x11" "LOAD_SUPER_METHOD")
QDEF(MP_QSTR_LOAD_BUILD_CLASS, (const byte*)"\xbb\xd0\x10" "LOAD_BUILD_CLASS")
QDEF(MP_QSTR_LOAD_SUBSCR, (const byte*)"\x1a\xdc\x0b" "LOAD_SUBSCR")
QDEF(MP_QSTR_STORE_FAST_N, (const byte*)"\xb4\x7a\x0c" "STORE_FAST_N")
QDEF(MP_QSTR_STORE_DEREF, (const byte*)"\x95\xe1\x0b" "STORE_DEREF")
QDEF(MP_QSTR_STORE_NAME, (const byte*)"\x82\xfb\x0a" "STORE_NAME")
QDEF(MP_QSTR_STORE_GLOBAL, (const byte*)"\x4e\x5f\x0c" "STORE_GLOBAL")
QDEF(MP_QSTR_STORE_ATTR, (const byte*)"\x96\x3a\x0a" "STORE_ATTR")
QDEF(MP_QSTR_STORE_SUBSCR, (const byte*)"\x23\xfc\x0c" "STORE_SUBSCR")
QDEF(MP_QSTR_DELETE_FAST, (const byte*)"\x23\x10\x0b" "DELETE_FAST")
QDEF(MP_QSTR_DELETE_DEREF, (const byte*)"\xb3\xe1\x0c" "DELETE_DEREF")
QDEF(MP_QSTR_DELETE_NAME, (const byte*)"\xe4\x6f\x0b" "DELETE_NAME")
QDEF(MP_QSTR_DELETE_GLOBAL, (const byte*)"\xa8\x43\x0d" "DELETE_GLOBAL")
QDEF(MP_QSTR_DUP_TOP, (const byte*)"\xd0\xe6\x07" "DUP_TOP")
QDEF(MP_QSTR_DUP_TOP_TWO, (const byte*)"\x03\x53\x0b" "DUP_TOP_TWO")
QDEF(MP_QSTR_POP_TOP, (const byte*)"\x9e\xd9\x07" "POP_TOP")
QDEF(MP_QSTR_ROT_TWO, (const byte*)"\x1f\x92\x07" "ROT_TWO")
QDEF(MP_QSTR_ROT_THREE, (const byte*)"\x1d\x2d\x09" "ROT_THREE")
QDEF(MP_QSTR_JUMP, (const byte*)"\x27\xb9\x04" "JUMP")
QDEF(MP_QSTR_POP_JUMP_IF_TRUE, (const byte*)"\xee\x3d\x10" "POP_JUMP_IF_TRUE")
QDEF(MP_QSTR_POP_JUMP_IF_FALSE, (const byte*)"\x05\x2c\x11" "POP_JUMP_IF_FALSE")
QDEF(MP_QSTR_JUMP_IF_TRUE_OR_POP, (const byte*)"\x4c\xa6\x13" "JUMP_IF_TRUE_OR_POP")
QDEF(MP_QSTR_JUMP_IF_FALSE_OR_POP, (const byte*)"\x47\x3f\x14" "JUMP_IF_FALSE_OR_POP")
QDEF(MP_QSTR_SETUP_WITH, (const byte*)"\x5f\xfd\x0a" "SETUP_WITH")
QDEF(MP_QSTR_WITH_CLEANUP, (const byte*)"\x18\x4d\x0c" "WITH_CLEANUP")
QDEF(MP_QSTR_UNWIND_JUMP, (const byte*)"\xf7\xa8\x0b" "UNWIND_JUMP")
QDEF(MP_QSTR_SETUP_EXCEPT, (const byte*)"\x22\x1b\x0c" "SETUP_EXCEPT")
QDEF(MP_QSTR_SETUP_FINALLY, (const byte*)"\x04\xb7\x0d" "SETUP_FINALLY")
QDEF(MP_QSTR_END_FINALLY, (const byte*)"\x8c\x72\x0b" "END_FINALLY")
QDEF(MP_QSTR_GET_ITER, (const byte*)"\x66\xd4\x08" "GET_ITER")
QDEF(MP_QSTR_GET_ITER_STACK, (const byte*)"\xb7\x11\x0e" "GET_ITER_STACK")
QDEF(MP_QSTR_FOR_ITER, (const byte*)"\x0b\x43\x08" "FOR_ITER")
QDEF(MP_QSTR_BUILD_TUPLE, (const byte*)"\x14\x4d\x0b" "BUILD_TUPLE")
QDEF(MP_QSTR_BUILD_LIST, (const byte*)"\xce\x93\x0a" "BUILD_LIST")
QDEF(MP_QSTR_BUILD_MAP, (const byte*)"\xd0\x7a\x09" "BUILD_MAP")
QDEF(MP_QSTR_STORE_MAP, (const byte*)"\xf9\x01\x09" "STORE_MAP")
QDEF(MP_QSTR_BUILD_SET, (const byte*)"\x4e\x0a\x09" "BUILD_SET")
QDEF(MP_QSTR_BUILD_SLICE, (const byte*)"\x5c\x58\x0b" "BUILD_SLICE")
QDEF(MP_QSTR_STORE_COMP, (const byte*)"\x74\x3e\x0a" "STORE_COMP")
QDEF(MP_QSTR_UNPACK_SEQUENCE, (const byte*)"\x27\x41\x0f" "UNPACK_SEQUENCE")
QDEF(MP_QSTR_UNPACK_EX, (const byte*)"\xc5\x57\x09" "UNPACK_EX")
QDEF(MP_QSTR_MAKE_FUNCTION, (const byte*)"\xda\x3a\x0d" "MAKE_FUNCTION")
QDEF(MP_QSTR_MAKE_FUNCTION_DEFARGS, (const byte*)"\xc5\x4d\x15" "MAKE_FUNCTION_DEFARGS")
QDEF(MP_QSTR_MAKE_CLOSURE, (const byte*)"\xc9\x7a\x0c" "MAKE_CLOSURE")
QDEF(MP_QSTR_MAKE_CLOSURE_DEFARGS, (const byte*)"\xd6\x10\x14" "MAKE_CLOSURE_DEFARGS")
QDEF(MP_QSTR_CALL_FUNCTION, (const byte*)"\xfa\xa5\x0d" "CALL_FUNCTION")
QDEF(MP_QSTR_CALL_FUNCTION_VAR_KW, (const byte*)"\x83\x39\x14" "CALL_FUNCTION_VAR_KW")
QDEF(MP_QSTR_CALL_METHOD, (const byte*)"\xc7\x57\x0b" "CALL_METHOD")
QDEF(MP_QSTR_CALL_METHOD_VAR_KW, (const byte*)"\x9e\x9f\x12" "CALL_METHOD_VAR_KW")
QDEF(MP_QSTR_RETURN_VALUE, (const byte*)"\x3b\xf7\x0c" "RETURN_VALUE")
QDEF(MP_QSTR_RAISE_LAST, (const byte*)"\xbc\xac\x0a" "RAISE_LAST")
QDEF(MP_QSTR_RAISE_OBJ, (const byte*)"\x51\x9b\x09" "RAISE_OBJ")
QDEF(MP_QSTR_RAISE_FROM, (const byte*)"\x60\xc4\x0a" "RAISE_FROM")
QDEF(MP_QSTR_YIELD_VALUE, (const byte*)"\x2c\xfa\x0b" "YIELD_VALUE")
QDEF(MP_QSTR_YIELD_FROM, (const byte*)"\xb1\x6b\x0a" "YIELD_FROM")
QDEF(MP_QSTR_IMPORT_NAME, (const byte*)"\x00\x8d\x0b" "IMPORT_NAME")
QDEF(MP_QSTR_IMPORT_FROM, (const byte*)"\xd1\x7c\x0b" "IMPORT_FROM")
QDEF(MP_QSTR_IMPORT_STAR, (const byte*)"\x73\x45\x0b" "IMPORT_STAR")
QDEF(MP_QSTR_LOAD_FAST, (const byte*)"\x3c\x99\x09" "LOAD_FAST")
QDEF(MP_QSTR_STORE_FAST, (const byte*)"\x45\x9b\x0a" "STORE_FAST")
QDEF(MP_QSTR_UNARY_OP, (const byte*)"\x54\xd1\x08" "UNARY_OP")
QDEF(MP_QSTR_BINARY_OP, (const byte*)"\xaa\x0d\x09" "BINARY_OP")
QDEF(MP_QSTR_pystack_space_exhausted, (const byte*)"\x01\xf3\x17" "pystack_space_exhausted")
QDEF(MP_QSTR_xxxx, (const byte*)"\x05\xcd\x04" "xxxx")
QDEF(MP_QSTR_maximum, (const byte*)"\x6d\x6b\x07" "maximum")
QDEF(MP_QSTR_pystack, (const byte*)"\x82\x6d\x07" "pystack")
QDEF(MP_QSTR__dot_frozen, (const byte*)"\xd0\x54\x0b" "_dot_frozen")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\xd7\x80\x32" "maximum_space_recursion_space_depth_space_exceeded")
QDEF(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF(MP_QSTR_tick, (const byte*)"\x30\xc2\x04" "tick")
QDEF(MP_QSTR_fps, (const byte*)"\xc0\x38\x03" "fps")
QDEF(MP_QSTR_avg, (const byte*)"\x15\x34\x03" "avg")
QDEF(MP_QSTR_Clock, (const byte*)"\x4d\x86\x05" "Clock")
QDEF(MP_QSTR_refresh, (const byte*)"\x98\x4c\x07" "refresh")
QDEF(MP_QSTR_resolution, (const byte*)"\x8b\x47\x0a" "resolution")
QDEF(MP_QSTR_hmirror, (const byte*)"\x94\x85\x07" "hmirror")
QDEF(MP_QSTR_vflip, (const byte*)"\xa0\x87\x05" "vflip")
QDEF(MP_QSTR_transpose, (const byte*)"\xf6\xe9\x09" "transpose")
QDEF(MP_QSTR_x_scale, (const byte*)"\x7a\x68\x07" "x_scale")
QDEF(MP_QSTR_y_scale, (const byte*)"\x3b\x4b\x07" "y_scale")
QDEF(MP_QSTR_rgb_channel, (const byte*)"\x8e\x2f\x0b" "rgb_channel")
QDEF(MP_QSTR_alpha, (const byte*)"\x51\x64\x05" "alpha")
QDEF(MP_QSTR_hint, (const byte*)"\x5e\x4d\x04" "hint")
QDEF(MP_QSTR_x_size, (const byte*)"\x07\x66\x06" "x_size")
QDEF(MP_QSTR_y_size, (const byte*)"\x26\x7f\x06" "y_size")
QDEF(MP_QSTR_scale, (const byte*)"\x7d\x51\x05" "scale")
QDEF(MP_QSTR_pixformat, (const byte*)"\xc7\xf6\x09" "pixformat")
QDEF(MP_QSTR_copy_to_fb, (const byte*)"\xbf\x58\x0a" "copy_to_fb")
QDEF(MP_QSTR_fir, (const byte*)"\xf8\x37\x03" "fir")
QDEF(MP_QSTR_FIR_NONE, (const byte*)"\x8d\x1e\x08" "FIR_NONE")
QDEF(MP_QSTR_FIR_SHIELD, (const byte*)"\xd8\x81\x0a" "FIR_SHIELD")
QDEF(MP_QSTR_FIR_MLX90621, (const byte*)"\x42\x67\x0c" "FIR_MLX90621")
QDEF(MP_QSTR_FIR_MLX90640, (const byte*)"\x85\x67\x0c" "FIR_MLX90640")
QDEF(MP_QSTR_FIR_MLX90641, (const byte*)"\x84\x67\x0c" "FIR_MLX90641")
QDEF(MP_QSTR_FIR_AMG8833, (const byte*)"\x2c\x8b\x0b" "FIR_AMG8833")
QDEF(MP_QSTR_FIR_LEPTON, (const byte*)"\x6b\xa3\x0a" "FIR_LEPTON")
QDEF(MP_QSTR_PALETTE_RAINBOW, (const byte*)"\x49\xc0\x0f" "PALETTE_RAINBOW")
QDEF(MP_QSTR_PALETTE_IRONBOW, (const byte*)"\xe7\x72\x0f" "PALETTE_IRONBOW")
QDEF(MP_QSTR_GRAYSCALE, (const byte*)"\x70\x1b\x09" "GRAYSCALE")
QDEF(MP_QSTR_radiometric, (const byte*)"\x90\xa0\x0b" "radiometric")
QDEF(MP_QSTR_register_vsync_cb, (const byte*)"\xbc\x79\x11" "register_vsync_cb")
QDEF(MP_QSTR_register_frame_cb, (const byte*)"\xb0\x9d\x11" "register_frame_cb")
QDEF(MP_QSTR_get_frame_available, (const byte*)"\x97\x60\x13" "get_frame_available")
QDEF(MP_QSTR_trigger_ffc, (const byte*)"\x01\x69\x0b" "trigger_ffc")
QDEF(MP_QSTR_read_ta, (const byte*)"\x5d\x81\x07" "read_ta")
QDEF(MP_QSTR_read_ir, (const byte*)"\xb3\x7d\x07" "read_ir")
QDEF(MP_QSTR_draw_ir, (const byte*)"\xe1\x2f\x07" "draw_ir")
QDEF(MP_QSTR_snapshot, (const byte*)"\x49\xb8\x08" "snapshot")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF(MP_QSTR_add_frame, (const byte*)"\xa6\xc1\x09" "add_frame")
QDEF(MP_QSTR_Gif, (const byte*)"\xcd\xbb\x03" "Gif")
QDEF(MP_QSTR_gif, (const byte*)"\xad\x3b\x03" "gif")
QDEF(MP_QSTR_mask, (const byte*)"\x91\xba\x04" "mask")
QDEF(MP_QSTR_color_palette, (const byte*)"\x1a\x16\x0d" "color_palette")
QDEF(MP_QSTR_alpha_palette, (const byte*)"\x93\xba\x0d" "alpha_palette")
QDEF(MP_QSTR_roi, (const byte*)"\xb1\x8b\x03" "roi")
QDEF(MP_QSTR_thresholds, (const byte*)"\x41\x2e\x0a" "thresholds")
QDEF(MP_QSTR_Cascade, (const byte*)"\xf7\x46\x07" "Cascade")
QDEF(MP_QSTR_kp_desc, (const byte*)"\x10\xc7\x07" "kp_desc")
QDEF(MP_QSTR_lbp_desc, (const byte*)"\x15\xca\x08" "lbp_desc")
QDEF(MP_QSTR_cx, (const byte*)"\xfe\x6e\x02" "cx")
QDEF(MP_QSTR_cy, (const byte*)"\xff\x6e\x02" "cy")
QDEF(MP_QSTR_w, (const byte*)"\xd2\xb5\x01" "w")
QDEF(MP_QSTR_h, (const byte*)"\xcd\xb5\x01" "h")
QDEF(MP_QSTR_theta, (const byte*)"\x49\x83\x05" "theta")
QDEF(MP_QSTR_kptmatch, (const byte*)"\xb9\x42\x08" "kptmatch")
QDEF(MP_QSTR_rgbtuple, (const byte*)"\x6a\x9a\x08" "rgbtuple")
QDEF(MP_QSTR_bias, (const byte*)"\xbc\x66\x04" "bias")
QDEF(MP_QSTR_quality, (const byte*)"\x28\xfc\x07" "quality")
QDEF(MP_QSTR_encode_for_ide, (const byte*)"\x30\x98\x0e" "encode_for_ide")
QDEF(MP_QSTR_thickness, (const byte*)"\x13\x07\x09" "thickness")
QDEF(MP_QSTR_x_spacing, (const byte*)"\x63\x71\x09" "x_spacing")
QDEF(MP_QSTR_y_spacing, (const byte*)"\xa2\x89\x09" "y_spacing")
QDEF(MP_QSTR_mono_space, (const byte*)"\x5d\x8d\x0a" "mono_space")
QDEF(MP_QSTR_char_rotation, (const byte*)"\x56\xbd\x0d" "char_rotation")
QDEF(MP_QSTR_char_hmirror, (const byte*)"\x53\x9b\x0c" "char_hmirror")
QDEF(MP_QSTR_char_vflip, (const byte*)"\x27\x42\x0a" "char_vflip")
QDEF(MP_QSTR_string_rotation, (const byte*)"\x1b\x2e\x0f" "string_rotation")
QDEF(MP_QSTR_string_hmirror, (const byte*)"\x3e\x0f\x0e" "string_hmirror")
QDEF(MP_QSTR_string_vflip, (const byte*)"\xca\x4e\x0c" "string_vflip")
QDEF(MP_QSTR_seed_threshold, (const byte*)"\x7a\xd1\x0e" "seed_threshold")
QDEF(MP_QSTR_floating_threshold, (const byte*)"\x5d\x04\x12" "floating_threshold")
QDEF(MP_QSTR_clear_background, (const byte*)"\xcd\x5a\x10" "clear_background")
QDEF(MP_QSTR_zero, (const byte*)"\x07\x5a\x04" "zero")
QDEF(MP_QSTR_to_bitmap, (const byte*)"\x62\xfa\x09" "to_bitmap")
QDEF(MP_QSTR_brightness, (const byte*)"\x4c\xc6\x0a" "brightness")
QDEF(MP_QSTR_mod, (const byte*)"\xe3\x43\x03" "mod")
QDEF(MP_QSTR_adaptive, (const byte*)"\xdf\xa5\x08" "adaptive")
QDEF(MP_QSTR_clip_limit, (const byte*)"\x59\xa8\x0a" "clip_limit")
QDEF(MP_QSTR_offset, (const byte*)"\x48\x3c\x06" "offset")
QDEF(MP_QSTR_percentile, (const byte*)"\x7e\x07\x0a" "percentile")
QDEF(MP_QSTR_mul, (const byte*)"\x31\x46\x03" "mul")
QDEF(MP_QSTR_unsharp, (const byte*)"\xc6\xc0\x07" "unsharp")
QDEF(MP_QSTR_sharpen, (const byte*)"\xb6\x44\x07" "sharpen")
QDEF(MP_QSTR_color_sigma, (const byte*)"\x56\x1f\x0b" "color_sigma")
QDEF(MP_QSTR_space_sigma, (const byte*)"\x6f\x03\x0b" "space_sigma")
QDEF(MP_QSTR_strength, (const byte*)"\xe0\x15\x08" "strength")
QDEF(MP_QSTR_zoom, (const byte*)"\xf2\x23\x04" "zoom")
QDEF(MP_QSTR_x_corr, (const byte*)"\x8e\xce\x06" "x_corr")
QDEF(MP_QSTR_y_corr, (const byte*)"\xaf\xc6\x06" "y_corr")
QDEF(MP_QSTR_x_rotation, (const byte*)"\x56\x6c\x0a" "x_rotation")
QDEF(MP_QSTR_y_rotation, (const byte*)"\xf7\x6c\x0a" "y_rotation")
QDEF(MP_QSTR_z_rotation, (const byte*)"\x14\xea\x0a" "z_rotation")
QDEF(MP_QSTR_x_translation, (const byte*)"\xa9\xbf\x0d" "x_translation")
QDEF(MP_QSTR_y_translation, (const byte*)"\xe8\xb7\x0d" "y_translation")
QDEF(MP_QSTR_fov, (const byte*)"\xba\x37\x03" "fov")
QDEF(MP_QSTR_corners, (const byte*)"\xf1\xa0\x07" "corners")
QDEF(MP_QSTR_mean, (const byte*)"\xc2\xc9\x04" "mean")
QDEF(MP_QSTR_stdev, (const byte*)"\xb5\x02\x05" "stdev")
QDEF(MP_QSTR_similarity, (const byte*)"\xc0\xff\x0a" "similarity")
QDEF(MP_QSTR_median, (const byte*)"\x0f\x95\x06" "median")
QDEF(MP_QSTR_lq, (const byte*)"\x98\x6e\x02" "lq")
QDEF(MP_QSTR_uq, (const byte*)"\xa1\x6f\x02" "uq")
QDEF(MP_QSTR_l_mean, (const byte*)"\xf1\x63\x06" "l_mean")
QDEF(MP_QSTR_l_median, (const byte*)"\xbc\x46\x08" "l_median")
QDEF(MP_QSTR_l_mode, (const byte*)"\x95\x48\x06" "l_mode")
QDEF(MP_QSTR_l_stdev, (const byte*)"\x26\xdc\x07" "l_stdev")
QDEF(MP_QSTR_l_min, (const byte*)"\x3c\xea\x05" "l_min")
QDEF(MP_QSTR_l_max, (const byte*)"\x22\xeb\x05" "l_max")
QDEF(MP_QSTR_l_lq, (const byte*)"\x2b\xe8\x04" "l_lq")
QDEF(MP_QSTR_l_uq, (const byte*)"\x12\xe5\x04" "l_uq")
QDEF(MP_QSTR_a_mean, (const byte*)"\xdc\x18\x06" "a_mean")
QDEF(MP_QSTR_a_median, (const byte*)"\x11\x54\x08" "a_median")
QDEF(MP_QSTR_a_mode, (const byte*)"\x38\x22\x06" "a_mode")
QDEF(MP_QSTR_a_stdev, (const byte*)"\xeb\x74\x07" "a_stdev")
QDEF(MP_QSTR_a_min, (const byte*)"\xf1\xcb\x05" "a_min")
QDEF(MP_QSTR_a_max, (const byte*)"\xef\xca\x05" "a_max")
QDEF(MP_QSTR_a_lq, (const byte*)"\x86\x53\x04" "a_lq")
QDEF(MP_QSTR_a_uq, (const byte*)"\xbf\x52\x04" "a_uq")
QDEF(MP_QSTR_b_mean, (const byte*)"\x3f\x50\x06" "b_mean")
QDEF(MP_QSTR_b_median, (const byte*)"\xf2\xef\x08" "b_median")
QDEF(MP_QSTR_b_mode, (const byte*)"\xdb\x8b\x06" "b_mode")
QDEF(MP_QSTR_b_stdev, (const byte*)"\xa8\xb8\x07" "b_stdev")
QDEF(MP_QSTR_b_min, (const byte*)"\xb2\x0b\x05" "b_min")
QDEF(MP_QSTR_b_max, (const byte*)"\xac\x0a\x05" "b_max")
QDEF(MP_QSTR_b_lq, (const byte*)"\x65\x00\x04" "b_lq")
QDEF(MP_QSTR_b_uq, (const byte*)"\x5c\xff\x04" "b_uq")
QDEF(MP_QSTR_statistics, (const byte*)"\x00\x5a\x0a" "statistics")
QDEF(MP_QSTR_l_value, (const byte*)"\x9d\xce\x07" "l_value")
QDEF(MP_QSTR_a_value, (const byte*)"\x90\x3a\x07" "a_value")
QDEF(MP_QSTR_b_value, (const byte*)"\x13\xc8\x07" "b_value")
QDEF(MP_QSTR_bins, (const byte*)"\x93\x64\x04" "bins")
QDEF(MP_QSTR_l_bins, (const byte*)"\x20\xe6\x06" "l_bins")
QDEF(MP_QSTR_a_bins, (const byte*)"\x8d\xa5\x06" "a_bins")
QDEF(MP_QSTR_b_bins, (const byte*)"\x6e\x07\x06" "b_bins")
QDEF(MP_QSTR_get_percentile, (const byte*)"\xf7\x7b\x0e" "get_percentile")
QDEF(MP_QSTR_get_threshold, (const byte*)"\x1b\x78\x0d" "get_threshold")
QDEF(MP_QSTR_get_stats, (const byte*)"\x2d\x79\x09" "get_stats")
QDEF(MP_QSTR_get_statistics, (const byte*)"\xc9\xed\x0e" "get_statistics")
QDEF(MP_QSTR_histogram, (const byte*)"\xb5\x6f\x09" "histogram")
QDEF(MP_QSTR_x1, (const byte*)"\x4c\x71\x02" "x1")
QDEF(MP_QSTR_y1, (const byte*)"\x6d\x71\x02" "y1")
QDEF(MP_QSTR_x2, (const byte*)"\x4f\x71\x02" "x2")
QDEF(MP_QSTR_y2, (const byte*)"\x6e\x71\x02" "y2")
QDEF(MP_QSTR_length, (const byte*)"\x59\x87\x06" "length")
QDEF(MP_QSTR_magnitude, (const byte*)"\x69\x35\x09" "magnitude")
QDEF(MP_QSTR_rho, (const byte*)"\xd0\x8c\x03" "rho")
QDEF(MP_QSTR_x_stride, (const byte*)"\x9f\x0c\x08" "x_stride")
QDEF(MP_QSTR_y_stride, (const byte*)"\xbe\xa9\x08" "y_stride")
QDEF(MP_QSTR_area_threshold, (const byte*)"\x7a\x62\x0e" "area_threshold")
QDEF(MP_QSTR_pixels_threshold, (const byte*)"\x76\x67\x10" "pixels_threshold")
QDEF(MP_QSTR_robust, (const byte*)"\xe8\xd7\x06" "robust")
QDEF(MP_QSTR_min_corners, (const byte*)"\x04\x29\x0b" "min_corners")
QDEF(MP_QSTR_pixels, (const byte*)"\x9e\xf9\x06" "pixels")
QDEF(MP_QSTR_cxf, (const byte*)"\xd8\x4e\x03" "cxf")
QDEF(MP_QSTR_cyf, (const byte*)"\xb9\x4e\x03" "cyf")
QDEF(MP_QSTR_rotation, (const byte*)"\xf1\x2f\x08" "rotation")
QDEF(MP_QSTR_rotation_deg, (const byte*)"\xc8\xbf\x0c" "rotation_deg")
QDEF(MP_QSTR_rotation_rad, (const byte*)"\x59\xfb\x0c" "rotation_rad")
QDEF(MP_QSTR_perimeter, (const byte*)"\x40\x23\x09" "perimeter")
QDEF(MP_QSTR_roundness, (const byte*)"\x4c\xd9\x09" "roundness")
QDEF(MP_QSTR_elongation, (const byte*)"\x57\xa5\x0a" "elongation")
QDEF(MP_QSTR_area, (const byte*)"\x92\xc6\x04" "area")
QDEF(MP_QSTR_density, (const byte*)"\x1d\x55\x07" "density")
QDEF(MP_QSTR_extent, (const byte*)"\x73\xe8\x06" "extent")
QDEF(MP_QSTR_compactness, (const byte*)"\xe9\xfb\x0b" "compactness")
QDEF(MP_QSTR_solidity, (const byte*)"\x7c\xad\x08" "solidity")
QDEF(MP_QSTR_convexity, (const byte*)"\xa8\xf9\x09" "convexity")
QDEF(MP_QSTR_x_hist_bins, (const byte*)"\xcd\x61\x0b" "x_hist_bins")
QDEF(MP_QSTR_y_hist_bins, (const byte*)"\x0c\xb4\x0b" "y_hist_bins")
QDEF(MP_QSTR_major_axis_line, (const byte*)"\xd3\x81\x0f" "major_axis_line")
QDEF(MP_QSTR_minor_axis_line, (const byte*)"\xdf\x64\x0f" "minor_axis_line")
QDEF(MP_QSTR_enclosing_circle, (const byte*)"\x30\x9a\x10" "enclosing_circle")
QDEF(MP_QSTR_enclosed_ellipse, (const byte*)"\xc9\x69\x10" "enclosed_ellipse")
QDEF(MP_QSTR_blob, (const byte*)"\xa6\x50\x04" "blob")
QDEF(MP_QSTR_merge, (const byte*)"\x1d\x5b\x05" "merge")
QDEF(MP_QSTR_margin, (const byte*)"\x5b\x7d\x06" "margin")
QDEF(MP_QSTR_threshold_cb, (const byte*)"\x4c\x8a\x0c" "threshold_cb")
QDEF(MP_QSTR_merge_cb, (const byte*)"\x03\x03\x08" "merge_cb")
QDEF(MP_QSTR_x_hist_bins_max, (const byte*)"\x26\xb8\x0f" "x_hist_bins_max")
QDEF(MP_QSTR_y_hist_bins_max, (const byte*)"\x27\x8c\x0f" "y_hist_bins_max")
QDEF(MP_QSTR_theta_margin, (const byte*)"\xe8\x40\x0c" "theta_margin")
QDEF(MP_QSTR_rho_margin, (const byte*)"\x51\x56\x0a" "rho_margin")
QDEF(MP_QSTR_merge_distance, (const byte*)"\x01\xf9\x0e" "merge_distance")
QDEF(MP_QSTR_max_theta_diff, (const byte*)"\x70\xab\x0e" "max_theta_diff")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\xdd\x06" "circle")
QDEF(MP_QSTR_x_margin, (const byte*)"\xfc\x75\x08" "x_margin")
QDEF(MP_QSTR_y_margin, (const byte*)"\xdd\x52\x08" "y_margin")
QDEF(MP_QSTR_r_margin, (const byte*)"\x36\x6a\x08" "r_margin")
QDEF(MP_QSTR_r_min, (const byte*)"\xa2\x07\x05" "r_min")
QDEF(MP_QSTR_r_max, (const byte*)"\xbc\x06\x05" "r_max")
QDEF(MP_QSTR_r_step, (const byte*)"\x3a\x93\x06" "r_step")
QDEF(MP_QSTR_payload, (const byte*)"\x4b\x05\x07" "payload")
QDEF(MP_QSTR_ecc_level, (const byte*)"\x69\x68\x09" "ecc_level")
QDEF(MP_QSTR_data_type, (const byte*)"\x72\x7c\x09" "data_type")
QDEF(MP_QSTR_eci, (const byte*)"\x6a\x22\x03" "eci")
QDEF(MP_QSTR_is_numeric, (const byte*)"\x0b\xba\x0a" "is_numeric")
QDEF(MP_QSTR_is_alphanumeric, (const byte*)"\x3f\x89\x0f" "is_alphanumeric")
QDEF(MP_QSTR_is_binary, (const byte*)"\x8f\x43\x09" "is_binary")
QDEF(MP_QSTR_is_kanji, (const byte*)"\x07\x60\x08" "is_kanji")
QDEF(MP_QSTR_qrcode, (const byte*)"\xcb\x8c\x06" "qrcode")
QDEF(MP_QSTR_family, (const byte*)"\x33\xca\x06" "family")
QDEF(MP_QSTR_decision_margin, (const byte*)"\x14\x18\x0f" "decision_margin")
QDEF(MP_QSTR_hamming, (const byte*)"\xcc\xd4\x07" "hamming")
QDEF(MP_QSTR_goodness, (const byte*)"\x6d\xfc\x08" "goodness")
QDEF(MP_QSTR_z_translation, (const byte*)"\xab\x60\x0d" "z_translation")
QDEF(MP_QSTR_apriltag, (const byte*)"\x91\xf5\x08" "apriltag")
QDEF(MP_QSTR_families, (const byte*)"\xd5\xeb\x08" "families")
QDEF(MP_QSTR_fx, (const byte*)"\x5b\x6e\x02" "fx")
QDEF(MP_QSTR_fy, (const byte*)"\x5a\x6e\x02" "fy")
QDEF(MP_QSTR_rows, (const byte*)"\xfc\x01\x04" "rows")
QDEF(MP_QSTR_columns, (const byte*)"\x40\x45\x07" "columns")
QDEF(MP_QSTR_capacity, (const byte*)"\x91\xdc\x08" "capacity")
QDEF(MP_QSTR_padding, (const byte*)"\xb4\xc1\x07" "padding")
QDEF(MP_QSTR_datamatrix, (const byte*)"\x4e\x1d\x0a" "datamatrix")
QDEF(MP_QSTR_effort, (const byte*)"\xa9\xb7\x06" "effort")
QDEF(MP_QSTR_barcode, (const byte*)"\x19\x9b\x07" "barcode")
QDEF(MP_QSTR_response, (const byte*)"\xe6\x94\x08" "response")
QDEF(MP_QSTR_displacement, (const byte*)"\x72\xd1\x0c" "displacement")
QDEF(MP_QSTR_template_roi, (const byte*)"\x9e\xc4\x0c" "template_roi")
QDEF(MP_QSTR_logpolar, (const byte*)"\x61\x19\x08" "logpolar")
QDEF(MP_QSTR_fix_rotation_scale, (const byte*)"\xfe\xf2\x12" "fix_rotation_scale")
QDEF(MP_QSTR_scale_factor, (const byte*)"\x8f\x49\x0c" "scale_factor")
QDEF(MP_QSTR_normalized, (const byte*)"\xa4\xa6\x0a" "normalized")
QDEF(MP_QSTR_max_keypoints, (const byte*)"\x26\xd1\x0d" "max_keypoints")
QDEF(MP_QSTR_corner_detector, (const byte*)"\x47\x24\x0f" "corner_detector")
QDEF(MP_QSTR_a1, (const byte*)"\x75\x6e\x02" "a1")
QDEF(MP_QSTR_mean_pool, (const byte*)"\xe1\xe5\x09" "mean_pool")
QDEF(MP_QSTR_mean_pooled, (const byte*)"\x80\xee\x0b" "mean_pooled")
QDEF(MP_QSTR_midpoint_pool, (const byte*)"\x8a\xa3\x0d" "midpoint_pool")
QDEF(MP_QSTR_midpoint_pooled, (const byte*)"\xeb\xaa\x0f" "midpoint_pooled")
QDEF(MP_QSTR_to_grayscale, (const byte*)"\x94\x6b\x0c" "to_grayscale")
QDEF(MP_QSTR_to_rgb565, (const byte*)"\x80\xa9\x09" "to_rgb565")
QDEF(MP_QSTR_to_rainbow, (const byte*)"\x0f\x64\x0a" "to_rainbow")
QDEF(MP_QSTR_to_ironbow, (const byte*)"\xa1\x7e\x0a" "to_ironbow")
QDEF(MP_QSTR_to_jpeg, (const byte*)"\x79\xd4\x07" "to_jpeg")
QDEF(MP_QSTR_to_png, (const byte*)"\x98\xd0\x06" "to_png")
QDEF(MP_QSTR_compress, (const byte*)"\xa3\x7a\x08" "compress")
QDEF(MP_QSTR_compress_for_ide, (const byte*)"\x90\xc8\x10" "compress_for_ide")
QDEF(MP_QSTR_compressed, (const byte*)"\x42\xbc\x0a" "compressed")
QDEF(MP_QSTR_compressed_for_ide, (const byte*)"\xf1\xb2\x12" "compressed_for_ide")
QDEF(MP_QSTR_jpeg_encode_for_ide, (const byte*)"\x37\x05\x13" "jpeg_encode_for_ide")
QDEF(MP_QSTR_jpeg_encoded_for_ide, (const byte*)"\x13\xc6\x14" "jpeg_encoded_for_ide")
QDEF(MP_QSTR_save, (const byte*)"\xa4\x83\x04" "save")
QDEF(MP_QSTR_draw_line, (const byte*)"\x54\x85\x09" "draw_line")
QDEF(MP_QSTR_draw_rectangle, (const byte*)"\x5b\x40\x0e" "draw_rectangle")
QDEF(MP_QSTR_draw_circle, (const byte*)"\x68\x49\x0b" "draw_circle")
QDEF(MP_QSTR_draw_ellipse, (const byte*)"\xf0\x2e\x0c" "draw_ellipse")
QDEF(MP_QSTR_draw_string, (const byte*)"\xaf\x41\x0b" "draw_string")
QDEF(MP_QSTR_draw_cross, (const byte*)"\x84\x34\x0a" "draw_cross")
QDEF(MP_QSTR_draw_arrow, (const byte*)"\x43\xd4\x0a" "draw_arrow")
QDEF(MP_QSTR_draw_edges, (const byte*)"\x0a\x83\x0a" "draw_edges")
QDEF(MP_QSTR_draw_image, (const byte*)"\xbd\xa6\x0a" "draw_image")
QDEF(MP_QSTR_flood_fill, (const byte*)"\x5b\xfb\x0a" "flood_fill")
QDEF(MP_QSTR_draw_keypoints, (const byte*)"\x32\xb7\x0e" "draw_keypoints")
QDEF(MP_QSTR_mask_rectangle, (const byte*)"\xef\xde\x0e" "mask_rectangle")
QDEF(MP_QSTR_mask_circle, (const byte*)"\x5c\x61\x0b" "mask_circle")
QDEF(MP_QSTR_mask_ellipse, (const byte*)"\x84\xb5\x0c" "mask_ellipse")
QDEF(MP_QSTR_binary, (const byte*)"\x4a\x8f\x06" "binary")
QDEF(MP_QSTR_and, (const byte*)"\x0e\x33\x03" "and")
QDEF(MP_QSTR_b_and, (const byte*)"\xd3\x1b\x05" "b_and")
QDEF(MP_QSTR_nand, (const byte*)"\x00\x75\x04" "nand")
QDEF(MP_QSTR_b_nand, (const byte*)"\xfd\xf6\x06" "b_nand")
QDEF(MP_QSTR_or, (const byte*)"\x78\x6f\x02" "or")
QDEF(MP_QSTR_b_or, (const byte*)"\x05\x00\x04" "b_or")
QDEF(MP_QSTR_nor, (const byte*)"\xb6\x57\x03" "nor")
QDEF(MP_QSTR_b_nor, (const byte*)"\x2b\x07\x05" "b_nor")
QDEF(MP_QSTR_b_xor, (const byte*)"\xbd\xbb\x05" "b_xor")
QDEF(MP_QSTR_xnor, (const byte*)"\xee\xf6\x04" "xnor")
QDEF(MP_QSTR_b_xnor, (const byte*)"\x93\x33\x06" "b_xnor")
QDEF(MP_QSTR_erode, (const byte*)"\x1c\x82\x05" "erode")
QDEF(MP_QSTR_dilate, (const byte*)"\x94\xd5\x06" "dilate")
QDEF(MP_QSTR_gamma_corr, (const byte*)"\xb1\xda\x0a" "gamma_corr")
QDEF(MP_QSTR_negate, (const byte*)"\x79\xd7\x06" "negate")
QDEF(MP_QSTR_assign, (const byte*)"\xe4\x7c\x06" "assign")
QDEF(MP_QSTR_blend, (const byte*)"\x04\x9e\x05" "blend")
QDEF(MP_QSTR_top_hat, (const byte*)"\xcc\x6c\x07" "top_hat")
QDEF(MP_QSTR_black_hat, (const byte*)"\x00\xd9\x09" "black_hat")
QDEF(MP_QSTR_histeq, (const byte*)"\x57\x90\x06" "histeq")
QDEF(MP_QSTR_midpoint, (const byte*)"\x49\x9a\x08" "midpoint")
QDEF(MP_QSTR_morph, (const byte*)"\xed\x1f\x05" "morph")
QDEF(MP_QSTR_blur, (const byte*)"\x6c\x54\x04" "blur")
QDEF(MP_QSTR_gaussian, (const byte*)"\x10\x24\x08" "gaussian")
QDEF(MP_QSTR_gaussian_blur, (const byte*)"\x26\xe4\x0d" "gaussian_blur")
QDEF(MP_QSTR_laplacian, (const byte*)"\x70\xa7\x09" "laplacian")
QDEF(MP_QSTR_bilateral, (const byte*)"\x4d\x2f\x09" "bilateral")
QDEF(MP_QSTR_cartoon, (const byte*)"\xcf\x3b\x07" "cartoon")
QDEF(MP_QSTR_linpolar, (const byte*)"\x8e\xb6\x08" "linpolar")
QDEF(MP_QSTR_lens_corr, (const byte*)"\x02\xc4\x09" "lens_corr")
QDEF(MP_QSTR_rotation_corr, (const byte*)"\xa2\x2c\x0d" "rotation_corr")
QDEF(MP_QSTR_get_similarity, (const byte*)"\x09\xdc\x0e" "get_similarity")
QDEF(MP_QSTR_get_hist, (const byte*)"\xaa\x5c\x08" "get_hist")
QDEF(MP_QSTR_get_histogram, (const byte*)"\xdc\xda\x0d" "get_histogram")
QDEF(MP_QSTR_get_regression, (const byte*)"\x03\xd7\x0e" "get_regression")
QDEF(MP_QSTR_find_blobs, (const byte*)"\x0f\xb9\x0a" "find_blobs")
QDEF(MP_QSTR_find_lines, (const byte*)"\xc2\x06\x0a" "find_lines")
QDEF(MP_QSTR_find_line_segments, (const byte*)"\x1e\xc8\x12" "find_line_segments")
QDEF(MP_QSTR_find_circles, (const byte*)"\xfe\x02\x0c" "find_circles")
QDEF(MP_QSTR_find_rects, (const byte*)"\x6c\xe0\x0a" "find_rects")
QDEF(MP_QSTR_find_qrcodes, (const byte*)"\xc2\x0f\x0c" "find_qrcodes")
QDEF(MP_QSTR_find_apriltags, (const byte*)"\xd8\xa7\x0e" "find_apriltags")
QDEF(MP_QSTR_find_datamatrices, (const byte*)"\x39\xd8\x11" "find_datamatrices")
QDEF(MP_QSTR_find_barcodes, (const byte*)"\x10\x5b\x0d" "find_barcodes")
QDEF(MP_QSTR_find_displacement, (const byte*)"\x28\x38\x11" "find_displacement")
QDEF(MP_QSTR_find_template, (const byte*)"\x2f\x7f\x0d" "find_template")
QDEF(MP_QSTR_find_features, (const byte*)"\xf8\x12\x0d" "find_features")
QDEF(MP_QSTR_find_eye, (const byte*)"\x26\xc8\x08" "find_eye")
QDEF(MP_QSTR_find_lbp, (const byte*)"\x81\xa4\x08" "find_lbp")
QDEF(MP_QSTR_find_keypoints, (const byte*)"\x57\xb6\x0e" "find_keypoints")
QDEF(MP_QSTR_find_edges, (const byte*)"\x6f\x1a\x0a" "find_edges")
QDEF(MP_QSTR_find_hog, (const byte*)"\x3f\xb6\x08" "find_hog")
QDEF(MP_QSTR_selective_search, (const byte*)"\x86\xcb\x10" "selective_search")
QDEF(MP_QSTR_filter_outliers, (const byte*)"\x55\xeb\x0f" "filter_outliers")
QDEF(MP_QSTR_BINARY, (const byte*)"\xca\x52\x06" "BINARY")
QDEF(MP_QSTR_BAYER, (const byte*)"\xa8\xfd\x05" "BAYER")
QDEF(MP_QSTR_YUV422, (const byte*)"\x0b\xfa\x06" "YUV422")
QDEF(MP_QSTR_JPEG, (const byte*)"\x3d\xce\x04" "JPEG")
QDEF(MP_QSTR_PNG, (const byte*)"\x7c\x10\x03" "PNG")
QDEF(MP_QSTR_AREA, (const byte*)"\x52\xcf\x04" "AREA")
QDEF(MP_QSTR_BILINEAR, (const byte*)"\xb3\xd1\x08" "BILINEAR")
QDEF(MP_QSTR_BICUBIC, (const byte*)"\x50\x12\x07" "BICUBIC")
QDEF(MP_QSTR_EXTRACT_RGB_CHANNEL_FIRST, (const byte*)"\x39\x0d\x19" "EXTRACT_RGB_CHANNEL_FIRST")
QDEF(MP_QSTR_APPLY_COLOR_PALETTE_FIRST, (const byte*)"\x14\x7a\x19" "APPLY_COLOR_PALETTE_FIRST")
QDEF(MP_QSTR_SEARCH_EX, (const byte*)"\xa9\x97\x09" "SEARCH_EX")
QDEF(MP_QSTR_SEARCH_DS, (const byte*)"\x83\x97\x09" "SEARCH_DS")
QDEF(MP_QSTR_EDGE_CANNY, (const byte*)"\x02\x57\x0a" "EDGE_CANNY")
QDEF(MP_QSTR_EDGE_SIMPLE, (const byte*)"\x17\x47\x0b" "EDGE_SIMPLE")
QDEF(MP_QSTR_CORNER_FAST, (const byte*)"\xfd\x2b\x0b" "CORNER_FAST")
QDEF(MP_QSTR_CORNER_AGAST, (const byte*)"\xbd\x23\x0c" "CORNER_AGAST")
QDEF(MP_QSTR_TAG16H5, (const byte*)"\xcd\x0e\x07" "TAG16H5")
QDEF(MP_QSTR_TAG25H7, (const byte*)"\x2f\x66\x07" "TAG25H7")
QDEF(MP_QSTR_TAG25H9, (const byte*)"\x21\x66\x07" "TAG25H9")
QDEF(MP_QSTR_TAG36H10, (const byte*)"\x5b\xe8\x08" "TAG36H10")
QDEF(MP_QSTR_TAG36H11, (const byte*)"\x5a\xe8\x08" "TAG36H11")
QDEF(MP_QSTR_ARTOOLKIT, (const byte*)"\xb8\xe1\x09" "ARTOOLKIT")
QDEF(MP_QSTR_EAN2, (const byte*)"\x5d\x57\x04" "EAN2")
QDEF(MP_QSTR_EAN5, (const byte*)"\x5a\x57\x04" "EAN5")
QDEF(MP_QSTR_EAN8, (const byte*)"\x57\x57\x04" "EAN8")
QDEF(MP_QSTR_UPCE, (const byte*)"\x06\xe4\x04" "UPCE")
QDEF(MP_QSTR_ISBN10, (const byte*)"\x52\xc1\x06" "ISBN10")
QDEF(MP_QSTR_UPCA, (const byte*)"\x02\xe4\x04" "UPCA")
QDEF(MP_QSTR_EAN13, (const byte*)"\x2d\x43\x05" "EAN13")
QDEF(MP_QSTR_ISBN13, (const byte*)"\x51\xc1\x06" "ISBN13")
QDEF(MP_QSTR_I25, (const byte*)"\x2b\xdf\x03" "I25")
QDEF(MP_QSTR_DATABAR, (const byte*)"\x44\x49\x07" "DATABAR")
QDEF(MP_QSTR_DATABAR_EXP, (const byte*)"\xb6\xc0\x0b" "DATABAR_EXP")
QDEF(MP_QSTR_CODABAR, (const byte*)"\x1d\xab\x07" "CODABAR")
QDEF(MP_QSTR_CODE39, (const byte*)"\xc2\xe1\x06" "CODE39")
QDEF(MP_QSTR_PDF417, (const byte*)"\x45\xe0\x06" "PDF417")
QDEF(MP_QSTR_CODE93, (const byte*)"\x82\xe0\x06" "CODE93")
QDEF(MP_QSTR_CODE128, (const byte*)"\xd3\x12\x07" "CODE128")
QDEF(MP_QSTR_ImageIO, (const byte*)"\x04\x4a\x07" "ImageIO")
QDEF(MP_QSTR_binary_to_grayscale, (const byte*)"\x44\xa7\x13" "binary_to_grayscale")
QDEF(MP_QSTR_binary_to_rgb, (const byte*)"\xe6\xc7\x0d" "binary_to_rgb")
QDEF(MP_QSTR_binary_to_lab, (const byte*)"\x3e\x46\x0d" "binary_to_lab")
QDEF(MP_QSTR_binary_to_yuv, (const byte*)"\x6b\xf8\x0d" "binary_to_yuv")
QDEF(MP_QSTR_grayscale_to_binary, (const byte*)"\xc4\xf1\x13" "grayscale_to_binary")
QDEF(MP_QSTR_grayscale_to_rgb, (const byte*)"\x7c\xfd\x10" "grayscale_to_rgb")
QDEF(MP_QSTR_grayscale_to_lab, (const byte*)"\x24\x9f\x10" "grayscale_to_lab")
QDEF(MP_QSTR_grayscale_to_yuv, (const byte*)"\x71\xd5\x10" "grayscale_to_yuv")
QDEF(MP_QSTR_rgb_to_binary, (const byte*)"\xe6\xd1\x0d" "rgb_to_binary")
QDEF(MP_QSTR_rgb_to_grayscale, (const byte*)"\xfc\xc1\x10" "rgb_to_grayscale")
QDEF(MP_QSTR_rgb_to_lab, (const byte*)"\xc6\x91\x0a" "rgb_to_lab")
QDEF(MP_QSTR_rgb_to_yuv, (const byte*)"\x13\xc7\x0a" "rgb_to_yuv")
QDEF(MP_QSTR_lab_to_binary, (const byte*)"\x3e\x29\x0d" "lab_to_binary")
QDEF(MP_QSTR_lab_to_grayscale, (const byte*)"\xa4\x95\x10" "lab_to_grayscale")
QDEF(MP_QSTR_lab_to_rgb, (const byte*)"\x46\x56\x0a" "lab_to_rgb")
QDEF(MP_QSTR_lab_to_yuv, (const byte*)"\xcb\x65\x0a" "lab_to_yuv")
QDEF(MP_QSTR_yuv_to_binary, (const byte*)"\xab\xa5\x0d" "yuv_to_binary")
QDEF(MP_QSTR_yuv_to_grayscale, (const byte*)"\x51\x41\x10" "yuv_to_grayscale")
QDEF(MP_QSTR_yuv_to_rgb, (const byte*)"\x33\x0d\x0a" "yuv_to_rgb")
QDEF(MP_QSTR_yuv_to_lab, (const byte*)"\x6b\xe3\x0a" "yuv_to_lab")
QDEF(MP_QSTR_HaarCascade, (const byte*)"\x6d\xe8\x0b" "HaarCascade")
QDEF(MP_QSTR_load_descriptor, (const byte*)"\x4f\x2f\x0f" "load_descriptor")
QDEF(MP_QSTR_save_descriptor, (const byte*)"\xa8\x37\x0f" "save_descriptor")
QDEF(MP_QSTR_match_descriptor, (const byte*)"\xda\x35\x10" "match_descriptor")
QDEF(MP_QSTR_pause, (const byte*)"\xd7\xbd\x05" "pause")
QDEF(MP_QSTR_imageio, (const byte*)"\x24\xc6\x07" "imageio")
QDEF(MP_QSTR_FILE_STREAM, (const byte*)"\x20\x8c\x0b" "FILE_STREAM")
QDEF(MP_QSTR_MEMORY_STREAM, (const byte*)"\xc7\xb6\x0d" "MEMORY_STREAM")
QDEF(MP_QSTR_is_closed, (const byte*)"\x72\x9b\x09" "is_closed")
QDEF(MP_QSTR_buffer_size, (const byte*)"\xbf\xd5\x0b" "buffer_size")
QDEF(MP_QSTR_Mjpeg, (const byte*)"\x10\x2b\x05" "Mjpeg")
QDEF(MP_QSTR_mjpeg, (const byte*)"\xf0\x2b\x05" "mjpeg")
QDEF(MP_QSTR_omv, (const byte*)"\x31\x5c\x03" "omv")
QDEF(MP_QSTR_version_major, (const byte*)"\x7b\x35\x0d" "version_major")
QDEF(MP_QSTR_version_minor, (const byte*)"\x77\x04\x0d" "version_minor")
QDEF(MP_QSTR_version_patch, (const byte*)"\x6e\x6d\x0d" "version_patch")
QDEF(MP_QSTR_version_string, (const byte*)"\xf5\xcf\x0e" "version_string")
QDEF(MP_QSTR_arch, (const byte*)"\x5d\xc7\x04" "arch")
QDEF(MP_QSTR_board_type, (const byte*)"\x98\x4f\x0a" "board_type")
QDEF(MP_QSTR_board_id, (const byte*)"\xed\x71\x08" "board_id")
QDEF(MP_QSTR_disable_fb, (const byte*)"\xaa\x3f\x0a" "disable_fb")
QDEF(MP_QSTR_gain_db, (const byte*)"\xdd\x07\x07" "gain_db")
QDEF(MP_QSTR_gain_db_ceiling, (const byte*)"\x61\xb7\x0f" "gain_db_ceiling")
QDEF(MP_QSTR_exposure_us, (const byte*)"\x6f\x63\x0b" "exposure_us")
QDEF(MP_QSTR_rgb_gain_db, (const byte*)"\x75\x67\x0b" "rgb_gain_db")
QDEF(MP_QSTR_sensor, (const byte*)"\x53\xcc\x06" "sensor")
QDEF(MP_QSTR_OV2640, (const byte*)"\x3c\x45\x06" "OV2640")
QDEF(MP_QSTR_OV5640, (const byte*)"\xdb\xa8\x06" "OV5640")
QDEF(MP_QSTR_OV7670, (const byte*)"\xfa\xb0\x06" "OV7670")
QDEF(MP_QSTR_OV7690, (const byte*)"\x34\xb0\x06" "OV7690")
QDEF(MP_QSTR_OV7725, (const byte*)"\x5b\xb5\x06" "OV7725")
QDEF(MP_QSTR_OV9650, (const byte*)"\x76\x56\x06" "OV9650")
QDEF(MP_QSTR_MT9V022, (const byte*)"\x23\x54\x07" "MT9V022")
QDEF(MP_QSTR_MT9V024, (const byte*)"\x25\x54\x07" "MT9V024")
QDEF(MP_QSTR_MT9V032, (const byte*)"\xc2\x53\x07" "MT9V032")
QDEF(MP_QSTR_MT9V034, (const byte*)"\xc4\x53\x07" "MT9V034")
QDEF(MP_QSTR_MT9M114, (const byte*)"\xfc\xbb\x07" "MT9M114")
QDEF(MP_QSTR_LEPTON, (const byte*)"\xa9\x99\x06" "LEPTON")
QDEF(MP_QSTR_HM01B0, (const byte*)"\x33\xd6\x06" "HM01B0")
QDEF(MP_QSTR_GC2145, (const byte*)"\x23\x64\x06" "GC2145")
QDEF(MP_QSTR_PAJ6100, (const byte*)"\xd9\xa3\x07" "PAJ6100")
QDEF(MP_QSTR_FROGEYE2020, (const byte*)"\x60\xb4\x0b" "FROGEYE2020")
QDEF(MP_QSTR_QQCIF, (const byte*)"\xa9\x2a\x05" "QQCIF")
QDEF(MP_QSTR_QCIF, (const byte*)"\x58\x67\x04" "QCIF")
QDEF(MP_QSTR_CIF, (const byte*)"\x89\xd0\x03" "CIF")
QDEF(MP_QSTR_QQSIF, (const byte*)"\xb9\x6e\x05" "QQSIF")
QDEF(MP_QSTR_QSIF, (const byte*)"\x48\x23\x04" "QSIF")
QDEF(MP_QSTR_SIF, (const byte*)"\x99\x14\x03" "SIF")
QDEF(MP_QSTR_QQQQVGA, (const byte*)"\x95\x34\x07" "QQQQVGA")
QDEF(MP_QSTR_QQQVGA, (const byte*)"\x24\xec\x06" "QQQVGA")
QDEF(MP_QSTR_QQVGA, (const byte*)"\x75\x61\x05" "QQVGA")
QDEF(MP_QSTR_QVGA, (const byte*)"\x84\xfc\x04" "QVGA")
QDEF(MP_QSTR_VGA, (const byte*)"\xd5\xf6\x03" "VGA")
QDEF(MP_QSTR_HQQQQVGA, (const byte*)"\x7d\xc0\x08" "HQQQQVGA")
QDEF(MP_QSTR_HQQQVGA, (const byte*)"\x8c\x9a\x07" "HQQQVGA")
QDEF(MP_QSTR_HQQVGA, (const byte*)"\xdd\xf3\x06" "HQQVGA")
QDEF(MP_QSTR_HQVGA, (const byte*)"\xec\xd1\x05" "HQVGA")
QDEF(MP_QSTR_HVGA, (const byte*)"\xbd\xde\x04" "HVGA")
QDEF(MP_QSTR_B64X32, (const byte*)"\xfc\xca\x06" "B64X32")
QDEF(MP_QSTR_B64X64, (const byte*)"\x5f\xca\x06" "B64X64")
QDEF(MP_QSTR_B128X64, (const byte*)"\xa6\x50\x07" "B128X64")
QDEF(MP_QSTR_B128X128, (const byte*)"\x9f\x69\x08" "B128X128")
QDEF(MP_QSTR_B160X160, (const byte*)"\x9f\xc9\x08" "B160X160")
QDEF(MP_QSTR_B320X320, (const byte*)"\x9f\x5b\x08" "B320X320")
QDEF(MP_QSTR_QQVGA2, (const byte*)"\x27\x90\x06" "QQVGA2")
QDEF(MP_QSTR_WVGA, (const byte*)"\x42\x15\x04" "WVGA")
QDEF(MP_QSTR_WVGA2, (const byte*)"\xb0\xbd\x05" "WVGA2")
QDEF(MP_QSTR_SVGA, (const byte*)"\xc6\x25\x04" "SVGA")
QDEF(MP_QSTR_XGA, (const byte*)"\x5b\x31\x03" "XGA")
QDEF(MP_QSTR_WXGA, (const byte*)"\xcc\x3f\x04" "WXGA")
QDEF(MP_QSTR_SXGA, (const byte*)"\x48\x70\x04" "SXGA")
QDEF(MP_QSTR_SXGAM, (const byte*)"\x05\x79\x05" "SXGAM")
QDEF(MP_QSTR_UXGA, (const byte*)"\x8e\x06\x04" "UXGA")
QDEF(MP_QSTR_HD, (const byte*)"\xc9\x73\x02" "HD")
QDEF(MP_QSTR_FHD, (const byte*)"\x2f\xb3\x03" "FHD")
QDEF(MP_QSTR_QHD, (const byte*)"\xf8\xfb\x03" "QHD")
QDEF(MP_QSTR_QXGA, (const byte*)"\x0a\x37\x04" "QXGA")
QDEF(MP_QSTR_WQXGA, (const byte*)"\x7d\x8b\x05" "WQXGA")
QDEF(MP_QSTR_WQXGA2, (const byte*)"\x2f\xfb\x06" "WQXGA2")
QDEF(MP_QSTR_IOCTL_SET_READOUT_WINDOW, (const byte*)"\xb5\x41\x18" "IOCTL_SET_READOUT_WINDOW")
QDEF(MP_QSTR_IOCTL_GET_READOUT_WINDOW, (const byte*)"\x21\xaf\x18" "IOCTL_GET_READOUT_WINDOW")
QDEF(MP_QSTR_IOCTL_SET_TRIGGERED_MODE, (const byte*)"\x5f\xc0\x18" "IOCTL_SET_TRIGGERED_MODE")
QDEF(MP_QSTR_IOCTL_GET_TRIGGERED_MODE, (const byte*)"\xcb\xb1\x18" "IOCTL_GET_TRIGGERED_MODE")
QDEF(MP_QSTR_IOCTL_TRIGGER_AUTO_FOCUS, (const byte*)"\x5c\x1f\x18" "IOCTL_TRIGGER_AUTO_FOCUS")
QDEF(MP_QSTR_IOCTL_PAUSE_AUTO_FOCUS, (const byte*)"\x16\x13\x16" "IOCTL_PAUSE_AUTO_FOCUS")
QDEF(MP_QSTR_IOCTL_RESET_AUTO_FOCUS, (const byte*)"\x31\x0f\x16" "IOCTL_RESET_AUTO_FOCUS")
QDEF(MP_QSTR_IOCTL_WAIT_ON_AUTO_FOCUS, (const byte*)"\x71\x53\x18" "IOCTL_WAIT_ON_AUTO_FOCUS")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_WIDTH, (const byte*)"\xfb\x7f\x16" "IOCTL_LEPTON_GET_WIDTH")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_HEIGHT, (const byte*)"\x82\x1c\x17" "IOCTL_LEPTON_GET_HEIGHT")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_RADIOMETRY, (const byte*)"\x7b\x88\x1b" "IOCTL_LEPTON_GET_RADIOMETRY")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_REFRESH, (const byte*)"\xc0\xcb\x18" "IOCTL_LEPTON_GET_REFRESH")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_RESOLUTION, (const byte*)"\x33\xf1\x1b" "IOCTL_LEPTON_GET_RESOLUTION")
QDEF(MP_QSTR_IOCTL_LEPTON_RUN_COMMAND, (const byte*)"\x85\xc6\x18" "IOCTL_LEPTON_RUN_COMMAND")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_ATTRIBUTE, (const byte*)"\xd5\xc7\x1a" "IOCTL_LEPTON_SET_ATTRIBUTE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_ATTRIBUTE, (const byte*)"\xc1\x09\x1a" "IOCTL_LEPTON_GET_ATTRIBUTE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_FPA_TEMPERATURE, (const byte*)"\x59\xfc\x20" "IOCTL_LEPTON_GET_FPA_TEMPERATURE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_AUX_TEMPERATURE, (const byte*)"\xa2\x8c\x20" "IOCTL_LEPTON_GET_AUX_TEMPERATURE")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_MEASUREMENT_MODE, (const byte*)"\xbf\x6d\x21" "IOCTL_LEPTON_SET_MEASUREMENT_MODE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_MEASUREMENT_MODE, (const byte*)"\x2b\x78\x21" "IOCTL_LEPTON_GET_MEASUREMENT_MODE")
QDEF(MP_QSTR_IOCTL_LEPTON_SET_MEASUREMENT_RANGE, (const byte*)"\xc3\x7e\x22" "IOCTL_LEPTON_SET_MEASUREMENT_RANGE")
QDEF(MP_QSTR_IOCTL_LEPTON_GET_MEASUREMENT_RANGE, (const byte*)"\xd7\x85\x22" "IOCTL_LEPTON_GET_MEASUREMENT_RANGE")
QDEF(MP_QSTR_IOCTL_HIMAX_MD_ENABLE, (const byte*)"\x5a\xe2\x15" "IOCTL_HIMAX_MD_ENABLE")
QDEF(MP_QSTR_IOCTL_HIMAX_MD_WINDOW, (const byte*)"\x17\x45\x15" "IOCTL_HIMAX_MD_WINDOW")
QDEF(MP_QSTR_IOCTL_HIMAX_MD_THRESHOLD, (const byte*)"\x8c\xba\x18" "IOCTL_HIMAX_MD_THRESHOLD")
QDEF(MP_QSTR_IOCTL_HIMAX_MD_CLEAR, (const byte*)"\x02\x72\x14" "IOCTL_HIMAX_MD_CLEAR")
QDEF(MP_QSTR_IOCTL_HIMAX_OSC_ENABLE, (const byte*)"\x2c\x47\x16" "IOCTL_HIMAX_OSC_ENABLE")
QDEF(MP_QSTR_SINGLE_BUFFER, (const byte*)"\xe0\x50\x0d" "SINGLE_BUFFER")
QDEF(MP_QSTR_DOUBLE_BUFFER, (const byte*)"\xcf\x24\x0d" "DOUBLE_BUFFER")
QDEF(MP_QSTR_TRIPLE_BUFFER, (const byte*)"\xec\x79\x0d" "TRIPLE_BUFFER")
QDEF(MP_QSTR_VIDEO_FIFO, (const byte*)"\xad\x03\x0a" "VIDEO_FIFO")
QDEF(MP_QSTR_shutdown, (const byte*)"\xed\x80\x08" "shutdown")
QDEF(MP_QSTR_skip_frames, (const byte*)"\x55\xcb\x0b" "skip_frames")
QDEF(MP_QSTR_get_fb, (const byte*)"\x08\x40\x06" "get_fb")
QDEF(MP_QSTR_get_id, (const byte*)"\xa1\x3f\x06" "get_id")
QDEF(MP_QSTR_alloc_extra_fb, (const byte*)"\xd6\xa4\x0e" "alloc_extra_fb")
QDEF(MP_QSTR_dealloc_extra_fb, (const byte*)"\xd7\x78\x10" "dealloc_extra_fb")
QDEF(MP_QSTR_set_pixformat, (const byte*)"\x3a\x5c\x0d" "set_pixformat")
QDEF(MP_QSTR_get_pixformat, (const byte*)"\x2e\x5d\x0d" "get_pixformat")
QDEF(MP_QSTR_set_framesize, (const byte*)"\x20\xa2\x0d" "set_framesize")
QDEF(MP_QSTR_get_framesize, (const byte*)"\x34\x3f\x0d" "get_framesize")
QDEF(MP_QSTR_set_framerate, (const byte*)"\x47\x05\x0d" "set_framerate")
QDEF(MP_QSTR_get_framerate, (const byte*)"\x53\xa3\x0d" "get_framerate")
QDEF(MP_QSTR_set_windowing, (const byte*)"\xf4\x61\x0d" "set_windowing")
QDEF(MP_QSTR_get_windowing, (const byte*)"\xe0\x00\x0d" "get_windowing")
QDEF(MP_QSTR_set_gainceiling, (const byte*)"\xba\x38\x0f" "set_gainceiling")
QDEF(MP_QSTR_set_contrast, (const byte*)"\x5a\x7f\x0c" "set_contrast")
QDEF(MP_QSTR_set_brightness, (const byte*)"\x91\xbe\x0e" "set_brightness")
QDEF(MP_QSTR_set_saturation, (const byte*)"\x84\xfc\x0e" "set_saturation")
QDEF(MP_QSTR_set_quality, (const byte*)"\xd5\x79\x0b" "set_quality")
QDEF(MP_QSTR_set_colorbar, (const byte*)"\xd4\xed\x0c" "set_colorbar")
QDEF(MP_QSTR_set_auto_gain, (const byte*)"\xc9\x83\x0d" "set_auto_gain")
QDEF(MP_QSTR_get_gain_db, (const byte*)"\xb4\xc8\x0b" "get_gain_db")
QDEF(MP_QSTR_set_auto_exposure, (const byte*)"\x1b\xd0\x11" "set_auto_exposure")
QDEF(MP_QSTR_get_exposure_us, (const byte*)"\x06\xc5\x0f" "get_exposure_us")
QDEF(MP_QSTR_set_auto_whitebal, (const byte*)"\x80\x67\x11" "set_auto_whitebal")
QDEF(MP_QSTR_get_rgb_gain_db, (const byte*)"\xdc\x8b\x0f" "get_rgb_gain_db")
QDEF(MP_QSTR_set_hmirror, (const byte*)"\x69\x72\x0b" "set_hmirror")
QDEF(MP_QSTR_get_hmirror, (const byte*)"\x7d\x35\x0b" "get_hmirror")
QDEF(MP_QSTR_set_vflip, (const byte*)"\xdd\x73\x09" "set_vflip")
QDEF(MP_QSTR_get_vflip, (const byte*)"\xc9\xb6\x09" "get_vflip")
QDEF(MP_QSTR_set_transpose, (const byte*)"\x8b\xf9\x0d" "set_transpose")
QDEF(MP_QSTR_get_transpose, (const byte*)"\x9f\x30\x0d" "get_transpose")
QDEF(MP_QSTR_set_auto_rotation, (const byte*)"\xfc\x74\x11" "set_auto_rotation")
QDEF(MP_QSTR_get_auto_rotation, (const byte*)"\xe8\xa9\x11" "get_auto_rotation")
QDEF(MP_QSTR_set_framebuffers, (const byte*)"\xf6\x9a\x10" "set_framebuffers")
QDEF(MP_QSTR_get_framebuffers, (const byte*)"\x62\xe6\x10" "get_framebuffers")
QDEF(MP_QSTR_disable_full_flush, (const byte*)"\x06\x8f\x12" "disable_full_flush")
QDEF(MP_QSTR_set_special_effect, (const byte*)"\xd1\x2a\x12" "set_special_effect")
QDEF(MP_QSTR_set_lens_correction, (const byte*)"\xa5\x50\x13" "set_lens_correction")
QDEF(MP_QSTR_set_vsync_callback, (const byte*)"\xbf\x38\x12" "set_vsync_callback")
QDEF(MP_QSTR_set_frame_callback, (const byte*)"\xb3\x07\x12" "set_frame_callback")
QDEF(MP_QSTR_set_color_palette, (const byte*)"\xa7\x5b\x11" "set_color_palette")
QDEF(MP_QSTR_get_color_palette, (const byte*)"\xb3\xb8\x11" "get_color_palette")
QDEF(MP_QSTR___write_reg, (const byte*)"\xd7\xa5\x0b" "__write_reg")
QDEF(MP_QSTR___read_reg, (const byte*)"\x38\xbc\x0a" "__read_reg")
QDEF(MP_QSTR_output, (const byte*)"\x9a\x69\x06" "output")
QDEF(MP_QSTR_tf_classification, (const byte*)"\x9e\x1a\x11" "tf_classification")
QDEF(MP_QSTR_load_to_fb, (const byte*)"\xfc\xc4\x0a" "load_to_fb")
QDEF(MP_QSTR_min_scale, (const byte*)"\x88\xbc\x09" "min_scale")
QDEF(MP_QSTR_scale_mul, (const byte*)"\x96\xde\x09" "scale_mul")
QDEF(MP_QSTR_x_overlap, (const byte*)"\x71\x18\x09" "x_overlap")
QDEF(MP_QSTR_y_overlap, (const byte*)"\xb0\x0f\x09" "y_overlap")
QDEF(MP_QSTR_ram, (const byte*)"\xfb\x8b\x03" "ram")
QDEF(MP_QSTR_input_height, (const byte*)"\xb3\x62\x0c" "input_height")
QDEF(MP_QSTR_input_width, (const byte*)"\x0a\x76\x0b" "input_width")
QDEF(MP_QSTR_input_channels, (const byte*)"\x1c\x49\x0e" "input_channels")
QDEF(MP_QSTR_input_datatype, (const byte*)"\x04\x9e\x0e" "input_datatype")
QDEF(MP_QSTR_input_scale, (const byte*)"\x54\x2f\x0b" "input_scale")
QDEF(MP_QSTR_input_zero_point, (const byte*)"\x7d\x5b\x10" "input_zero_point")
QDEF(MP_QSTR_output_height, (const byte*)"\x7a\x5b\x0d" "output_height")
QDEF(MP_QSTR_output_width, (const byte*)"\xa3\xac\x0c" "output_width")
QDEF(MP_QSTR_output_channels, (const byte*)"\x15\xbd\x0f" "output_channels")
QDEF(MP_QSTR_output_datatype, (const byte*)"\x0d\x4e\x0f" "output_datatype")
QDEF(MP_QSTR_output_scale, (const byte*)"\xfd\x88\x0c" "output_scale")
QDEF(MP_QSTR_output_zero_point, (const byte*)"\x34\x1d\x11" "output_zero_point")
QDEF(MP_QSTR_classify, (const byte*)"\x3d\xcb\x08" "classify")
QDEF(MP_QSTR_segment, (const byte*)"\xc6\xd2\x07" "segment")
QDEF(MP_QSTR_detect, (const byte*)"\xe2\x49\x06" "detect")
QDEF(MP_QSTR_tf_model, (const byte*)"\x07\x57\x08" "tf_model")
QDEF(MP_QSTR_tf, (const byte*)"\x97\x6f\x02" "tf")
QDEF(MP_QSTR_load_builtin_model, (const byte*)"\xed\x94\x12" "load_builtin_model")
QDEF(MP_QSTR_free_from_fb, (const byte*)"\xa3\xa1\x0c" "free_from_fb")
QDEF(MP_QSTR_edgeitems, (const byte*)"\xc0\xd3\x09" "edgeitems")
QDEF(MP_QSTR_inplace, (const byte*)"\xf9\xf3\x07" "inplace")
QDEF(MP_QSTR_dtype, (const byte*)"\x59\x61\x05" "dtype")
QDEF(MP_QSTR_order, (const byte*)"\x6b\x61\x05" "order")
QDEF(MP_QSTR_C, (const byte*)"\xe6\xb5\x01" "C")
QDEF(MP_QSTR_flat, (const byte*)"\x7a\x42\x04" "flat")
QDEF(MP_QSTR_shape, (const byte*)"\xca\x46\x05" "shape")
QDEF(MP_QSTR_strides, (const byte*)"\xcb\x9c\x07" "strides")
QDEF(MP_QSTR_T, (const byte*)"\xf1\xb5\x01" "T")
QDEF(MP_QSTR_reshape, (const byte*)"\x7d\xe5\x07" "reshape")
QDEF(MP_QSTR_byteswap, (const byte*)"\xda\x20\x08" "byteswap")
QDEF(MP_QSTR_flatten, (const byte*)"\x25\x49\x07" "flatten")
QDEF(MP_QSTR_tobytes, (const byte*)"\xa7\x2f\x07" "tobytes")
QDEF(MP_QSTR_tolist, (const byte*)"\x7c\x6d\x06" "tolist")
QDEF(MP_QSTR_ndarray, (const byte*)"\x76\xca\x07" "ndarray")
QDEF(MP_QSTR_flatiter, (const byte*)"\xf0\xfd\x08" "flatiter")
QDEF(MP_QSTR_ulab, (const byte*)"\x9f\x52\x04" "ulab")
QDEF(MP_QSTR___version__, (const byte*)"\x3f\x98\x0b" "__version__")
QDEF(MP_QSTR_numpy, (const byte*)"\x7a\xfe\x05" "numpy")
QDEF(MP_QSTR_scipy, (const byte*)"\xf5\x70\x05" "scipy")
QDEF(MP_QSTR_user, (const byte*)"\x54\xf1\x04" "user")
QDEF(MP_QSTR_utils, (const byte*)"\xd2\x9d\x05" "utils")
QDEF(MP_QSTR_left, (const byte*)"\xde\x4d\x04" "left")
QDEF(MP_QSTR_right, (const byte*)"\xe5\xba\x05" "right")
QDEF(MP_QSTR_dx, (const byte*)"\x99\x6d\x02" "dx")
QDEF(MP_QSTR_axis, (const byte*)"\x06\xf0\x04" "axis")
QDEF(MP_QSTR_k, (const byte*)"\xce\xb5\x01" "k")
QDEF(MP_QSTR_M, (const byte*)"\xe8\xb5\x01" "M")
QDEF(MP_QSTR_num, (const byte*)"\x73\x5b\x03" "num")
QDEF(MP_QSTR_endpoint, (const byte*)"\x06\x4f\x08" "endpoint")
QDEF(MP_QSTR_retstep, (const byte*)"\x34\xab\x07" "retstep")
QDEF(MP_QSTR_base, (const byte*)"\xf0\x46\x04" "base")
QDEF(MP_QSTR_v, (const byte*)"\xd3\xb5\x01" "v")
QDEF(MP_QSTR_n, (const byte*)"\xcb\xb5\x01" "n")
QDEF(MP_QSTR_ddof, (const byte*)"\xec\xe7\x04" "ddof")
QDEF(MP_QSTR_frombuffer, (const byte*)"\x93\x99\x0a" "frombuffer")
QDEF(MP_QSTR_inf, (const byte*)"\x04\x53\x03" "inf")
QDEF(MP_QSTR_nan, (const byte*)"\xe4\x58\x03" "nan")
QDEF(MP_QSTR_uint8, (const byte*)"\x7b\xfa\x05" "uint8")
QDEF(MP_QSTR_int8, (const byte*)"\xee\xb5\x04" "int8")
QDEF(MP_QSTR_uint16, (const byte*)"\x84\x48\x06" "uint16")
QDEF(MP_QSTR_int16, (const byte*)"\xf1\x72\x05" "int16")
QDEF(MP_QSTR_fft, (const byte*)"\x91\x36\x03" "fft")
QDEF(MP_QSTR_linalg, (const byte*)"\x44\x8f\x06" "linalg")
QDEF(MP_QSTR_set_printoptions, (const byte*)"\xd9\xc4\x10" "set_printoptions")
QDEF(MP_QSTR_get_printoptions, (const byte*)"\x4d\x38\x10" "get_printoptions")
QDEF(MP_QSTR_ndinfo, (const byte*)"\xa1\xb0\x06" "ndinfo")
QDEF(MP_QSTR_arange, (const byte*)"\x7b\xf6\x06" "arange")
QDEF(MP_QSTR_concatenate, (const byte*)"\x0a\x9e\x0b" "concatenate")
QDEF(MP_QSTR_diag, (const byte*)"\x6e\xfc\x04" "diag")
QDEF(MP_QSTR_empty, (const byte*)"\xb0\xdf\x05" "empty")
QDEF(MP_QSTR_eye, (const byte*)"\xbc\x24\x03" "eye")
QDEF(MP_QSTR_interp, (const byte*)"\xf1\xf8\x06" "interp")
QDEF(MP_QSTR_trapz, (const byte*)"\x88\x45\x05" "trapz")
QDEF(MP_QSTR_full, (const byte*)"\xd6\x68\x04" "full")
QDEF(MP_QSTR_linspace, (const byte*)"\x6a\x59\x08" "linspace")
QDEF(MP_QSTR_logspace, (const byte*)"\x85\x89\x08" "logspace")
QDEF(MP_QSTR_ones, (const byte*)"\xd2\xcb\x04" "ones")
QDEF(MP_QSTR_zeros, (const byte*)"\x94\x9a\x05" "zeros")
QDEF(MP_QSTR_clip, (const byte*)"\xd3\xd4\x04" "clip")
QDEF(MP_QSTR_equal, (const byte*)"\x89\xa0\x05" "equal")
QDEF(MP_QSTR_not_equal, (const byte*)"\x63\xab\x09" "not_equal")
QDEF(MP_QSTR_minimum, (const byte*)"\x73\x5b\x07" "minimum")
QDEF(MP_QSTR_where, (const byte*)"\x08\xf5\x05" "where")
QDEF(MP_QSTR_convolve, (const byte*)"\x41\xcd\x08" "convolve")
QDEF(MP_QSTR_argmax, (const byte*)"\xa5\xe9\x06" "argmax")
QDEF(MP_QSTR_argmin, (const byte*)"\xbb\xe8\x06" "argmin")
QDEF(MP_QSTR_argsort, (const byte*)"\x2b\x3d\x07" "argsort")
QDEF(MP_QSTR_cross, (const byte*)"\x7b\xf1\x05" "cross")
QDEF(MP_QSTR_diff, (const byte*)"\xc8\xfc\x04" "diff")
QDEF(MP_QSTR_dot, (const byte*)"\x3a\x1f\x03" "dot")
QDEF(MP_QSTR_flip, (const byte*)"\x76\x41\x04" "flip")
QDEF(MP_QSTR_roll, (const byte*)"\x58\x02\x04" "roll")
QDEF(MP_QSTR_std, (const byte*)"\x46\x8d\x03" "std")
QDEF(MP_QSTR_polyfit, (const byte*)"\x34\xf4\x07" "polyfit")
QDEF(MP_QSTR_polyval, (const byte*)"\x34\x39\x07" "polyval")
QDEF(MP_QSTR_arctan2, (const byte*)"\x1c\x7d\x07" "arctan2")
QDEF(MP_QSTR_around, (const byte*)"\x06\xe5\x06" "around")
QDEF(MP_QSTR_vectorize, (const byte*)"\xea\x8c\x09" "vectorize")
QDEF(MP_QSTR_conjugate, (const byte*)"\x4f\x8b\x09" "conjugate")
QDEF(MP_QSTR_sort_complex, (const byte*)"\x20\xd8\x0c" "sort_complex")
QDEF(MP_QSTR_decimals, (const byte*)"\x1d\x86\x08" "decimals")
QDEF(MP_QSTR_otypes, (const byte*)"\xe1\xbd\x06" "otypes")
QDEF(MP_QSTR_ifft, (const byte*)"\xf8\xd5\x04" "ifft")
QDEF(MP_QSTR_reduced, (const byte*)"\x21\xef\x07" "reduced")
QDEF(MP_QSTR_cholesky, (const byte*)"\x89\x04\x08" "cholesky")
QDEF(MP_QSTR_det, (const byte*)"\x70\x1e\x03" "det")
QDEF(MP_QSTR_eig, (const byte*)"\xae\x22\x03" "eig")
QDEF(MP_QSTR_inv, (const byte*)"\x14\x53\x03" "inv")
QDEF(MP_QSTR_qr, (const byte*)"\x26\x70\x02" "qr")
QDEF(MP_QSTR_norm, (const byte*)"\x1b\x4e\x04" "norm")
QDEF(MP_QSTR_optimize, (const byte*)"\xdc\xad\x08" "optimize")
QDEF(MP_QSTR_signal, (const byte*)"\xbb\x01\x06" "signal")
QDEF(MP_QSTR_special, (const byte*)"\x44\x38\x07" "special")
QDEF(MP_QSTR_solve_triangular, (const byte*)"\x14\xa4\x10" "solve_triangular")
QDEF(MP_QSTR_cho_solve, (const byte*)"\x3d\x0f\x09" "cho_solve")
QDEF(MP_QSTR_xtol, (const byte*)"\x6a\xdb\x04" "xtol")
QDEF(MP_QSTR_maxiter, (const byte*)"\x3b\x4f\x07" "maxiter")
QDEF(MP_QSTR_xatol, (const byte*)"\x0b\x62\x05" "xatol")
QDEF(MP_QSTR_fatol, (const byte*)"\x95\xd0\x05" "fatol")
QDEF(MP_QSTR_p0, (const byte*)"\x45\x70\x02" "p0")
QDEF(MP_QSTR_tol, (const byte*)"\x32\x63\x03" "tol")
QDEF(MP_QSTR_rtol, (const byte*)"\xa0\xb2\x04" "rtol")
QDEF(MP_QSTR_bisect, (const byte*)"\x8f\x7a\x06" "bisect")
QDEF(MP_QSTR_curve_fit, (const byte*)"\x16\xe6\x09" "curve_fit")
QDEF(MP_QSTR_fmin, (const byte*)"\x29\x45\x04" "fmin")
QDEF(MP_QSTR_newton, (const byte*)"\x4c\x83\x06" "newton")
QDEF(MP_QSTR_sos, (const byte*)"\x6a\x90\x03" "sos")
QDEF(MP_QSTR_zi, (const byte*)"\xd6\x71\x02" "zi")
QDEF(MP_QSTR_spectrogram, (const byte*)"\x30\x5c\x0b" "spectrogram")
QDEF(MP_QSTR_sosfilt, (const byte*)"\xbd\xb0\x07" "sosfilt")
QDEF(MP_QSTR_gammaln, (const byte*)"\x80\x95\x07" "gammaln")
QDEF(MP_QSTR_square, (const byte*)"\xc4\x65\x06" "square")
QDEF(MP_QSTR_out, (const byte*)"\x2b\x5f\x03" "out")
QDEF(MP_QSTR_from_int16_buffer, (const byte*)"\xa7\x19\x11" "from_int16_buffer")
QDEF(MP_QSTR_from_uint16_buffer, (const byte*)"\xd2\xc8\x12" "from_uint16_buffer")
QDEF(MP_QSTR_from_int32_buffer, (const byte*)"\x21\x99\x11" "from_int32_buffer")
QDEF(MP_QSTR_from_uint32_buffer, (const byte*)"\x54\x0a\x12" "from_uint32_buffer")
QDEF(MP_QSTR_channels, (const byte*)"\x95\xb5\x08" "channels")
QDEF(MP_QSTR_audio, (const byte*)"\x53\x12\x05" "audio")
QDEF(MP_QSTR_start_streaming, (const byte*)"\x46\x83\x0f" "start_streaming")
QDEF(MP_QSTR_stop_streaming, (const byte*)"\x5e\xf2\x0e" "stop_streaming")
QDEF(MP_QSTR_buffers, (const byte*)"\xf6\xbd\x07" "buffers")
QDEF(MP_QSTR_overflow, (const byte*)"\xf9\xfe\x08" "overflow")
QDEF(MP_QSTR_clkdiv, (const byte*)"\x3a\xee\x06" "clkdiv")
QDEF(MP_QSTR_samples, (const byte*)"\x10\xcc\x07" "samples")
QDEF(MP_QSTR_get_buffer, (const byte*)"\xec\x0e\x0a" "get_buffer")
QDEF(MP_QSTR_start_ap, (const byte*)"\x4b\xeb\x08" "start_ap")
QDEF(MP_QSTR_connected_sta, (const byte*)"\x63\xc9\x0d" "connected_sta")
QDEF(MP_QSTR_wait_for_sta, (const byte*)"\x33\x41\x0c" "wait_for_sta")
QDEF(MP_QSTR_netinfo, (const byte*)"\x94\xe1\x07" "netinfo")
QDEF(MP_QSTR_highpass, (const byte*)"\x5a\x39\x08" "highpass")
QDEF(MP_QSTR_read_pdm, (const byte*)"\x31\x9c\x08" "read_pdm")
QDEF(MP_QSTR_buzzer, (const byte*)"\x65\x3f\x06" "buzzer")
QDEF(MP_QSTR_RESONANT_FREQ, (const byte*)"\xa4\x02\x0d" "RESONANT_FREQ")
QDEF(MP_QSTR_cpufreq, (const byte*)"\x23\xc3\x07" "cpufreq")
QDEF(MP_QSTR_set_frequency, (const byte*)"\x5c\x34\x0d" "set_frequency")
QDEF(MP_QSTR_get_current_frequencies, (const byte*)"\x18\x63\x17" "get_current_frequencies")
QDEF(MP_QSTR_get_supported_frequencies, (const byte*)"\x3f\x40\x19" "get_supported_frequencies")
QDEF(MP_QSTR_imu, (const byte*)"\x34\x53\x03" "imu")
QDEF(MP_QSTR_acceleration_mg, (const byte*)"\xf2\xa4\x0f" "acceleration_mg")
QDEF(MP_QSTR_angular_rate_mdps, (const byte*)"\x8f\x01\x11" "angular_rate_mdps")
QDEF(MP_QSTR_temperature_c, (const byte*)"\x75\x47\x0d" "temperature_c")
QDEF(MP_QSTR_triple_buffer, (const byte*)"\xec\x4d\x0d" "triple_buffer")
QDEF(MP_QSTR_bgr, (const byte*)"\xb2\x46\x03" "bgr")
QDEF(MP_QSTR_framesize, (const byte*)"\x5d\x81\x09" "framesize")
QDEF(MP_QSTR_lcd, (const byte*)"\xae\x3f\x03" "lcd")
QDEF(MP_QSTR_LCD_NONE, (const byte*)"\x1b\xd6\x08" "LCD_NONE")
QDEF(MP_QSTR_LCD_SHIELD, (const byte*)"\xce\xe0\x0a" "LCD_SHIELD")
QDEF(MP_QSTR_LCD_DISPLAY, (const byte*)"\xab\xac\x0b" "LCD_DISPLAY")
QDEF(MP_QSTR_LCD_DISPLAY_WITH_HDMI, (const byte*)"\x81\x6a\x15" "LCD_DISPLAY_WITH_HDMI")
QDEF(MP_QSTR_LCD_DISPLAY_ONLY_HDMI, (const byte*)"\x17\x3a\x15" "LCD_DISPLAY_ONLY_HDMI")
QDEF(MP_QSTR_TQVGA, (const byte*)"\xf0\x50\x05" "TQVGA")
QDEF(MP_QSTR_FHVGA, (const byte*)"\x9b\x6d\x05" "FHVGA")
QDEF(MP_QSTR_FHVGA2, (const byte*)"\xc9\x20\x06" "FHVGA2")
QDEF(MP_QSTR_THVGA, (const byte*)"\x09\x8e\x05" "THVGA")
QDEF(MP_QSTR_FWVGA, (const byte*)"\xa4\xf5\x05" "FWVGA")
QDEF(MP_QSTR_FWVGA2, (const byte*)"\x16\xaa\x06" "FWVGA2")
QDEF(MP_QSTR_TFWVGA, (const byte*)"\x90\x87\x06" "TFWVGA")
QDEF(MP_QSTR_TFWVGA2, (const byte*)"\xa2\x79\x07" "TFWVGA2")
QDEF(MP_QSTR_WSVGA, (const byte*)"\xb1\x99\x05" "WSVGA")
QDEF(MP_QSTR_SXGA2, (const byte*)"\x7a\x79\x05" "SXGA2")
QDEF(MP_QSTR_LCD_GESTURE_MOVE_UP, (const byte*)"\xc2\x2e\x13" "LCD_GESTURE_MOVE_UP")
QDEF(MP_QSTR_LCD_GESTURE_MOVE_LEFT, (const byte*)"\xbc\x68\x15" "LCD_GESTURE_MOVE_LEFT")
QDEF(MP_QSTR_LCD_GESTURE_MOVE_DOWN, (const byte*)"\xd5\x11\x15" "LCD_GESTURE_MOVE_DOWN")
QDEF(MP_QSTR_LCD_GESTURE_MOVE_RIGHT, (const byte*)"\xa7\x87\x16" "LCD_GESTURE_MOVE_RIGHT")
QDEF(MP_QSTR_LCD_GESTURE_ZOOM_IN, (const byte*)"\x46\xcb\x13" "LCD_GESTURE_ZOOM_IN")
QDEF(MP_QSTR_LCD_GESTURE_ZOOM_OUT, (const byte*)"\xaf\x3e\x14" "LCD_GESTURE_ZOOM_OUT")
QDEF(MP_QSTR_LCD_GESTURE_NONE, (const byte*)"\x03\x39\x10" "LCD_GESTURE_NONE")
QDEF(MP_QSTR_LCD_FLAG_PRESSED, (const byte*)"\x04\x22\x10" "LCD_FLAG_PRESSED")
QDEF(MP_QSTR_LCD_FLAG_RELEASED, (const byte*)"\x8f\x31\x11" "LCD_FLAG_RELEASED")
QDEF(MP_QSTR_LCD_FLAG_MOVED, (const byte*)"\x57\xbe\x0e" "LCD_FLAG_MOVED")
QDEF(MP_QSTR_get_backlight, (const byte*)"\xd9\xac\x0d" "get_backlight")
QDEF(MP_QSTR_set_backlight, (const byte*)"\xcd\xbe\x0d" "set_backlight")
QDEF(MP_QSTR_get_display_connected, (const byte*)"\x16\xeb\x15" "get_display_connected")
QDEF(MP_QSTR_register_hotplug_cb, (const byte*)"\xd0\x65\x13" "register_hotplug_cb")
QDEF(MP_QSTR_get_display_id_data, (const byte*)"\xcb\xef\x13" "get_display_id_data")
QDEF(MP_QSTR_send_frame, (const byte*)"\x9b\x12\x0a" "send_frame")
QDEF(MP_QSTR_receive_frame, (const byte*)"\xac\xf9\x0d" "receive_frame")
QDEF(MP_QSTR_register_receive_cb, (const byte*)"\x46\x2d\x13" "register_receive_cb")
QDEF(MP_QSTR_received_frame_src_addr, (const byte*)"\xd9\xf3\x17" "received_frame_src_addr")
QDEF(MP_QSTR_received_frame_bytes, (const byte*)"\x4e\xd6\x14" "received_frame_bytes")
QDEF(MP_QSTR_update_touch_points, (const byte*)"\xce\x66\x13" "update_touch_points")
QDEF(MP_QSTR_register_touch_cb, (const byte*)"\x48\x71\x11" "register_touch_cb")
QDEF(MP_QSTR_get_gesture, (const byte*)"\x0b\xbc\x0b" "get_gesture")
QDEF(MP_QSTR_get_points, (const byte*)"\x73\x47\x0a" "get_points")
QDEF(MP_QSTR_get_point_flag, (const byte*)"\x33\x7b\x0e" "get_point_flag")
QDEF(MP_QSTR_get_point_id, (const byte*)"\x72\x9e\x0c" "get_point_id")
QDEF(MP_QSTR_get_point_x_position, (const byte*)"\x61\xaa\x14" "get_point_x_position")
QDEF(MP_QSTR_get_point_y_position, (const byte*)"\x40\x0b\x14" "get_point_y_position")
QDEF(MP_QSTR_audio_callback, (const byte*)"\x25\x03\x0e" "audio_callback")
QDEF(MP_QSTR_MicroSpeech, (const byte*)"\x57\x68\x0b" "MicroSpeech")
QDEF(MP_QSTR_micro_speech, (const byte*)"\x28\x59\x0c" "micro_speech")
QDEF(MP_QSTR_tv, (const byte*)"\x87\x6f\x02" "tv")
QDEF(MP_QSTR_TV_NONE, (const byte*)"\x32\xbc\x07" "TV_NONE")
QDEF(MP_QSTR_TV_SHIELD, (const byte*)"\xa7\x65\x09" "TV_SHIELD")
QDEF(MP_QSTR_fw_dump, (const byte*)"\x67\xa5\x07" "fw_dump")
QDEF(MP_QSTR_fw_update, (const byte*)"\x3a\x19\x09" "fw_update")
QDEF(MP_QSTR_802_1X, (const byte*)"\x69\xe4\x06" "802_1X")
QDEF(MP_QSTR_MODE_STA, (const byte*)"\x5f\xe2\x08" "MODE_STA")
QDEF(MP_QSTR_MODE_AP, (const byte*)"\x88\x17\x07" "MODE_AP")
QDEF(MP_QSTR_MODE_P2P, (const byte*)"\x6b\xd1\x08" "MODE_P2P")
QDEF(MP_QSTR_MODE_BSP, (const byte*)"\x38\x25\x08" "MODE_BSP")
QDEF(MP_QSTR_MODE_FIRMWARE, (const byte*)"\x88\x75\x0d" "MODE_FIRMWARE")
QDEF(MP_QSTR_predict, (const byte*)"\x78\x08\x07" "predict")
QDEF(MP_QSTR_Net, (const byte*)"\x9a\xd8\x03" "Net")
QDEF(MP_QSTR_nn_st, (const byte*)"\xdd\x1f\x05" "nn_st")
QDEF(MP_QSTR_loadnnst, (const byte*)"\x84\xe8\x08" "loadnnst")
QDEF(MP_QSTR_activate, (const byte*)"\xfc\x47\x08" "activate")
QDEF(MP_QSTR_indev, (const byte*)"\x75\x28\x05" "indev")
QDEF(MP_QSTR_lvgl_helper, (const byte*)"\x8d\x75\x0b" "lvgl_helper")
QDEF(MP_QSTR_get_ptr, (const byte*)"\xba\x9b\x07" "get_ptr")
QDEF(MP_QSTR_alloc, (const byte*)"\x68\x11\x05" "alloc")
QDEF(MP_QSTR_get_display_size, (const byte*)"\x0c\xb5\x10" "get_display_size")
QDEF(MP_QSTR_pause_lvgl, (const byte*)"\x19\xaf\x0a" "pause_lvgl")
QDEF(MP_QSTR___SIZE__, (const byte*)"\xa0\xd1\x08" "__SIZE__")
QDEF(MP_QSTR___dereference__, (const byte*)"\x2f\x89\x0f" "__dereference__")
QDEF(MP_QSTR___cast__, (const byte*)"\x80\x96\x08" "__cast__")
QDEF(MP_QSTR_Blob, (const byte*)"\x86\xd4\x04" "Blob")
QDEF(MP_QSTR_ptr_val, (const byte*)"\xf7\x42\x07" "ptr_val")
QDEF(MP_QSTR_str_val, (const byte*)"\xb4\xa6\x07" "str_val")
QDEF(MP_QSTR_int_val, (const byte*)"\xf2\x9e\x07" "int_val")
QDEF(MP_QSTR_uint_val, (const byte*)"\xc7\x64\x08" "uint_val")
QDEF(MP_QSTR_short_val, (const byte*)"\x33\x0e\x09" "short_val")
QDEF(MP_QSTR_ushort_val, (const byte*)"\x06\x00\x0a" "ushort_val")
QDEF(MP_QSTR_char_val, (const byte*)"\xf9\xe7\x08" "char_val")
QDEF(MP_QSTR_uchar_val, (const byte*)"\xec\x60\x09" "uchar_val")
QDEF(MP_QSTR_C_Pointer, (const byte*)"\x02\xab\x09" "C_Pointer")
QDEF(MP_QSTR_GREY, (const byte*)"\x8c\xc6\x04" "GREY")
QDEF(MP_QSTR_RGB, (const byte*)"\xd2\x06\x03" "RGB")
QDEF(MP_QSTR_PALETTE, (const byte*)"\x78\x46\x07" "PALETTE")
QDEF(MP_QSTR_GREY_ALPHA, (const byte*)"\x67\x4c\x0a" "GREY_ALPHA")
QDEF(MP_QSTR_RGBA, (const byte*)"\x53\xe1\x04" "RGBA")
QDEF(MP_QSTR_MAX_OCTET_VALUE, (const byte*)"\x13\x35\x0f" "MAX_OCTET_VALUE")
QDEF(MP_QSTR_LCT, (const byte*)"\xde\xdc\x03" "LCT")
QDEF(MP_QSTR_ignore_adler32, (const byte*)"\x7d\x40\x0e" "ignore_adler32")
QDEF(MP_QSTR_ignore_nlen, (const byte*)"\xab\x93\x0b" "ignore_nlen")
QDEF(MP_QSTR_max_output_size, (const byte*)"\x4b\x38\x0f" "max_output_size")
QDEF(MP_QSTR_custom_zlib, (const byte*)"\x54\xe5\x0b" "custom_zlib")
QDEF(MP_QSTR_LodePNGDecompressSettings_custom_zlib, (const byte*)"\x92\x80\x25" "LodePNGDecompressSettings_custom_zlib")
QDEF(MP_QSTR_custom_inflate, (const byte*)"\x34\xe5\x0e" "custom_inflate")
QDEF(MP_QSTR_LodePNGDecompressSettings_custom_inflate, (const byte*)"\x32\x93\x28" "LodePNGDecompressSettings_custom_inflate")
QDEF(MP_QSTR_custom_context, (const byte*)"\x16\x61\x0e" "custom_context")
QDEF(MP_QSTR_LodePNGDecompressSettings, (const byte*)"\x5c\xfe\x19" "LodePNGDecompressSettings")
QDEF(MP_QSTR_colortype, (const byte*)"\x40\x32\x09" "colortype")
QDEF(MP_QSTR_bitdepth, (const byte*)"\x37\xa9\x08" "bitdepth")
QDEF(MP_QSTR_palette, (const byte*)"\xd8\x71\x07" "palette")
QDEF(MP_QSTR_palettesize, (const byte*)"\xbd\x69\x0b" "palettesize")
QDEF(MP_QSTR_key_defined, (const byte*)"\xcc\x43\x0b" "key_defined")
QDEF(MP_QSTR_key_r, (const byte*)"\xbf\x78\x05" "key_r")
QDEF(MP_QSTR_key_g, (const byte*)"\xaa\x78\x05" "key_g")
QDEF(MP_QSTR_key_b, (const byte*)"\xaf\x78\x05" "key_b")
QDEF(MP_QSTR_LodePNGColorMode, (const byte*)"\x80\xa8\x10" "LodePNGColorMode")
QDEF(MP_QSTR_year, (const byte*)"\x4a\x9f\x04" "year")
QDEF(MP_QSTR_month, (const byte*)"\x75\xf1\x05" "month")
QDEF(MP_QSTR_day, (const byte*)"\xf9\x1d\x03" "day")
QDEF(MP_QSTR_hour, (const byte*)"\x65\x36\x04" "hour")
QDEF(MP_QSTR_minute, (const byte*)"\x6b\xc2\x06" "minute")
QDEF(MP_QSTR_second, (const byte*)"\x15\x4b\x06" "second")
QDEF(MP_QSTR_LodePNGTime, (const byte*)"\x4b\x76\x0b" "LodePNGTime")
QDEF(MP_QSTR_compression_method, (const byte*)"\x2b\xc6\x12" "compression_method")
QDEF(MP_QSTR_filter_method, (const byte*)"\x05\x6a\x0d" "filter_method")
QDEF(MP_QSTR_interlace_method, (const byte*)"\x0a\xca\x10" "interlace_method")
QDEF(MP_QSTR_background_defined, (const byte*)"\x95\x21\x12" "background_defined")
QDEF(MP_QSTR_background_r, (const byte*)"\xa6\x0b\x0c" "background_r")
QDEF(MP_QSTR_background_g, (const byte*)"\xb3\x0b\x0c" "background_g")
QDEF(MP_QSTR_background_b, (const byte*)"\xb6\x0b\x0c" "background_b")
QDEF(MP_QSTR_text_num, (const byte*)"\x71\x08\x08" "text_num")
QDEF(MP_QSTR_text_keys, (const byte*)"\x43\x60\x09" "text_keys")
QDEF(MP_QSTR_text_strings, (const byte*)"\x81\x00\x0c" "text_strings")
QDEF(MP_QSTR_itext_num, (const byte*)"\xf8\x90\x09" "itext_num")
QDEF(MP_QSTR_itext_keys, (const byte*)"\x2a\xe1\x0a" "itext_keys")
QDEF(MP_QSTR_itext_langtags, (const byte*)"\xcb\x94\x0e" "itext_langtags")
QDEF(MP_QSTR_itext_transkeys, (const byte*)"\x90\xdc\x0f" "itext_transkeys")
QDEF(MP_QSTR_itext_strings, (const byte*)"\x48\xa6\x0d" "itext_strings")
QDEF(MP_QSTR_time_defined, (const byte*)"\x0e\xb9\x0c" "time_defined")
QDEF(MP_QSTR_phys_defined, (const byte*)"\x09\x3b\x0c" "phys_defined")
QDEF(MP_QSTR_phys_x, (const byte*)"\x30\xdc\x06" "phys_x")
QDEF(MP_QSTR_phys_y, (const byte*)"\x31\xdc\x06" "phys_y")
QDEF(MP_QSTR_phys_unit, (const byte*)"\xce\x29\x09" "phys_unit")
QDEF(MP_QSTR_gama_defined, (const byte*)"\xb1\x0f\x0c" "gama_defined")
QDEF(MP_QSTR_gama_gamma, (const byte*)"\x97\x83\x0a" "gama_gamma")
QDEF(MP_QSTR_chrm_defined, (const byte*)"\x8f\x55\x0c" "chrm_defined")
QDEF(MP_QSTR_chrm_white_x, (const byte*)"\xae\x74\x0c" "chrm_white_x")
QDEF(MP_QSTR_chrm_white_y, (const byte*)"\xaf\x74\x0c" "chrm_white_y")
QDEF(MP_QSTR_chrm_red_x, (const byte*)"\x5a\x92\x0a" "chrm_red_x")
QDEF(MP_QSTR_chrm_red_y, (const byte*)"\x5b\x92\x0a" "chrm_red_y")
QDEF(MP_QSTR_chrm_green_x, (const byte*)"\x12\x97\x0c" "chrm_green_x")
QDEF(MP_QSTR_chrm_green_y, (const byte*)"\x13\x97\x0c" "chrm_green_y")
QDEF(MP_QSTR_chrm_blue_x, (const byte*)"\xb7\xa7\x0b" "chrm_blue_x")
QDEF(MP_QSTR_chrm_blue_y, (const byte*)"\xb6\xa7\x0b" "chrm_blue_y")
QDEF(MP_QSTR_srgb_defined, (const byte*)"\x3f\x51\x0c" "srgb_defined")
QDEF(MP_QSTR_srgb_intent, (const byte*)"\x12\xe2\x0b" "srgb_intent")
QDEF(MP_QSTR_iccp_defined, (const byte*)"\xe2\x2f\x0c" "iccp_defined")
QDEF(MP_QSTR_iccp_name, (const byte*)"\x64\x36\x09" "iccp_name")
QDEF(MP_QSTR_iccp_profile, (const byte*)"\x48\x81\x0c" "iccp_profile")
QDEF(MP_QSTR_iccp_profile_size, (const byte*)"\x32\x9a\x11" "iccp_profile_size")
QDEF(MP_QSTR_unknown_chunks_data, (const byte*)"\x35\x5b\x13" "unknown_chunks_data")
QDEF(MP_QSTR_unknown_chunks_size, (const byte*)"\x40\xe3\x13" "unknown_chunks_size")
QDEF(MP_QSTR_LodePNGInfo, (const byte*)"\x50\xa4\x0b" "LodePNGInfo")
QDEF(MP_QSTR_zlibsettings, (const byte*)"\x5d\xc2\x0c" "zlibsettings")
QDEF(MP_QSTR_ignore_crc, (const byte*)"\x70\x7c\x0a" "ignore_crc")
QDEF(MP_QSTR_ignore_critical, (const byte*)"\x89\x7f\x0f" "ignore_critical")
QDEF(MP_QSTR_ignore_end, (const byte*)"\x6d\xa4\x0a" "ignore_end")
QDEF(MP_QSTR_color_convert, (const byte*)"\xb0\x02\x0d" "color_convert")
QDEF(MP_QSTR_read_text_chunks, (const byte*)"\x82\xf0\x10" "read_text_chunks")
QDEF(MP_QSTR_remember_unknown_chunks, (const byte*)"\x82\xba\x17" "remember_unknown_chunks")
QDEF(MP_QSTR_max_text_size, (const byte*)"\x09\xa2\x0d" "max_text_size")
QDEF(MP_QSTR_max_icc_size, (const byte*)"\x1d\xa5\x0c" "max_icc_size")
QDEF(MP_QSTR_LodePNGDecoderSettings, (const byte*)"\xe5\xd3\x16" "LodePNGDecoderSettings")
QDEF(MP_QSTR_decoder, (const byte*)"\xbb\x8e\x07" "decoder")
QDEF(MP_QSTR_info_raw, (const byte*)"\xd0\xe9\x08" "info_raw")
QDEF(MP_QSTR_info_png, (const byte*)"\x2d\xd1\x08" "info_png")
QDEF(MP_QSTR_error, (const byte*)"\xbd\x11\x05" "error")
QDEF(MP_QSTR_LodePNGState, (const byte*)"\x89\xaf\x0c" "LodePNGState")
QDEF(MP_QSTR___cast_instance__, (const byte*)"\xd6\xc2\x11" "__cast_instance__")
QDEF(MP_QSTR_lodepng, (const byte*)"\x5e\xb9\x07" "lodepng")
QDEF(MP_QSTR_decode_memory, (const byte*)"\x17\x04\x0d" "decode_memory")
QDEF(MP_QSTR_decode32, (const byte*)"\x08\x6e\x08" "decode32")
QDEF(MP_QSTR_decode24, (const byte*)"\x6f\x6e\x08" "decode24")
QDEF(MP_QSTR_error_text, (const byte*)"\x9f\xb2\x0a" "error_text")
QDEF(MP_QSTR_decompress_settings_init, (const byte*)"\xdd\x3e\x18" "decompress_settings_init")
QDEF(MP_QSTR_color_mode_init, (const byte*)"\x61\x08\x0f" "color_mode_init")
QDEF(MP_QSTR_color_mode_cleanup, (const byte*)"\xbb\xe6\x12" "color_mode_cleanup")
QDEF(MP_QSTR_color_mode_copy, (const byte*)"\xde\x3a\x0f" "color_mode_copy")
QDEF(MP_QSTR_color_mode_make, (const byte*)"\x79\xfc\x0f" "color_mode_make")
QDEF(MP_QSTR_palette_clear, (const byte*)"\xbe\x75\x0d" "palette_clear")
QDEF(MP_QSTR_palette_add, (const byte*)"\x86\x91\x0b" "palette_add")
QDEF(MP_QSTR_get_bpp, (const byte*)"\x2e\x54\x07" "get_bpp")
QDEF(MP_QSTR_get_channels, (const byte*)"\x5c\x43\x0c" "get_channels")
QDEF(MP_QSTR_is_greyscale_type, (const byte*)"\xd6\xb9\x11" "is_greyscale_type")
QDEF(MP_QSTR_is_alpha_type, (const byte*)"\xf3\xda\x0d" "is_alpha_type")
QDEF(MP_QSTR_is_palette_type, (const byte*)"\x1a\x91\x0f" "is_palette_type")
QDEF(MP_QSTR_has_palette_alpha, (const byte*)"\xf6\xe1\x11" "has_palette_alpha")
QDEF(MP_QSTR_can_have_alpha, (const byte*)"\x07\x6a\x0e" "can_have_alpha")
QDEF(MP_QSTR_get_raw_size, (const byte*)"\x72\xe7\x0c" "get_raw_size")
QDEF(MP_QSTR_info_init, (const byte*)"\x0e\x99\x09" "info_init")
QDEF(MP_QSTR_info_cleanup, (const byte*)"\xf4\x90\x0c" "info_cleanup")
QDEF(MP_QSTR_info_copy, (const byte*)"\xb1\x62\x09" "info_copy")
QDEF(MP_QSTR_add_text, (const byte*)"\x06\x66\x08" "add_text")
QDEF(MP_QSTR_clear_text, (const byte*)"\x3e\xba\x0a" "clear_text")
QDEF(MP_QSTR_add_itext, (const byte*)"\x0f\x77\x09" "add_itext")
QDEF(MP_QSTR_clear_itext, (const byte*)"\xf7\xd1\x0b" "clear_itext")
QDEF(MP_QSTR_set_icc, (const byte*)"\x11\x8b\x07" "set_icc")
QDEF(MP_QSTR_clear_icc, (const byte*)"\x8a\x6a\x09" "clear_icc")
QDEF(MP_QSTR_convert, (const byte*)"\xf2\x9e\x07" "convert")
QDEF(MP_QSTR_decoder_settings_init, (const byte*)"\x84\xef\x15" "decoder_settings_init")
QDEF(MP_QSTR_state_init, (const byte*)"\x57\x0b\x0a" "state_init")
QDEF(MP_QSTR_state_cleanup, (const byte*)"\x8d\xcb\x0d" "state_cleanup")
QDEF(MP_QSTR_state_copy, (const byte*)"\x28\x10\x0a" "state_copy")
QDEF(MP_QSTR_inspect, (const byte*)"\xb3\xba\x07" "inspect")
QDEF(MP_QSTR_inspect_chunk, (const byte*)"\x77\xd7\x0d" "inspect_chunk")
QDEF(MP_QSTR_chunk_length, (const byte*)"\x5d\x48\x0c" "chunk_length")
QDEF(MP_QSTR_chunk_type, (const byte*)"\x99\x31\x0a" "chunk_type")
QDEF(MP_QSTR_chunk_type_equals, (const byte*)"\x39\x17\x11" "chunk_type_equals")
QDEF(MP_QSTR_chunk_ancillary, (const byte*)"\xee\x16\x0f" "chunk_ancillary")
QDEF(MP_QSTR_chunk_private, (const byte*)"\x4c\x95\x0d" "chunk_private")
QDEF(MP_QSTR_chunk_safetocopy, (const byte*)"\x8e\x79\x10" "chunk_safetocopy")
QDEF(MP_QSTR_chunk_data, (const byte*)"\x11\x8d\x0a" "chunk_data")
QDEF(MP_QSTR_chunk_data_const, (const byte*)"\x4b\xf8\x10" "chunk_data_const")
QDEF(MP_QSTR_chunk_check_crc, (const byte*)"\xea\x74\x0f" "chunk_check_crc")
QDEF(MP_QSTR_chunk_generate_crc, (const byte*)"\x27\xeb\x12" "chunk_generate_crc")
QDEF(MP_QSTR_chunk_next, (const byte*)"\x46\x18\x0a" "chunk_next")
QDEF(MP_QSTR_chunk_next_const, (const byte*)"\x1c\x1a\x10" "chunk_next_const")
QDEF(MP_QSTR_chunk_find, (const byte*)"\x04\xe5\x0a" "chunk_find")
QDEF(MP_QSTR_chunk_find_const, (const byte*)"\x5e\xc0\x10" "chunk_find_const")
QDEF(MP_QSTR_chunk_append, (const byte*)"\x6f\xb6\x0c" "chunk_append")
QDEF(MP_QSTR_chunk_create, (const byte*)"\xc5\x5d\x0c" "chunk_create")
QDEF(MP_QSTR_inflate, (const byte*)"\x18\x7d\x07" "inflate")
QDEF(MP_QSTR_zlib_decompress, (const byte*)"\x80\xe5\x0f" "zlib_decompress")
QDEF(MP_QSTR_default_decompress_settings, (const byte*)"\x4c\x67\x1b" "default_decompress_settings")
QDEF(MP_QSTR_auto_refresh, (const byte*)"\xe8\x16\x0c" "auto_refresh")
QDEF(MP_QSTR_SDL, (const byte*)"\x7e\x13\x03" "SDL")
QDEF(MP_QSTR_monitor_flush, (const byte*)"\x12\x14\x0d" "monitor_flush")
QDEF(MP_QSTR_mouse_read, (const byte*)"\xe9\x6e\x0a" "mouse_read")
QDEF(MP_QSTR_SIZE, (const byte*)"\x60\xa5\x04" "SIZE")
QDEF(MP_QSTR_cast, (const byte*)"\x40\xc2\x04" "cast")
QDEF(MP_QSTR_TRACE, (const byte*)"\xc4\xc5\x05" "TRACE")
QDEF(MP_QSTR_INFO, (const byte*)"\xeb\xbb\x04" "INFO")
QDEF(MP_QSTR_WARN, (const byte*)"\xef\x52\x04" "WARN")
QDEF(MP_QSTR_ERROR, (const byte*)"\x9d\x19\x05" "ERROR")
QDEF(MP_QSTR_USER, (const byte*)"\x54\xf1\x04" "USER")
QDEF(MP_QSTR_NONE, (const byte*)"\x4f\x4d\x04" "NONE")
QDEF(MP_QSTR_ENUM_LV_LOG_LEVEL, (const byte*)"\x61\x8a\x11" "ENUM_LV_LOG_LEVEL")
QDEF(MP_QSTR_INV, (const byte*)"\x34\xd7\x03" "INV")
QDEF(MP_QSTR_OK, (const byte*)"\x61\x73\x02" "OK")
QDEF(MP_QSTR_LV_RES, (const byte*)"\x44\x58\x06" "LV_RES")
QDEF(MP_QSTR_OFF, (const byte*)"\xaa\xe0\x03" "OFF")
QDEF(MP_QSTR_LOWEST, (const byte*)"\x93\xc9\x06" "LOWEST")
QDEF(MP_QSTR_MID, (const byte*)"\x85\xc6\x03" "MID")
QDEF(MP_QSTR_HIGHEST, (const byte*)"\x29\xa7\x07" "HIGHEST")
QDEF(MP_QSTR_LV_TASK_PRIO, (const byte*)"\xd6\x62\x0c" "LV_TASK_PRIO")
QDEF(MP_QSTR_TRANSP, (const byte*)"\xcf\x9e\x06" "TRANSP")
QDEF(MP_QSTR__0, (const byte*)"\x0a\x75\x02" "_0")
QDEF(MP_QSTR__10, (const byte*)"\x5b\x16\x03" "_10")
QDEF(MP_QSTR__20, (const byte*)"\x38\x16\x03" "_20")
QDEF(MP_QSTR__30, (const byte*)"\x19\x16\x03" "_30")
QDEF(MP_QSTR__40, (const byte*)"\xfe\x16\x03" "_40")
QDEF(MP_QSTR__50, (const byte*)"\xdf\x16\x03" "_50")
QDEF(MP_QSTR__60, (const byte*)"\xbc\x16\x03" "_60")
QDEF(MP_QSTR__70, (const byte*)"\x9d\x16\x03" "_70")
QDEF(MP_QSTR__80, (const byte*)"\x72\x15\x03" "_80")
QDEF(MP_QSTR__90, (const byte*)"\x53\x15\x03" "_90")
QDEF(MP_QSTR__100, (const byte*)"\x8b\xe1\x04" "_100")
QDEF(MP_QSTR_COVER, (const byte*)"\xe8\x6b\x05" "COVER")
QDEF(MP_QSTR_LV_OPA, (const byte*)"\x7e\x5d\x06" "LV_OPA")
QDEF(MP_QSTR_MAX, (const byte*)"\x91\xc7\x03" "MAX")
QDEF(MP_QSTR_MIN, (const byte*)"\x8f\xc6\x03" "MIN")
QDEF(MP_QSTR_ENUM_LV_COORD, (const byte*)"\xd9\xe6\x0d" "ENUM_LV_COORD")
QDEF(MP_QSTR_IN_TOP_LEFT, (const byte*)"\xf2\xc2\x0b" "IN_TOP_LEFT")
QDEF(MP_QSTR_IN_TOP_MID, (const byte*)"\x69\x03\x0a" "IN_TOP_MID")
QDEF(MP_QSTR_IN_TOP_RIGHT, (const byte*)"\xa9\x2d\x0c" "IN_TOP_RIGHT")
QDEF(MP_QSTR_IN_BOTTOM_LEFT, (const byte*)"\x16\x43\x0e" "IN_BOTTOM_LEFT")
QDEF(MP_QSTR_IN_BOTTOM_MID, (const byte*)"\x0d\xcf\x0d" "IN_BOTTOM_MID")
QDEF(MP_QSTR_IN_BOTTOM_RIGHT, (const byte*)"\x4d\xc2\x0f" "IN_BOTTOM_RIGHT")
QDEF(MP_QSTR_IN_LEFT_MID, (const byte*)"\xb9\xee\x0b" "IN_LEFT_MID")
QDEF(MP_QSTR_IN_RIGHT_MID, (const byte*)"\x62\x89\x0c" "IN_RIGHT_MID")
QDEF(MP_QSTR_OUT_TOP_LEFT, (const byte*)"\xfb\x91\x0c" "OUT_TOP_LEFT")
QDEF(MP_QSTR_OUT_TOP_MID, (const byte*)"\xc0\x8a\x0b" "OUT_TOP_MID")
QDEF(MP_QSTR_OUT_TOP_RIGHT, (const byte*)"\x40\xa0\x0d" "OUT_TOP_RIGHT")
QDEF(MP_QSTR_OUT_BOTTOM_LEFT, (const byte*)"\x3f\xd7\x0f" "OUT_BOTTOM_LEFT")
QDEF(MP_QSTR_OUT_BOTTOM_MID, (const byte*)"\x04\x29\x0e" "OUT_BOTTOM_MID")
QDEF(MP_QSTR_OUT_BOTTOM_RIGHT, (const byte*)"\x84\x6f\x10" "OUT_BOTTOM_RIGHT")
QDEF(MP_QSTR_OUT_LEFT_TOP, (const byte*)"\x7b\x6e\x0c" "OUT_LEFT_TOP")
QDEF(MP_QSTR_OUT_LEFT_MID, (const byte*)"\x30\xd6\x0c" "OUT_LEFT_MID")
QDEF(MP_QSTR_OUT_LEFT_BOTTOM, (const byte*)"\xbf\x18\x0f" "OUT_LEFT_BOTTOM")
QDEF(MP_QSTR_OUT_RIGHT_TOP, (const byte*)"\xc0\x5c\x0d" "OUT_RIGHT_TOP")
QDEF(MP_QSTR_OUT_RIGHT_MID, (const byte*)"\x8b\x05\x0d" "OUT_RIGHT_MID")
QDEF(MP_QSTR_OUT_RIGHT_BOTTOM, (const byte*)"\xa4\x4d\x10" "OUT_RIGHT_BOTTOM")
QDEF(MP_QSTR_LV_ALIGN, (const byte*)"\xcd\xd1\x08" "LV_ALIGN")
QDEF(MP_QSTR_POINTER, (const byte*)"\x7e\x49\x07" "POINTER")
QDEF(MP_QSTR_KEYPAD, (const byte*)"\x27\xd3\x06" "KEYPAD")
QDEF(MP_QSTR_BUTTON, (const byte*)"\xf3\xda\x06" "BUTTON")
QDEF(MP_QSTR_ENCODER, (const byte*)"\x31\x4d\x07" "ENCODER")
QDEF(MP_QSTR_LV_INDEV_TYPE, (const byte*)"\x57\x54\x0d" "LV_INDEV_TYPE")
QDEF(MP_QSTR_REL, (const byte*)"\x9e\x06\x03" "REL")
QDEF(MP_QSTR_PR, (const byte*)"\xc7\x74\x02" "PR")
QDEF(MP_QSTR_LV_INDEV_STATE, (const byte*)"\xf8\x46\x0e" "LV_INDEV_STATE")
QDEF(MP_QSTR_HOR, (const byte*)"\x50\xec\x03" "HOR")
QDEF(MP_QSTR_VER, (const byte*)"\x84\xf6\x03" "VER")
QDEF(MP_QSTR_ONE, (const byte*)"\xa1\xdf\x03" "ONE")
QDEF(MP_QSTR_LV_DRAG_DIR, (const byte*)"\x10\xd7\x0b" "LV_DRAG_DIR")
QDEF(MP_QSTR_TOP, (const byte*)"\x4e\x00\x03" "TOP")
QDEF(MP_QSTR_BOTTOM, (const byte*)"\x6a\x29\x06" "BOTTOM")
QDEF(MP_QSTR_LEFT, (const byte*)"\x9e\x6d\x04" "LEFT")
QDEF(MP_QSTR_RIGHT, (const byte*)"\xc5\x79\x05" "RIGHT")
QDEF(MP_QSTR_LV_GESTURE_DIR, (const byte*)"\x47\xb0\x0e" "LV_GESTURE_DIR")
QDEF(MP_QSTR_LV_FONT_SUBPX, (const byte*)"\xa0\xa1\x0d" "LV_FONT_SUBPX")
QDEF(MP_QSTR_ON, (const byte*)"\x64\x73\x02" "ON")
QDEF(MP_QSTR_LV_ANIM, (const byte*)"\x2b\x25\x07" "LV_ANIM")
QDEF(MP_QSTR_FULL_COVER, (const byte*)"\x64\xcf\x0a" "FULL_COVER")
QDEF(MP_QSTR_CHANGED, (const byte*)"\x07\x18\x07" "CHANGED")
QDEF(MP_QSTR_UNKNOWN, (const byte*)"\x8d\x87\x07" "UNKNOWN")
QDEF(MP_QSTR_LV_DRAW_MASK_RES, (const byte*)"\xd0\xb7\x10" "LV_DRAW_MASK_RES")
QDEF(MP_QSTR_LINE, (const byte*)"\x8b\x3c\x04" "LINE")
QDEF(MP_QSTR_ANGLE, (const byte*)"\xe4\x2c\x05" "ANGLE")
QDEF(MP_QSTR_RADIUS, (const byte*)"\xbd\x91\x06" "RADIUS")
QDEF(MP_QSTR_FADE, (const byte*)"\x83\xf2\x04" "FADE")
QDEF(MP_QSTR_MAP, (const byte*)"\x99\xc7\x03" "MAP")
QDEF(MP_QSTR_LV_DRAW_MASK_TYPE, (const byte*)"\x2c\xfb\x11" "LV_DRAW_MASK_TYPE")
QDEF(MP_QSTR_LV_DRAW_MASK_LINE_SIDE, (const byte*)"\x1e\xc3\x16" "LV_DRAW_MASK_LINE_SIDE")
QDEF(MP_QSTR_ADDITIVE, (const byte*)"\xa3\x6d\x08" "ADDITIVE")
QDEF(MP_QSTR_SUBTRACTIVE, (const byte*)"\x6b\x02\x0b" "SUBTRACTIVE")
QDEF(MP_QSTR_LV_BLEND_MODE, (const byte*)"\xbd\x62\x0d" "LV_BLEND_MODE")
QDEF(MP_QSTR_CIRCLE, (const byte*)"\xf7\x02\x06" "CIRCLE")
QDEF(MP_QSTR_ENUM_LV_RADIUS, (const byte*)"\xd4\xbc\x0e" "ENUM_LV_RADIUS")
QDEF(MP_QSTR_FULL, (const byte*)"\x96\x47\x04" "FULL")
QDEF(MP_QSTR_INTERNAL, (const byte*)"\x42\xcc\x08" "INTERNAL")
QDEF(MP_QSTR_LV_BORDER_SIDE, (const byte*)"\x28\x32\x0e" "LV_BORDER_SIDE")
QDEF(MP_QSTR_LV_GRAD_DIR, (const byte*)"\x70\x2b\x0b" "LV_GRAD_DIR")
QDEF(MP_QSTR_UNDERLINE, (const byte*)"\xc3\x61\x09" "UNDERLINE")
QDEF(MP_QSTR_STRIKETHROUGH, (const byte*)"\x2c\x38\x0d" "STRIKETHROUGH")
QDEF(MP_QSTR_LV_TEXT_DECOR, (const byte*)"\x1d\xb3\x0d" "LV_TEXT_DECOR")
QDEF(MP_QSTR_CLIP_CORNER, (const byte*)"\x6b\xfb\x0b" "CLIP_CORNER")
QDEF(MP_QSTR_TRANSFORM_WIDTH, (const byte*)"\xf0\x2e\x0f" "TRANSFORM_WIDTH")
QDEF(MP_QSTR_TRANSFORM_HEIGHT, (const byte*)"\xa9\xcd\x10" "TRANSFORM_HEIGHT")
QDEF(MP_QSTR_TRANSFORM_ANGLE, (const byte*)"\x57\xce\x0f" "TRANSFORM_ANGLE")
QDEF(MP_QSTR_TRANSFORM_ZOOM, (const byte*)"\x61\xec\x0e" "TRANSFORM_ZOOM")
QDEF(MP_QSTR_OPA_SCALE, (const byte*)"\xfc\x75\x09" "OPA_SCALE")
QDEF(MP_QSTR_PAD_TOP, (const byte*)"\x44\xdd\x07" "PAD_TOP")
QDEF(MP_QSTR_PAD_BOTTOM, (const byte*)"\xa0\x2e\x0a" "PAD_BOTTOM")
QDEF(MP_QSTR_PAD_LEFT, (const byte*)"\x54\x78\x08" "PAD_LEFT")
QDEF(MP_QSTR_PAD_RIGHT, (const byte*)"\x4f\x9f\x09" "PAD_RIGHT")
QDEF(MP_QSTR_PAD_INNER, (const byte*)"\x51\x6e\x09" "PAD_INNER")
QDEF(MP_QSTR_MARGIN_TOP, (const byte*)"\x0f\x3f\x0a" "MARGIN_TOP")
QDEF(MP_QSTR_MARGIN_BOTTOM, (const byte*)"\xcb\x9c\x0d" "MARGIN_BOTTOM")
QDEF(MP_QSTR_MARGIN_LEFT, (const byte*)"\xff\xa5\x0b" "MARGIN_LEFT")
QDEF(MP_QSTR_MARGIN_RIGHT, (const byte*)"\xc4\x94\x0c" "MARGIN_RIGHT")
QDEF(MP_QSTR_BG_BLEND_MODE, (const byte*)"\xc2\x29\x0d" "BG_BLEND_MODE")
QDEF(MP_QSTR_BG_MAIN_STOP, (const byte*)"\x93\x9b\x0c" "BG_MAIN_STOP")
QDEF(MP_QSTR_BG_GRAD_STOP, (const byte*)"\xa8\xfe\x0c" "BG_GRAD_STOP")
QDEF(MP_QSTR_BG_GRAD_DIR, (const byte*)"\xcf\x46\x0b" "BG_GRAD_DIR")
QDEF(MP_QSTR_BG_COLOR, (const byte*)"\xa2\x7e\x08" "BG_COLOR")
QDEF(MP_QSTR_BG_GRAD_COLOR, (const byte*)"\x6d\x10\x0d" "BG_GRAD_COLOR")
QDEF(MP_QSTR_BG_OPA, (const byte*)"\xe1\x90\x06" "BG_OPA")
QDEF(MP_QSTR_BORDER_WIDTH, (const byte*)"\xf0\x90\x0c" "BORDER_WIDTH")
QDEF(MP_QSTR_BORDER_SIDE, (const byte*)"\x2d\x8a\x0b" "BORDER_SIDE")
QDEF(MP_QSTR_BORDER_BLEND_MODE, (const byte*)"\x8b\x8d\x11" "BORDER_BLEND_MODE")
QDEF(MP_QSTR_BORDER_POST, (const byte*)"\x2e\x18\x0b" "BORDER_POST")
QDEF(MP_QSTR_BORDER_COLOR, (const byte*)"\x0b\x1e\x0c" "BORDER_COLOR")
QDEF(MP_QSTR_BORDER_OPA, (const byte*)"\x08\x2f\x0a" "BORDER_OPA")
QDEF(MP_QSTR_OUTLINE_WIDTH, (const byte*)"\x1c\x3c\x0d" "OUTLINE_WIDTH")
QDEF(MP_QSTR_OUTLINE_PAD, (const byte*)"\x0f\xc6\x0b" "OUTLINE_PAD")
QDEF(MP_QSTR_OUTLINE_BLEND_MODE, (const byte*)"\xa7\xbc\x12" "OUTLINE_BLEND_MODE")
QDEF(MP_QSTR_OUTLINE_COLOR, (const byte*)"\xa7\xeb\x0d" "OUTLINE_COLOR")
QDEF(MP_QSTR_OUTLINE_OPA, (const byte*)"\xa4\xf2\x0b" "OUTLINE_OPA")
QDEF(MP_QSTR_SHADOW_WIDTH, (const byte*)"\xfa\xdf\x0c" "SHADOW_WIDTH")
QDEF(MP_QSTR_SHADOW_OFS_X, (const byte*)"\xa1\x5b\x0c" "SHADOW_OFS_X")
QDEF(MP_QSTR_SHADOW_OFS_Y, (const byte*)"\xa0\x5b\x0c" "SHADOW_OFS_Y")
QDEF(MP_QSTR_SHADOW_SPREAD, (const byte*)"\x8d\x4b\x0d" "SHADOW_SPREAD")
QDEF(MP_QSTR_SHADOW_BLEND_MODE, (const byte*)"\x41\x4d\x11" "SHADOW_BLEND_MODE")
QDEF(MP_QSTR_SHADOW_COLOR, (const byte*)"\x01\x7e\x0c" "SHADOW_COLOR")
QDEF(MP_QSTR_SHADOW_OPA, (const byte*)"\x02\x45\x0a" "SHADOW_OPA")
QDEF(MP_QSTR_PATTERN_BLEND_MODE, (const byte*)"\xaf\xaa\x12" "PATTERN_BLEND_MODE")
QDEF(MP_QSTR_PATTERN_REPEAT, (const byte*)"\x05\xff\x0e" "PATTERN_REPEAT")
QDEF(MP_QSTR_PATTERN_RECOLOR, (const byte*)"\xd8\xc0\x0f" "PATTERN_RECOLOR")
QDEF(MP_QSTR_PATTERN_OPA, (const byte*)"\xac\xe1\x0b" "PATTERN_OPA")
QDEF(MP_QSTR_PATTERN_RECOLOR_OPA, (const byte*)"\x39\x00\x13" "PATTERN_RECOLOR_OPA")
QDEF(MP_QSTR_PATTERN_IMAGE, (const byte*)"\xf5\xa2\x0d" "PATTERN_IMAGE")
QDEF(MP_QSTR_VALUE_LETTER_SPACE, (const byte*)"\x94\x36\x12" "VALUE_LETTER_SPACE")
QDEF(MP_QSTR_VALUE_LINE_SPACE, (const byte*)"\x24\xa6\x10" "VALUE_LINE_SPACE")
QDEF(MP_QSTR_VALUE_BLEND_MODE, (const byte*)"\xac\x25\x10" "VALUE_BLEND_MODE")
QDEF(MP_QSTR_VALUE_OFS_X, (const byte*)"\xac\xa4\x0b" "VALUE_OFS_X")
QDEF(MP_QSTR_VALUE_OFS_Y, (const byte*)"\xad\xa4\x0b" "VALUE_OFS_Y")
QDEF(MP_QSTR_VALUE_ALIGN, (const byte*)"\xfc\x54\x0b" "VALUE_ALIGN")
QDEF(MP_QSTR_VALUE_COLOR, (const byte*)"\x4c\xd6\x0b" "VALUE_COLOR")
QDEF(MP_QSTR_VALUE_OPA, (const byte*)"\x0f\x3b\x09" "VALUE_OPA")
QDEF(MP_QSTR_VALUE_FONT, (const byte*)"\xe2\x1e\x0a" "VALUE_FONT")
QDEF(MP_QSTR_VALUE_STR, (const byte*)"\x84\xc8\x09" "VALUE_STR")
QDEF(MP_QSTR_TEXT_LETTER_SPACE, (const byte*)"\x62\x3b\x11" "TEXT_LETTER_SPACE")
QDEF(MP_QSTR_TEXT_LINE_SPACE, (const byte*)"\x12\x00\x0f" "TEXT_LINE_SPACE")
QDEF(MP_QSTR_TEXT_DECOR, (const byte*)"\xb8\x16\x0a" "TEXT_DECOR")
QDEF(MP_QSTR_TEXT_BLEND_MODE, (const byte*)"\x1a\x5c\x0f" "TEXT_BLEND_MODE")
QDEF(MP_QSTR_TEXT_COLOR, (const byte*)"\x7a\x33\x0a" "TEXT_COLOR")
QDEF(MP_QSTR_TEXT_SEL_COLOR, (const byte*)"\x7f\x87\x0e" "TEXT_SEL_COLOR")
QDEF(MP_QSTR_TEXT_SEL_BG_COLOR, (const byte*)"\x05\x54\x11" "TEXT_SEL_BG_COLOR")
QDEF(MP_QSTR_TEXT_OPA, (const byte*)"\xb9\xcf\x08" "TEXT_OPA")
QDEF(MP_QSTR_TEXT_FONT, (const byte*)"\x54\xc1\x09" "TEXT_FONT")
QDEF(MP_QSTR_LINE_WIDTH, (const byte*)"\x12\xb6\x0a" "LINE_WIDTH")
QDEF(MP_QSTR_LINE_BLEND_MODE, (const byte*)"\xe9\x28\x0f" "LINE_BLEND_MODE")
QDEF(MP_QSTR_LINE_DASH_WIDTH, (const byte*)"\xd3\x9e\x0f" "LINE_DASH_WIDTH")
QDEF(MP_QSTR_LINE_DASH_GAP, (const byte*)"\x83\x48\x0d" "LINE_DASH_GAP")
QDEF(MP_QSTR_LINE_ROUNDED, (const byte*)"\xb7\xb0\x0c" "LINE_ROUNDED")
QDEF(MP_QSTR_LINE_COLOR, (const byte*)"\xa9\x53\x0a" "LINE_COLOR")
QDEF(MP_QSTR_LINE_OPA, (const byte*)"\xaa\x84\x08" "LINE_OPA")
QDEF(MP_QSTR_IMAGE_BLEND_MODE, (const byte*)"\x60\xa2\x10" "IMAGE_BLEND_MODE")
QDEF(MP_QSTR_IMAGE_RECOLOR, (const byte*)"\xb7\x6c\x0d" "IMAGE_RECOLOR")
QDEF(MP_QSTR_IMAGE_OPA, (const byte*)"\xc3\xcf\x09" "IMAGE_OPA")
QDEF(MP_QSTR_IMAGE_RECOLOR_OPA, (const byte*)"\x56\xb4\x11" "IMAGE_RECOLOR_OPA")
QDEF(MP_QSTR_TRANSITION_TIME, (const byte*)"\x00\x25\x0f" "TRANSITION_TIME")
QDEF(MP_QSTR_TRANSITION_DELAY, (const byte*)"\xc0\x4a\x10" "TRANSITION_DELAY")
QDEF(MP_QSTR_TRANSITION_PROP_1, (const byte*)"\xc6\x31\x11" "TRANSITION_PROP_1")
QDEF(MP_QSTR_TRANSITION_PROP_2, (const byte*)"\xc5\x31\x11" "TRANSITION_PROP_2")
QDEF(MP_QSTR_TRANSITION_PROP_3, (const byte*)"\xc4\x31\x11" "TRANSITION_PROP_3")
QDEF(MP_QSTR_TRANSITION_PROP_4, (const byte*)"\xc3\x31\x11" "TRANSITION_PROP_4")
QDEF(MP_QSTR_TRANSITION_PROP_5, (const byte*)"\xc2\x31\x11" "TRANSITION_PROP_5")
QDEF(MP_QSTR_TRANSITION_PROP_6, (const byte*)"\xc1\x31\x11" "TRANSITION_PROP_6")
QDEF(MP_QSTR_TRANSITION_PATH, (const byte*)"\xf8\x36\x0f" "TRANSITION_PATH")
QDEF(MP_QSTR_SCALE_WIDTH, (const byte*)"\x44\x17\x0b" "SCALE_WIDTH")
QDEF(MP_QSTR_SCALE_BORDER_WIDTH, (const byte*)"\xd7\xf8\x12" "SCALE_BORDER_WIDTH")
QDEF(MP_QSTR_SCALE_END_BORDER_WIDTH, (const byte*)"\x27\x35\x16" "SCALE_END_BORDER_WIDTH")
QDEF(MP_QSTR_SCALE_END_LINE_WIDTH, (const byte*)"\x45\x46\x14" "SCALE_END_LINE_WIDTH")
QDEF(MP_QSTR_SCALE_GRAD_COLOR, (const byte*)"\xd0\x31\x10" "SCALE_GRAD_COLOR")
QDEF(MP_QSTR_SCALE_END_COLOR, (const byte*)"\xcf\xf6\x0f" "SCALE_END_COLOR")
QDEF(MP_QSTR_LV_STYLE, (const byte*)"\x77\x29\x08" "LV_STYLE")
QDEF(MP_QSTR_LTR, (const byte*)"\xaf\xde\x03" "LTR")
QDEF(MP_QSTR_RTL, (const byte*)"\xaf\x04\x03" "RTL")
QDEF(MP_QSTR_AUTO, (const byte*)"\xea\xb8\x04" "AUTO")
QDEF(MP_QSTR_INHERIT, (const byte*)"\x60\x44\x07" "INHERIT")
QDEF(MP_QSTR_NEUTRAL, (const byte*)"\xf0\x40\x07" "NEUTRAL")
QDEF(MP_QSTR_WEAK, (const byte*)"\x9d\x65\x04" "WEAK")
QDEF(MP_QSTR_LV_BIDI_DIR, (const byte*)"\x66\x4d\x0b" "LV_BIDI_DIR")
QDEF(MP_QSTR_RECOLOR, (const byte*)"\x4f\x07\x07" "RECOLOR")
QDEF(MP_QSTR_EXPAND, (const byte*)"\x23\xcb\x06" "EXPAND")
QDEF(MP_QSTR_FIT, (const byte*)"\x1e\xb3\x03" "FIT")
QDEF(MP_QSTR_LV_TXT_FLAG, (const byte*)"\x8b\x1a\x0b" "LV_TXT_FLAG")
QDEF(MP_QSTR_WAIT, (const byte*)"\x8e\x55\x04" "WAIT")
QDEF(MP_QSTR_PAR, (const byte*)"\x06\x0f\x03" "PAR")
QDEF(MP_QSTR_LV_TXT_CMD_STATE, (const byte*)"\xc5\xfd\x10" "LV_TXT_CMD_STATE")
QDEF(MP_QSTR_RAW, (const byte*)"\x01\x07\x03" "RAW")
QDEF(MP_QSTR_RAW_ALPHA, (const byte*)"\x6a\x87\x09" "RAW_ALPHA")
QDEF(MP_QSTR_RAW_CHROMA_KEYED, (const byte*)"\x0d\x83\x10" "RAW_CHROMA_KEYED")
QDEF(MP_QSTR_TRUE_COLOR, (const byte*)"\x91\xb3\x0a" "TRUE_COLOR")
QDEF(MP_QSTR_TRUE_COLOR_ALPHA, (const byte*)"\xfa\xd3\x10" "TRUE_COLOR_ALPHA")
QDEF(MP_QSTR_TRUE_COLOR_CHROMA_KEYED, (const byte*)"\x9d\x81\x17" "TRUE_COLOR_CHROMA_KEYED")
QDEF(MP_QSTR_INDEXED_1BIT, (const byte*)"\x8b\x4d\x0c" "INDEXED_1BIT")
QDEF(MP_QSTR_INDEXED_2BIT, (const byte*)"\x68\xd1\x0c" "INDEXED_2BIT")
QDEF(MP_QSTR_INDEXED_4BIT, (const byte*)"\x2e\x77\x0c" "INDEXED_4BIT")
QDEF(MP_QSTR_INDEXED_8BIT, (const byte*)"\xa2\x09\x0c" "INDEXED_8BIT")
QDEF(MP_QSTR_ALPHA_1BIT, (const byte*)"\xe0\x8e\x0a" "ALPHA_1BIT")
QDEF(MP_QSTR_ALPHA_2BIT, (const byte*)"\x03\x0b\x0a" "ALPHA_2BIT")
QDEF(MP_QSTR_ALPHA_4BIT, (const byte*)"\x45\xc1\x0a" "ALPHA_4BIT")
QDEF(MP_QSTR_ALPHA_8BIT, (const byte*)"\xc9\x91\x0a" "ALPHA_8BIT")
QDEF(MP_QSTR_RESERVED_15, (const byte*)"\x1a\x04\x0b" "RESERVED_15")
QDEF(MP_QSTR_RESERVED_16, (const byte*)"\x19\x04\x0b" "RESERVED_16")
QDEF(MP_QSTR_RESERVED_17, (const byte*)"\x18\x04\x0b" "RESERVED_17")
QDEF(MP_QSTR_RESERVED_18, (const byte*)"\x17\x04\x0b" "RESERVED_18")
QDEF(MP_QSTR_RESERVED_19, (const byte*)"\x16\x04\x0b" "RESERVED_19")
QDEF(MP_QSTR_RESERVED_20, (const byte*)"\xfc\x03\x0b" "RESERVED_20")
QDEF(MP_QSTR_RESERVED_21, (const byte*)"\xfd\x03\x0b" "RESERVED_21")
QDEF(MP_QSTR_RESERVED_22, (const byte*)"\xfe\x03\x0b" "RESERVED_22")
QDEF(MP_QSTR_RESERVED_23, (const byte*)"\xff\x03\x0b" "RESERVED_23")
QDEF(MP_QSTR_USER_ENCODED_0, (const byte*)"\x26\x17\x0e" "USER_ENCODED_0")
QDEF(MP_QSTR_USER_ENCODED_1, (const byte*)"\x27\x17\x0e" "USER_ENCODED_1")
QDEF(MP_QSTR_USER_ENCODED_2, (const byte*)"\x24\x17\x0e" "USER_ENCODED_2")
QDEF(MP_QSTR_USER_ENCODED_3, (const byte*)"\x25\x17\x0e" "USER_ENCODED_3")
QDEF(MP_QSTR_USER_ENCODED_4, (const byte*)"\x22\x17\x0e" "USER_ENCODED_4")
QDEF(MP_QSTR_USER_ENCODED_5, (const byte*)"\x23\x17\x0e" "USER_ENCODED_5")
QDEF(MP_QSTR_USER_ENCODED_6, (const byte*)"\x20\x17\x0e" "USER_ENCODED_6")
QDEF(MP_QSTR_USER_ENCODED_7, (const byte*)"\x21\x17\x0e" "USER_ENCODED_7")
QDEF(MP_QSTR_LV_IMG_CF, (const byte*)"\xd9\x90\x09" "LV_IMG_CF")
QDEF(MP_QSTR_HW_ERR, (const byte*)"\x60\x4a\x06" "HW_ERR")
QDEF(MP_QSTR_FS_ERR, (const byte*)"\xaa\x8a\x06" "FS_ERR")
QDEF(MP_QSTR_NOT_EX, (const byte*)"\x32\xe4\x06" "NOT_EX")
QDEF(MP_QSTR_LOCKED, (const byte*)"\xcf\x3f\x06" "LOCKED")
QDEF(MP_QSTR_DENIED, (const byte*)"\x22\xf0\x06" "DENIED")
QDEF(MP_QSTR_BUSY, (const byte*)"\xf8\x54\x04" "BUSY")
QDEF(MP_QSTR_TOUT, (const byte*)"\xff\x09\x04" "TOUT")
QDEF(MP_QSTR_NOT_IMP, (const byte*)"\x5b\x59\x07" "NOT_IMP")
QDEF(MP_QSTR_OUT_OF_MEM, (const byte*)"\x07\x79\x0a" "OUT_OF_MEM")
QDEF(MP_QSTR_INV_PARAM, (const byte*)"\xc4\x97\x09" "INV_PARAM")
QDEF(MP_QSTR_LV_FS_RES, (const byte*)"\xae\x15\x09" "LV_FS_RES")
QDEF(MP_QSTR_WR, (const byte*)"\x60\x74\x02" "WR")
QDEF(MP_QSTR_RD, (const byte*)"\x93\x74\x02" "RD")
QDEF(MP_QSTR_LV_FS_MODE, (const byte*)"\x29\x5a\x0a" "LV_FS_MODE")
QDEF(MP_QSTR_VARIABLE, (const byte*)"\xe3\x2e\x08" "VARIABLE")
QDEF(MP_QSTR_FILE, (const byte*)"\x83\x13\x04" "FILE")
QDEF(MP_QSTR_SYMBOL, (const byte*)"\xe3\x0c\x06" "SYMBOL")
QDEF(MP_QSTR_LV_IMG_SRC, (const byte*)"\x3e\x6a\x0a" "LV_IMG_SRC")
QDEF(MP_QSTR_DRAW_MAIN, (const byte*)"\x91\xed\x09" "DRAW_MAIN")
QDEF(MP_QSTR_DRAW_POST, (const byte*)"\x22\xac\x09" "DRAW_POST")
QDEF(MP_QSTR_COVER_CHK, (const byte*)"\xd7\x3d\x09" "COVER_CHK")
QDEF(MP_QSTR_LV_DESIGN, (const byte*)"\xb2\xe1\x09" "LV_DESIGN")
QDEF(MP_QSTR_NOT_COVER, (const byte*)"\xa2\x21\x09" "NOT_COVER")
QDEF(MP_QSTR_MASKED, (const byte*)"\x30\xab\x06" "MASKED")
QDEF(MP_QSTR_LV_DESIGN_RES, (const byte*)"\xa9\xc7\x0d" "LV_DESIGN_RES")
QDEF(MP_QSTR_PRESSED, (const byte*)"\x63\x5a\x07" "PRESSED")
QDEF(MP_QSTR_PRESSING, (const byte*)"\xc2\xb7\x08" "PRESSING")
QDEF(MP_QSTR_PRESS_LOST, (const byte*)"\xf9\x07\x0a" "PRESS_LOST")
QDEF(MP_QSTR_SHORT_CLICKED, (const byte*)"\x87\xbe\x0d" "SHORT_CLICKED")
QDEF(MP_QSTR_LONG_PRESSED, (const byte*)"\xb6\xf6\x0c" "LONG_PRESSED")
QDEF(MP_QSTR_LONG_PRESSED_REPEAT, (const byte*)"\x5e\x31\x13" "LONG_PRESSED_REPEAT")
QDEF(MP_QSTR_CLICKED, (const byte*)"\x6a\xd4\x07" "CLICKED")
QDEF(MP_QSTR_RELEASED, (const byte*)"\xc8\x6a\x08" "RELEASED")
QDEF(MP_QSTR_DRAG_BEGIN, (const byte*)"\x0d\x68\x0a" "DRAG_BEGIN")
QDEF(MP_QSTR_DRAG_END, (const byte*)"\x45\x4a\x08" "DRAG_END")
QDEF(MP_QSTR_DRAG_THROW_BEGIN, (const byte*)"\xc4\x12\x10" "DRAG_THROW_BEGIN")
QDEF(MP_QSTR_GESTURE, (const byte*)"\x02\x99\x07" "GESTURE")
QDEF(MP_QSTR_KEY, (const byte*)"\x12\xf1\x03" "KEY")
QDEF(MP_QSTR_FOCUSED, (const byte*)"\x08\xf4\x07" "FOCUSED")
QDEF(MP_QSTR_DEFOCUSED, (const byte*)"\x29\xc4\x09" "DEFOCUSED")
QDEF(MP_QSTR_LEAVE, (const byte*)"\x9e\x3d\x05" "LEAVE")
QDEF(MP_QSTR_VALUE_CHANGED, (const byte*)"\x33\x99\x0d" "VALUE_CHANGED")
QDEF(MP_QSTR_INSERT, (const byte*)"\xd2\x58\x06" "INSERT")
QDEF(MP_QSTR_REFRESH, (const byte*)"\xb8\xa8\x07" "REFRESH")
QDEF(MP_QSTR_APPLY, (const byte*)"\x71\x7a\x05" "APPLY")
QDEF(MP_QSTR_CANCEL, (const byte*)"\x03\xac\x06" "CANCEL")
QDEF(MP_QSTR_DELETE, (const byte*)"\x1c\x2c\x06" "DELETE")
QDEF(MP_QSTR_LV_EVENT, (const byte*)"\x6c\x5f\x08" "LV_EVENT")
QDEF(MP_QSTR_CLEANUP, (const byte*)"\x25\x8a\x07" "CLEANUP")
QDEF(MP_QSTR_CHILD_CHG, (const byte*)"\x5c\xf8\x09" "CHILD_CHG")
QDEF(MP_QSTR_COORD_CHG, (const byte*)"\xe3\xd1\x09" "COORD_CHG")
QDEF(MP_QSTR_PARENT_SIZE_CHG, (const byte*)"\x30\xaa\x0f" "PARENT_SIZE_CHG")
QDEF(MP_QSTR_STYLE_CHG, (const byte*)"\x81\xb0\x09" "STYLE_CHG")
QDEF(MP_QSTR_BASE_DIR_CHG, (const byte*)"\xc3\xcd\x0c" "BASE_DIR_CHG")
QDEF(MP_QSTR_REFR_EXT_DRAW_PAD, (const byte*)"\xc5\x98\x11" "REFR_EXT_DRAW_PAD")
QDEF(MP_QSTR_GET_TYPE, (const byte*)"\xf4\x8b\x08" "GET_TYPE")
QDEF(MP_QSTR_GET_STYLE, (const byte*)"\x3b\x25\x09" "GET_STYLE")
QDEF(MP_QSTR_GET_STATE_DSC, (const byte*)"\xf0\x0e\x0d" "GET_STATE_DSC")
QDEF(MP_QSTR_HIT_TEST, (const byte*)"\xf9\x9c\x08" "HIT_TEST")
QDEF(MP_QSTR_LONG_PRESS, (const byte*)"\x17\x1e\x0a" "LONG_PRESS")
QDEF(MP_QSTR_LONG_PRESS_REP, (const byte*)"\x0f\x65\x0e" "LONG_PRESS_REP")
QDEF(MP_QSTR_FOCUS, (const byte*)"\x69\xed\x05" "FOCUS")
QDEF(MP_QSTR_DEFOCUS, (const byte*)"\x88\x39\x07" "DEFOCUS")
QDEF(MP_QSTR_CONTROL, (const byte*)"\xe2\xf5\x07" "CONTROL")
QDEF(MP_QSTR_GET_EDITABLE, (const byte*)"\x5a\x00\x0c" "GET_EDITABLE")
QDEF(MP_QSTR_LV_SIGNAL, (const byte*)"\xde\x19\x09" "LV_SIGNAL")
QDEF(MP_QSTR_PARENT, (const byte*)"\x19\xd5\x06" "PARENT")
QDEF(MP_QSTR_POS, (const byte*)"\x49\x10\x03" "POS")
QDEF(MP_QSTR_FOLLOW, (const byte*)"\xf4\x45\x06" "FOLLOW")
QDEF(MP_QSTR_CLICK_FOCUS, (const byte*)"\xb8\xb6\x0b" "CLICK_FOCUS")
QDEF(MP_QSTR_LV_PROTECT, (const byte*)"\x0b\x3e\x0a" "LV_PROTECT")
QDEF(MP_QSTR_DEFAULT, (const byte*)"\x2e\xd8\x07" "DEFAULT")
QDEF(MP_QSTR_CHECKED, (const byte*)"\xe2\x94\x07" "CHECKED")
QDEF(MP_QSTR_EDITED, (const byte*)"\xf8\xe6\x06" "EDITED")
QDEF(MP_QSTR_HOVERED, (const byte*)"\x82\x05\x07" "HOVERED")
QDEF(MP_QSTR_DISABLED, (const byte*)"\x95\x70\x08" "DISABLED")
QDEF(MP_QSTR_LV_STATE, (const byte*)"\x77\xc6\x08" "LV_STATE")
QDEF(MP_QSTR_MAIN, (const byte*)"\xce\xb7\x04" "MAIN")
QDEF(MP_QSTR_ALL, (const byte*)"\x64\xb7\x03" "ALL")
QDEF(MP_QSTR_LV_OBJ_PART, (const byte*)"\x4f\x0c\x0b" "LV_OBJ_PART")
QDEF(MP_QSTR_ESC, (const byte*)"\x50\xa8\x03" "ESC")
QDEF(MP_QSTR_DEL, (const byte*)"\x88\xba\x03" "DEL")
QDEF(MP_QSTR_BACKSPACE, (const byte*)"\x8a\x9e\x09" "BACKSPACE")
QDEF(MP_QSTR_ENTER, (const byte*)"\x4d\x56\x05" "ENTER")
QDEF(MP_QSTR_NEXT, (const byte*)"\x02\x67\x04" "NEXT")
QDEF(MP_QSTR_PREV, (const byte*)"\x74\xca\x04" "PREV")
QDEF(MP_QSTR_HOME, (const byte*)"\x6a\x76\x04" "HOME")
QDEF(MP_QSTR_END, (const byte*)"\x2a\xa7\x03" "END")
QDEF(MP_QSTR_LV_KEY, (const byte*)"\xd7\x4a\x06" "LV_KEY")
QDEF(MP_QSTR_LV_GROUP_REFOCUS_POLICY, (const byte*)"\x04\xd6\x17" "LV_GROUP_REFOCUS_POLICY")
QDEF(MP_QSTR_FORMAT0_TINY, (const byte*)"\x83\x16\x0c" "FORMAT0_TINY")
QDEF(MP_QSTR_FORMAT0_FULL, (const byte*)"\x9a\x9c\x0c" "FORMAT0_FULL")
QDEF(MP_QSTR_SPARSE_TINY, (const byte*)"\x16\x05\x0b" "SPARSE_TINY")
QDEF(MP_QSTR_SPARSE_FULL, (const byte*)"\x0f\xf0\x0b" "SPARSE_FULL")
QDEF(MP_QSTR_LV_FONT_FMT_TXT_CMAP, (const byte*)"\xd4\x6f\x14" "LV_FONT_FMT_TXT_CMAP")
QDEF(MP_QSTR_COLUMN_LEFT, (const byte*)"\x77\x00\x0b" "COLUMN_LEFT")
QDEF(MP_QSTR_COLUMN_MID, (const byte*)"\xcc\xfb\x0a" "COLUMN_MID")
QDEF(MP_QSTR_COLUMN_RIGHT, (const byte*)"\x4c\x02\x0c" "COLUMN_RIGHT")
QDEF(MP_QSTR_ROW_TOP, (const byte*)"\x9b\xc1\x07" "ROW_TOP")
QDEF(MP_QSTR_ROW_MID, (const byte*)"\xd0\x19\x07" "ROW_MID")
QDEF(MP_QSTR_ROW_BOTTOM, (const byte*)"\xdf\x28\x0a" "ROW_BOTTOM")
QDEF(MP_QSTR_PRETTY_TOP, (const byte*)"\x2f\x53\x0a" "PRETTY_TOP")
QDEF(MP_QSTR_PRETTY_MID, (const byte*)"\xe4\x32\x0a" "PRETTY_MID")
QDEF(MP_QSTR_PRETTY_BOTTOM, (const byte*)"\x6b\x1d\x0d" "PRETTY_BOTTOM")
QDEF(MP_QSTR_GRID, (const byte*)"\x1d\xc7\x04" "GRID")
QDEF(MP_QSTR_LV_LAYOUT, (const byte*)"\xba\xd1\x09" "LV_LAYOUT")
QDEF(MP_QSTR_TIGHT, (const byte*)"\xc3\x39\x05" "TIGHT")
QDEF(MP_QSTR_LV_FIT, (const byte*)"\xdb\x25\x06" "LV_FIT")
QDEF(MP_QSTR_LV_CONT_PART, (const byte*)"\x1e\xe8\x0c" "LV_CONT_PART")
QDEF(MP_QSTR_CHECKED_RELEASED, (const byte*)"\xb0\xe2\x10" "CHECKED_RELEASED")
QDEF(MP_QSTR_CHECKED_PRESSED, (const byte*)"\x5b\xb6\x0f" "CHECKED_PRESSED")
QDEF(MP_QSTR_CHECKED_DISABLED, (const byte*)"\x6d\xd9\x10" "CHECKED_DISABLED")
QDEF(MP_QSTR_LV_BTN_STATE, (const byte*)"\x50\x33\x0c" "LV_BTN_STATE")
QDEF(MP_QSTR_LV_BTN_PART, (const byte*)"\x70\x77\x0b" "LV_BTN_PART")
QDEF(MP_QSTR_LV_IMGBTN_PART, (const byte*)"\x53\x32\x0e" "LV_IMGBTN_PART")
QDEF(MP_QSTR_NUM, (const byte*)"\x93\xd6\x03" "NUM")
QDEF(MP_QSTR_ENUM_LV_LABEL_DOT, (const byte*)"\xea\x30\x11" "ENUM_LV_LABEL_DOT")
QDEF(MP_QSTR_LAST, (const byte*)"\x2f\x5f\x04" "LAST")
QDEF(MP_QSTR_ENUM_LV_LABEL_POS, (const byte*)"\xf9\xfc\x11" "ENUM_LV_LABEL_POS")
QDEF(MP_QSTR_ENUM_LV_LABEL_TEXT_SEL, (const byte*)"\x6d\x5f\x16" "ENUM_LV_LABEL_TEXT_SEL")
QDEF(MP_QSTR_BREAK, (const byte*)"\x1a\xd9\x05" "BREAK")
QDEF(MP_QSTR_DOT, (const byte*)"\x5a\xbc\x03" "DOT")
QDEF(MP_QSTR_SROLL, (const byte*)"\xeb\x0f\x05" "SROLL")
QDEF(MP_QSTR_SROLL_CIRC, (const byte*)"\x2f\x68\x0a" "SROLL_CIRC")
QDEF(MP_QSTR_CROP, (const byte*)"\xcb\xf8\x04" "CROP")
QDEF(MP_QSTR_LV_LABEL_LONG, (const byte*)"\xf3\x0a\x0d" "LV_LABEL_LONG")
QDEF(MP_QSTR_LV_LABEL_ALIGN, (const byte*)"\xb4\x12\x0e" "LV_LABEL_ALIGN")
QDEF(MP_QSTR_LV_LABEL_PART, (const byte*)"\x6e\x70\x0d" "LV_LABEL_PART")
QDEF(MP_QSTR_LV_IMG_PART, (const byte*)"\x6b\xe8\x0b" "LV_IMG_PART")
QDEF(MP_QSTR_LV_LINE_PART, (const byte*)"\x66\x8e\x0c" "LV_LINE_PART")
QDEF(MP_QSTR_DRAG, (const byte*)"\x75\x5b\x04" "DRAG")
QDEF(MP_QSTR_HIDE, (const byte*)"\x45\x6c\x04" "HIDE")
QDEF(MP_QSTR_UNHIDE, (const byte*)"\x7e\xc5\x06" "UNHIDE")
QDEF(MP_QSTR_LV_SCROLLBAR_MODE, (const byte*)"\xe0\x58\x11" "LV_SCROLLBAR_MODE")
QDEF(MP_QSTR_LV_PAGE_EDGE, (const byte*)"\xef\xd6\x0c" "LV_PAGE_EDGE")
QDEF(MP_QSTR_BG, (const byte*)"\x80\x72\x02" "BG")
QDEF(MP_QSTR_SCROLLBAR, (const byte*)"\xd9\x95\x09" "SCROLLBAR")
QDEF(MP_QSTR_EDGE_FLASH, (const byte*)"\x09\x82\x0a" "EDGE_FLASH")
QDEF(MP_QSTR_SCROLLABLE, (const byte*)"\x42\xb6\x0a" "SCROLLABLE")
QDEF(MP_QSTR_LV_PAGE_PART, (const byte*)"\x7b\x54\x0c" "LV_PAGE_PART")
QDEF(MP_QSTR_LV_LIST_PART, (const byte*)"\xca\x9f\x0c" "LV_LIST_PART")
QDEF(MP_QSTR_DEF, (const byte*)"\x82\xba\x03" "DEF")
QDEF(MP_QSTR_ENUM_LV_CHART_POINT, (const byte*)"\xb3\x57\x13" "ENUM_LV_CHART_POINT")
QDEF(MP_QSTR_ENUM_LV_CHART_TICK_LENGTH, (const byte*)"\x09\xc6\x19" "ENUM_LV_CHART_TICK_LENGTH")
QDEF(MP_QSTR_COLUMN, (const byte*)"\xd3\xce\x06" "COLUMN")
QDEF(MP_QSTR_LV_CHART_TYPE, (const byte*)"\x2b\x07\x0d" "LV_CHART_TYPE")
QDEF(MP_QSTR_SHIFT, (const byte*)"\xe5\x25\x05" "SHIFT")
QDEF(MP_QSTR_LV_CHART_UPDATE_MODE, (const byte*)"\xbe\xf2\x14" "LV_CHART_UPDATE_MODE")
QDEF(MP_QSTR_PRIMARY_Y, (const byte*)"\xaf\xf9\x09" "PRIMARY_Y")
QDEF(MP_QSTR_SECONDARY_Y, (const byte*)"\xd9\x1d\x0b" "SECONDARY_Y")
QDEF(MP_QSTR_SKIP_LAST_TICK, (const byte*)"\xbb\x59\x0e" "SKIP_LAST_TICK")
QDEF(MP_QSTR_DRAW_LAST_TICK, (const byte*)"\x1a\x09\x0e" "DRAW_LAST_TICK")
QDEF(MP_QSTR_INVERSE_LABELS_ORDER, (const byte*)"\x0e\x2d\x14" "INVERSE_LABELS_ORDER")
QDEF(MP_QSTR_LV_CHART_AXIS, (const byte*)"\xb0\x8c\x0d" "LV_CHART_AXIS")
QDEF(MP_QSTR_LV_CHART_CURSOR, (const byte*)"\xb9\x64\x0f" "LV_CHART_CURSOR")
QDEF(MP_QSTR_SERIES_BG, (const byte*)"\x84\xe5\x09" "SERIES_BG")
QDEF(MP_QSTR_SERIES, (const byte*)"\x9e\xe5\x06" "SERIES")
QDEF(MP_QSTR_CURSOR, (const byte*)"\xcf\x1f\x06" "CURSOR")
QDEF(MP_QSTR_LV_CHART_PART, (const byte*)"\xe4\x73\x0d" "LV_CHART_PART")
QDEF(MP_QSTR_CELL1, (const byte*)"\x32\xc5\x05" "CELL1")
QDEF(MP_QSTR_CELL2, (const byte*)"\x31\xc5\x05" "CELL2")
QDEF(MP_QSTR_CELL3, (const byte*)"\x30\xc5\x05" "CELL3")
QDEF(MP_QSTR_CELL4, (const byte*)"\x37\xc5\x05" "CELL4")
QDEF(MP_QSTR_LV_TABLE_PART, (const byte*)"\x16\xa7\x0d" "LV_TABLE_PART")
QDEF(MP_QSTR_BULLET, (const byte*)"\xa3\x9c\x06" "BULLET")
QDEF(MP_QSTR_LV_CHECKBOX_PART, (const byte*)"\xdb\x7c\x10" "LV_CHECKBOX_PART")
QDEF(MP_QSTR_RECT, (const byte*)"\xe5\xd8\x04" "RECT")
QDEF(MP_QSTR_DISC, (const byte*)"\x38\x1e\x04" "DISC")
QDEF(MP_QSTR_LV_CPICKER_TYPE, (const byte*)"\x02\x59\x0f" "LV_CPICKER_TYPE")
QDEF(MP_QSTR_HUE, (const byte*)"\x9d\xee\x03" "HUE")
QDEF(MP_QSTR_SATURATION, (const byte*)"\x99\xeb\x0a" "SATURATION")
QDEF(MP_QSTR_VALUE, (const byte*)"\xae\xea\x05" "VALUE")
QDEF(MP_QSTR_LV_CPICKER_COLOR_MODE, (const byte*)"\x5b\xf4\x15" "LV_CPICKER_COLOR_MODE")
QDEF(MP_QSTR_KNOB, (const byte*)"\xcd\xe5\x04" "KNOB")
QDEF(MP_QSTR_LV_CPICKER_PART, (const byte*)"\xcd\x09\x0f" "LV_CPICKER_PART")
QDEF(MP_QSTR_SYMMETRICAL, (const byte*)"\x6b\x35\x0b" "SYMMETRICAL")
QDEF(MP_QSTR_CUSTOM, (const byte*)"\xb6\x8e\x06" "CUSTOM")
QDEF(MP_QSTR_LV_BAR_TYPE, (const byte*)"\x76\xc9\x0b" "LV_BAR_TYPE")
QDEF(MP_QSTR_INDIC, (const byte*)"\xcc\x31\x05" "INDIC")
QDEF(MP_QSTR_LV_BAR_PART, (const byte*)"\x39\x5c\x0b" "LV_BAR_PART")
QDEF(MP_QSTR_LV_SLIDER_TYPE, (const byte*)"\xa2\x17\x0e" "LV_SLIDER_TYPE")
QDEF(MP_QSTR_LV_SLIDER_PART, (const byte*)"\x6d\xc8\x0e" "LV_SLIDER_PART")
QDEF(MP_QSTR_LV_LED_PART, (const byte*)"\x25\xc0\x0b" "LV_LED_PART")
QDEF(MP_QSTR_ENUM_LV_BTNMATRIX_BTN, (const byte*)"\x88\x36\x15" "ENUM_LV_BTNMATRIX_BTN")
QDEF(MP_QSTR_HIDDEN, (const byte*)"\xef\x84\x06" "HIDDEN")
QDEF(MP_QSTR_NO_REPEAT, (const byte*)"\xec\x6b\x09" "NO_REPEAT")
QDEF(MP_QSTR_CHECKABLE, (const byte*)"\xe9\x25\x09" "CHECKABLE")
QDEF(MP_QSTR_CHECK_STATE, (const byte*)"\x6b\x56\x0b" "CHECK_STATE")
QDEF(MP_QSTR_CLICK_TRIG, (const byte*)"\x9c\x76\x0a" "CLICK_TRIG")
QDEF(MP_QSTR_LV_BTNMATRIX_CTRL, (const byte*)"\xf5\x78\x11" "LV_BTNMATRIX_CTRL")
QDEF(MP_QSTR_BTN, (const byte*)"\xbd\xc4\x03" "BTN")
QDEF(MP_QSTR_LV_BTNMATRIX_PART, (const byte*)"\x0b\x57\x11" "LV_BTNMATRIX_PART")
QDEF(MP_QSTR_TEXT_LOWER, (const byte*)"\x24\x82\x0a" "TEXT_LOWER")
QDEF(MP_QSTR_TEXT_UPPER, (const byte*)"\xc5\x12\x0a" "TEXT_UPPER")
QDEF(MP_QSTR_SPECIAL, (const byte*)"\x64\xbc\x07" "SPECIAL")
QDEF(MP_QSTR_LV_KEYBOARD_MODE, (const byte*)"\x51\x8d\x10" "LV_KEYBOARD_MODE")
QDEF(MP_QSTR_LV_KEYBOARD_PART, (const byte*)"\x25\xdb\x10" "LV_KEYBOARD_PART")
QDEF(MP_QSTR_LV_DROPDOWN_DIR, (const byte*)"\x7b\x68\x0f" "LV_DROPDOWN_DIR")
QDEF(MP_QSTR_LIST, (const byte*)"\x27\x3d\x04" "LIST")
QDEF(MP_QSTR_SELECTED, (const byte*)"\x2c\x63\x08" "SELECTED")
QDEF(MP_QSTR_LV_DROPDOWN_PART, (const byte*)"\x13\x49\x10" "LV_DROPDOWN_PART")
QDEF(MP_QSTR_INFINITE, (const byte*)"\xfb\xbf\x08" "INFINITE")
QDEF(MP_QSTR_LV_ROLLER_MODE, (const byte*)"\xf6\xc9\x0e" "LV_ROLLER_MODE")
QDEF(MP_QSTR_LV_ROLLER_PART, (const byte*)"\x02\x71\x0e" "LV_ROLLER_PART")
QDEF(MP_QSTR_ENUM_LV_TEXTAREA_CURSOR, (const byte*)"\xf3\xa7\x17" "ENUM_LV_TEXTAREA_CURSOR")
QDEF(MP_QSTR_PLACEHOLDER, (const byte*)"\xe6\x1e\x0b" "PLACEHOLDER")
QDEF(MP_QSTR_LV_TEXTAREA_PART, (const byte*)"\x62\x00\x10" "LV_TEXTAREA_PART")
QDEF(MP_QSTR_LV_CANVAS_PART, (const byte*)"\x60\x97\x0e" "LV_CANVAS_PART")
QDEF(MP_QSTR_HEADER, (const byte*)"\x9a\xb4\x06" "HEADER")
QDEF(MP_QSTR_CONTENT_SCROLLABLE, (const byte*)"\xd4\xcb\x12" "CONTENT_SCROLLABLE")
QDEF(MP_QSTR_LV_WIN_PART, (const byte*)"\x18\x77\x0b" "LV_WIN_PART")
QDEF(MP_QSTR_LV_TABVIEW_TAB_POS, (const byte*)"\x21\xfd\x12" "LV_TABVIEW_TAB_POS")
QDEF(MP_QSTR_BG_SCROLLABLE, (const byte*)"\x18\xb9\x0d" "BG_SCROLLABLE")
QDEF(MP_QSTR_TAB_BG, (const byte*)"\x88\xff\x06" "TAB_BG")
QDEF(MP_QSTR_TAB_BTN, (const byte*)"\xb5\xf2\x07" "TAB_BTN")
QDEF(MP_QSTR_LV_TABVIEW_PART, (const byte*)"\x72\x0d\x0f" "LV_TABVIEW_PART")
QDEF(MP_QSTR_LV_TILEVIEW_PART, (const byte*)"\x71\x6c\x10" "LV_TILEVIEW_PART")
QDEF(MP_QSTR_BTN_BG, (const byte*)"\x47\x5c\x06" "BTN_BG")
QDEF(MP_QSTR_LV_MSGBOX_PART, (const byte*)"\x84\xfb\x0e" "LV_MSGBOX_PART")
QDEF(MP_QSTR_LV_OBJMASK_PART, (const byte*)"\xdb\x66\x0f" "LV_OBJMASK_PART")
QDEF(MP_QSTR_LV_LINEMETER_PART, (const byte*)"\x0d\x77\x11" "LV_LINEMETER_PART")
QDEF(MP_QSTR_MAJOR, (const byte*)"\x7e\xad\x05" "MAJOR")
QDEF(MP_QSTR_NEEDLE, (const byte*)"\x66\x94\x06" "NEEDLE")
QDEF(MP_QSTR_LV_GAUGE_PART, (const byte*)"\x19\x16\x0d" "LV_GAUGE_PART")
QDEF(MP_QSTR_LV_SWITCH_PART, (const byte*)"\xda\xef\x0e" "LV_SWITCH_PART")
QDEF(MP_QSTR_SYMMETRIC, (const byte*)"\x46\x43\x09" "SYMMETRIC")
QDEF(MP_QSTR_REVERSE, (const byte*)"\x85\x5d\x07" "REVERSE")
QDEF(MP_QSTR_LV_ARC_TYPE, (const byte*)"\x37\x52\x0b" "LV_ARC_TYPE")
QDEF(MP_QSTR_LV_ARC_PART, (const byte*)"\xf8\xe5\x0b" "LV_ARC_PART")
QDEF(MP_QSTR_SPINNING_ARC, (const byte*)"\x20\x4d\x0c" "SPINNING_ARC")
QDEF(MP_QSTR_FILLSPIN_ARC, (const byte*)"\xa1\x22\x0c" "FILLSPIN_ARC")
QDEF(MP_QSTR_CONSTANT_ARC, (const byte*)"\xd4\xa1\x0c" "CONSTANT_ARC")
QDEF(MP_QSTR_LV_SPINNER_TYPE, (const byte*)"\x7a\x87\x0f" "LV_SPINNER_TYPE")
QDEF(MP_QSTR_FORWARD, (const byte*)"\x7e\xfd\x07" "FORWARD")
QDEF(MP_QSTR_BACKWARD, (const byte*)"\x0e\x8d\x08" "BACKWARD")
QDEF(MP_QSTR_LV_SPINNER_DIR, (const byte*)"\x5d\xd9\x0e" "LV_SPINNER_DIR")
QDEF(MP_QSTR_LV_SPINNER_PART, (const byte*)"\x35\x73\x0f" "LV_SPINNER_PART")
QDEF(MP_QSTR_DAY_NAMES, (const byte*)"\xb2\xf4\x09" "DAY_NAMES")
QDEF(MP_QSTR_DATE, (const byte*)"\xd1\xfc\x04" "DATE")
QDEF(MP_QSTR_LV_CALENDAR_PART, (const byte*)"\x7a\x82\x10" "LV_CALENDAR_PART")
QDEF(MP_QSTR_LV_SPINBOX_PART, (const byte*)"\x79\x2f\x0f" "LV_SPINBOX_PART")
QDEF(MP_QSTR_SMALL, (const byte*)"\x9a\x79\x05" "SMALL")
QDEF(MP_QSTR_MEDIUM, (const byte*)"\x98\x9b\x06" "MEDIUM")
QDEF(MP_QSTR_LARGE, (const byte*)"\xf8\x42\x05" "LARGE")
QDEF(MP_QSTR_EXTRA_LARGE, (const byte*)"\x9d\xcb\x0b" "EXTRA_LARGE")
QDEF(MP_QSTR_LV_DISP_SIZE, (const byte*)"\x34\x71\x0c" "LV_DISP_SIZE")
QDEF(MP_QSTR_OVER_LEFT, (const byte*)"\xaf\xea\x09" "OVER_LEFT")
QDEF(MP_QSTR_OVER_RIGHT, (const byte*)"\x14\xe5\x0a" "OVER_RIGHT")
QDEF(MP_QSTR_OVER_TOP, (const byte*)"\x5f\x93\x08" "OVER_TOP")
QDEF(MP_QSTR_OVER_BOTTOM, (const byte*)"\x9b\x22\x0b" "OVER_BOTTOM")
QDEF(MP_QSTR_MOVE_LEFT, (const byte*)"\xf0\xbe\x09" "MOVE_LEFT")
QDEF(MP_QSTR_MOVE_RIGHT, (const byte*)"\xeb\x69\x0a" "MOVE_RIGHT")
QDEF(MP_QSTR_MOVE_TOP, (const byte*)"\x60\xdf\x08" "MOVE_TOP")
QDEF(MP_QSTR_MOVE_BOTTOM, (const byte*)"\xc4\x4c\x0b" "MOVE_BOTTOM")
QDEF(MP_QSTR_FADE_ON, (const byte*)"\x9d\xe8\x07" "FADE_ON")
QDEF(MP_QSTR_LV_SCR_LOAD_ANIM, (const byte*)"\x4f\x8c\x10" "LV_SCR_LOAD_ANIM")
QDEF(MP_QSTR_SCR, (const byte*)"\xc7\x13\x03" "SCR")
QDEF(MP_QSTR_OBJ, (const byte*)"\x22\xe0\x03" "OBJ")
QDEF(MP_QSTR_ARC, (const byte*)"\xb5\xb8\x03" "ARC")
QDEF(MP_QSTR_BAR, (const byte*)"\x14\xc3\x03" "BAR")
QDEF(MP_QSTR_BTNMATRIX, (const byte*)"\xa6\x26\x09" "BTNMATRIX")
QDEF(MP_QSTR_CALENDAR, (const byte*)"\x17\xbb\x08" "CALENDAR")
QDEF(MP_QSTR_CANVAS, (const byte*)"\x0d\xf4\x06" "CANVAS")
QDEF(MP_QSTR_CHECKBOX, (const byte*)"\x56\x1e\x08" "CHECKBOX")
QDEF(MP_QSTR_CHART, (const byte*)"\x69\xc2\x05" "CHART")
QDEF(MP_QSTR_CONT, (const byte*)"\x73\xd9\x04" "CONT")
QDEF(MP_QSTR_CPICKER, (const byte*)"\xe0\xfe\x07" "CPICKER")
QDEF(MP_QSTR_DROPDOWN, (const byte*)"\x9e\x6d\x08" "DROPDOWN")
QDEF(MP_QSTR_GAUGE, (const byte*)"\x74\xb3\x05" "GAUGE")
QDEF(MP_QSTR_IMAGE, (const byte*)"\x62\xa0\x05" "IMAGE")
QDEF(MP_QSTR_IMGBTN, (const byte*)"\x1e\xb2\x06" "IMGBTN")
QDEF(MP_QSTR_KEYBOARD, (const byte*)"\xa8\x7e\x08" "KEYBOARD")
QDEF(MP_QSTR_LABEL, (const byte*)"\xa3\xfe\x05" "LABEL")
QDEF(MP_QSTR_LIST_BTN, (const byte*)"\x80\xd1\x08" "LIST_BTN")
QDEF(MP_QSTR_LINEMETER, (const byte*)"\x60\xe0\x09" "LINEMETER")
QDEF(MP_QSTR_MSGBOX, (const byte*)"\x69\xeb\x06" "MSGBOX")
QDEF(MP_QSTR_MSGBOX_BTNS, (const byte*)"\x5d\x78\x0b" "MSGBOX_BTNS")
QDEF(MP_QSTR_OBJMASK, (const byte*)"\xb6\x3f\x07" "OBJMASK")
QDEF(MP_QSTR_PAGE, (const byte*)"\x36\xf1\x04" "PAGE")
QDEF(MP_QSTR_ROLLER, (const byte*)"\xaf\xf0\x06" "ROLLER")
QDEF(MP_QSTR_SLIDER, (const byte*)"\x20\x9b\x06" "SLIDER")
QDEF(MP_QSTR_SPINBOX, (const byte*)"\xd4\xbd\x07" "SPINBOX")
QDEF(MP_QSTR_SPINBOX_BTN, (const byte*)"\xf3\x61\x0b" "SPINBOX_BTN")
QDEF(MP_QSTR_SPINNER, (const byte*)"\x98\xee\x07" "SPINNER")
QDEF(MP_QSTR_SWITCH, (const byte*)"\xf7\x39\x06" "SWITCH")
QDEF(MP_QSTR_TABLE, (const byte*)"\x9b\xc3\x05" "TABLE")
QDEF(MP_QSTR_TABVIEW, (const byte*)"\x7f\x1f\x07" "TABVIEW")
QDEF(MP_QSTR_TABVIEW_PAGE, (const byte*)"\x73\x6a\x0c" "TABVIEW_PAGE")
QDEF(MP_QSTR_TEXTAREA, (const byte*)"\x0f\x7d\x08" "TEXTAREA")
QDEF(MP_QSTR_TILEVIEW, (const byte*)"\x7c\x04\x08" "TILEVIEW")
QDEF(MP_QSTR_WIN, (const byte*)"\x95\x03\x03" "WIN")
QDEF(MP_QSTR_WIN_BTN, (const byte*)"\x72\xd8\x07" "WIN_BTN")
QDEF(MP_QSTR_CUSTOM_START, (const byte*)"\x89\xc7\x0c" "CUSTOM_START")
QDEF(MP_QSTR_LV_THEME, (const byte*)"\xd1\x9a\x08" "LV_THEME")
QDEF(MP_QSTR_DARK, (const byte*)"\x19\xfc\x04" "DARK")
QDEF(MP_QSTR_LIGHT, (const byte*)"\xdb\xb1\x05" "LIGHT")
QDEF(MP_QSTR_NO_TRANSITION, (const byte*)"\xf4\x78\x0d" "NO_TRANSITION")
QDEF(MP_QSTR_NO_FOCUS, (const byte*)"\x77\xd8\x08" "NO_FOCUS")
QDEF(MP_QSTR_LV_THEME_MATERIAL_FLAG, (const byte*)"\x36\xe3\x16" "LV_THEME_MATERIAL_FLAG")
QDEF(MP_QSTR_PLAIN, (const byte*)"\x5f\xe5\x05" "PLAIN")
QDEF(MP_QSTR_COMPRESSED, (const byte*)"\x42\xb8\x0a" "COMPRESSED")
QDEF(MP_QSTR_COMPRESSED_NO_PREFILTER, (const byte*)"\x44\x7d\x17" "COMPRESSED_NO_PREFILTER")
QDEF(MP_QSTR_LV_FONT_FMT_TXT, (const byte*)"\x94\xc1\x0f" "LV_FONT_FMT_TXT")
QDEF(MP_QSTR_AUDIO, (const byte*)"\x33\x1a\x05" "AUDIO")
QDEF(MP_QSTR_VIDEO, (const byte*)"\xb4\x2d\x05" "VIDEO")
QDEF(MP_QSTR_CLOSE, (const byte*)"\x53\x88\x05" "CLOSE")
QDEF(MP_QSTR_POWER, (const byte*)"\xfa\x4e\x05" "POWER")
QDEF(MP_QSTR_SETTINGS, (const byte*)"\x20\xf2\x08" "SETTINGS")
QDEF(MP_QSTR_DOWNLOAD, (const byte*)"\x91\x3e\x08" "DOWNLOAD")
QDEF(MP_QSTR_DRIVE, (const byte*)"\xa9\xe9\x05" "DRIVE")
QDEF(MP_QSTR_MUTE, (const byte*)"\x6c\x0b\x04" "MUTE")
QDEF(MP_QSTR_VOLUME_MID, (const byte*)"\xb2\x00\x0a" "VOLUME_MID")
QDEF(MP_QSTR_VOLUME_MAX, (const byte*)"\xa6\x01\x0a" "VOLUME_MAX")
QDEF(MP_QSTR_EDIT, (const byte*)"\x59\x74\x04" "EDIT")
QDEF(MP_QSTR_PLAY, (const byte*)"\xe1\x06\x04" "PLAY")
QDEF(MP_QSTR_PAUSE, (const byte*)"\xf7\xdd\x05" "PAUSE")
QDEF(MP_QSTR_STOP, (const byte*)"\x5d\x3f\x04" "STOP")
QDEF(MP_QSTR_EJECT, (const byte*)"\x18\x16\x05" "EJECT")
QDEF(MP_QSTR_PLUS, (const byte*)"\x7f\x05\x04" "PLUS")
QDEF(MP_QSTR_MINUS, (const byte*)"\x29\x9f\x05" "MINUS")
QDEF(MP_QSTR_EYE_OPEN, (const byte*)"\x57\x69\x08" "EYE_OPEN")
QDEF(MP_QSTR_EYE_CLOSE, (const byte*)"\xd5\x14\x09" "EYE_CLOSE")
QDEF(MP_QSTR_WARNING, (const byte*)"\x4f\xe2\x07" "WARNING")
QDEF(MP_QSTR_SHUFFLE, (const byte*)"\xa2\x91\x07" "SHUFFLE")
QDEF(MP_QSTR_LOOP, (const byte*)"\x39\x65\x04" "LOOP")
QDEF(MP_QSTR_DIRECTORY, (const byte*)"\xac\x75\x09" "DIRECTORY")
QDEF(MP_QSTR_UPLOAD, (const byte*)"\x46\xc2\x06" "UPLOAD")
QDEF(MP_QSTR_CALL, (const byte*)"\xa7\xc0\x04" "CALL")
QDEF(MP_QSTR_CUT, (const byte*)"\x07\xd1\x03" "CUT")
QDEF(MP_QSTR_COPY, (const byte*)"\x20\xdb\x04" "COPY")
QDEF(MP_QSTR_SAVE, (const byte*)"\xe4\x83\x04" "SAVE")
QDEF(MP_QSTR_CHARGE, (const byte*)"\xff\x11\x06" "CHARGE")
QDEF(MP_QSTR_PASTE, (const byte*)"\x56\xe6\x05" "PASTE")
QDEF(MP_QSTR_BELL, (const byte*)"\x02\x14\x04" "BELL")
QDEF(MP_QSTR_GPS, (const byte*)"\xe1\xc0\x03" "GPS")
QDEF(MP_QSTR_WIFI, (const byte*)"\x74\x77\x04" "WIFI")
QDEF(MP_QSTR_BATTERY_FULL, (const byte*)"\xc4\xcf\x0c" "BATTERY_FULL")
QDEF(MP_QSTR_BATTERY_3, (const byte*)"\x84\x37\x09" "BATTERY_3")
QDEF(MP_QSTR_BATTERY_2, (const byte*)"\x85\x37\x09" "BATTERY_2")
QDEF(MP_QSTR_BATTERY_1, (const byte*)"\x86\x37\x09" "BATTERY_1")
QDEF(MP_QSTR_BATTERY_EMPTY, (const byte*)"\x42\xbf\x0d" "BATTERY_EMPTY")
QDEF(MP_QSTR_USB, (const byte*)"\x41\xe8\x03" "USB")
QDEF(MP_QSTR_BLUETOOTH, (const byte*)"\x73\x8a\x09" "BLUETOOTH")
QDEF(MP_QSTR_TRASH, (const byte*)"\xd9\xc7\x05" "TRASH")
QDEF(MP_QSTR_SD_CARD, (const byte*)"\x59\xc5\x07" "SD_CARD")
QDEF(MP_QSTR_NEW_LINE, (const byte*)"\x68\x20\x08" "NEW_LINE")
QDEF(MP_QSTR_DUMMY, (const byte*)"\x2d\x4e\x05" "DUMMY")
QDEF(MP_QSTR_LV_SYMBOL, (const byte*)"\xc6\x8a\x09" "LV_SYMBOL")
QDEF(MP_QSTR_blue, (const byte*)"\x7b\x54\x04" "blue")
QDEF(MP_QSTR_green, (const byte*)"\xbe\x98\x05" "green")
QDEF(MP_QSTR_red, (const byte*)"\x76\x8b\x03" "red")
QDEF(MP_QSTR_lv_color16_ch_t, (const byte*)"\x85\xf8\x0f" "lv_color16_ch_t")
QDEF(MP_QSTR_ch, (const byte*)"\xee\x6e\x02" "ch")
QDEF(MP_QSTR_lv_color16_t, (const byte*)"\xf1\x87\x0c" "lv_color16_t")
QDEF(MP_QSTR_adv_w, (const byte*)"\x1e\x26\x05" "adv_w")
QDEF(MP_QSTR_box_w, (const byte*)"\xb8\xfb\x05" "box_w")
QDEF(MP_QSTR_box_h, (const byte*)"\xa7\xfb\x05" "box_h")
QDEF(MP_QSTR_ofs_x, (const byte*)"\x58\xf4\x05" "ofs_x")
QDEF(MP_QSTR_ofs_y, (const byte*)"\x59\xf4\x05" "ofs_y")
QDEF(MP_QSTR_bpp, (const byte*)"\xc7\x49\x03" "bpp")
QDEF(MP_QSTR_lv_font_glyph_dsc_t, (const byte*)"\xc6\xcd\x13" "lv_font_glyph_dsc_t")
QDEF(MP_QSTR_get_glyph_dsc, (const byte*)"\x0d\x6f\x0d" "get_glyph_dsc")
QDEF(MP_QSTR_lv_font_t_get_glyph_dsc, (const byte*)"\x6f\xe5\x17" "lv_font_t_get_glyph_dsc")
QDEF(MP_QSTR_get_glyph_bitmap, (const byte*)"\x9a\x83\x10" "get_glyph_bitmap")
QDEF(MP_QSTR_lv_font_t_get_glyph_bitmap, (const byte*)"\xf8\x0b\x1a" "lv_font_t_get_glyph_bitmap")
QDEF(MP_QSTR_line_height, (const byte*)"\x8b\xdb\x0b" "line_height")
QDEF(MP_QSTR_base_line, (const byte*)"\xe1\x7c\x09" "base_line")
QDEF(MP_QSTR_subpx, (const byte*)"\x29\x57\x05" "subpx")
QDEF(MP_QSTR_underline_position, (const byte*)"\xc5\xcc\x12" "underline_position")
QDEF(MP_QSTR_underline_thickness, (const byte*)"\x6a\xc4\x13" "underline_thickness")
QDEF(MP_QSTR_dsc, (const byte*)"\xb1\x1f\x03" "dsc")
QDEF(MP_QSTR_user_data, (const byte*)"\x9b\xd6\x09" "user_data")
QDEF(MP_QSTR_lv_font_t, (const byte*)"\xb8\x19\x09" "lv_font_t")
QDEF(MP_QSTR_exec_cb, (const byte*)"\x60\xac\x07" "exec_cb")
QDEF(MP_QSTR_lv_anim_t_exec_cb, (const byte*)"\x1a\xd3\x11" "lv_anim_t_exec_cb")
QDEF(MP_QSTR_start_cb, (const byte*)"\x9b\xea\x08" "start_cb")
QDEF(MP_QSTR_lv_anim_t_start_cb, (const byte*)"\xa1\x9d\x12" "lv_anim_t_start_cb")
QDEF(MP_QSTR_ready_cb, (const byte*)"\xd0\xdb\x08" "ready_cb")
QDEF(MP_QSTR_lv_anim_t_ready_cb, (const byte*)"\xea\x05\x12" "lv_anim_t_ready_cb")
QDEF(MP_QSTR_current, (const byte*)"\xac\xf1\x07" "current")
QDEF(MP_QSTR_act_time, (const byte*)"\xb9\x0f\x08" "act_time")
QDEF(MP_QSTR_playback_delay, (const byte*)"\x40\xad\x0e" "playback_delay")
QDEF(MP_QSTR_playback_time, (const byte*)"\xe0\xb4\x0d" "playback_time")
QDEF(MP_QSTR_repeat_delay, (const byte*)"\xf8\xed\x0c" "repeat_delay")
QDEF(MP_QSTR_repeat_cnt, (const byte*)"\x34\xac\x0a" "repeat_cnt")
QDEF(MP_QSTR_early_apply, (const byte*)"\x2d\xa5\x0b" "early_apply")
QDEF(MP_QSTR_time_orig, (const byte*)"\x7c\x5b\x09" "time_orig")
QDEF(MP_QSTR_playback_now, (const byte*)"\xa3\x34\x0c" "playback_now")
QDEF(MP_QSTR_has_run, (const byte*)"\x49\x88\x07" "has_run")
QDEF(MP_QSTR_lv_anim_t, (const byte*)"\x20\xc0\x09" "lv_anim_t")
QDEF(MP_QSTR_cb, (const byte*)"\xe4\x6e\x02" "cb")
QDEF(MP_QSTR_lv_anim_path_t_cb, (const byte*)"\x6c\x5c\x11" "lv_anim_path_t_cb")
QDEF(MP_QSTR_lv_anim_path_t, (const byte*)"\x92\x2e\x0e" "lv_anim_path_t")
QDEF(MP_QSTR_lv_area_t, (const byte*)"\xbc\xa2\x09" "lv_area_t")
QDEF(MP_QSTR_lv_style_t, (const byte*)"\x1c\xdc\x0a" "lv_style_t")
QDEF(MP_QSTR_lv_obj_t_event_cb, (const byte*)"\xc1\xbc\x11" "lv_obj_t_event_cb")
QDEF(MP_QSTR_lv_obj_t_signal_cb, (const byte*)"\xb3\x01\x12" "lv_obj_t_signal_cb")
QDEF(MP_QSTR_lv_obj_t_design_cb, (const byte*)"\x5f\x57\x12" "lv_obj_t_design_cb")
QDEF(MP_QSTR_buf1, (const byte*)"\xc5\x77\x04" "buf1")
QDEF(MP_QSTR_buf2, (const byte*)"\xc6\x77\x04" "buf2")
QDEF(MP_QSTR_buf_act, (const byte*)"\x9d\x73\x07" "buf_act")
QDEF(MP_QSTR_flushing, (const byte*)"\x21\xfb\x08" "flushing")
QDEF(MP_QSTR_flushing_last, (const byte*)"\xf4\xfa\x0d" "flushing_last")
QDEF(MP_QSTR_last_area, (const byte*)"\xc7\x96\x09" "last_area")
QDEF(MP_QSTR_last_part, (const byte*)"\x07\x7d\x09" "last_part")
QDEF(MP_QSTR_lv_disp_buf_t, (const byte*)"\xeb\x16\x0d" "lv_disp_buf_t")
QDEF(MP_QSTR_hor_res, (const byte*)"\xcb\xa1\x07" "hor_res")
QDEF(MP_QSTR_ver_res, (const byte*)"\x1f\x6a\x07" "ver_res")
QDEF(MP_QSTR_antialiasing, (const byte*)"\x01\x8a\x0c" "antialiasing")
QDEF(MP_QSTR_rotated, (const byte*)"\x38\x39\x07" "rotated")
QDEF(MP_QSTR_dpi, (const byte*)"\xd8\x1f\x03" "dpi")
QDEF(MP_QSTR_flush_cb, (const byte*)"\xff\xe9\x08" "flush_cb")
QDEF(MP_QSTR_lv_disp_drv_t_flush_cb, (const byte*)"\xbf\xc6\x16" "lv_disp_drv_t_flush_cb")
QDEF(MP_QSTR_rounder_cb, (const byte*)"\x2e\x7c\x0a" "rounder_cb")
QDEF(MP_QSTR_lv_disp_drv_t_rounder_cb, (const byte*)"\xee\xfc\x18" "lv_disp_drv_t_rounder_cb")
QDEF(MP_QSTR_set_px_cb, (const byte*)"\x6e\x21\x09" "set_px_cb")
QDEF(MP_QSTR_lv_disp_drv_t_set_px_cb, (const byte*)"\xae\x39\x17" "lv_disp_drv_t_set_px_cb")
QDEF(MP_QSTR_monitor_cb, (const byte*)"\x37\xcd\x0a" "monitor_cb")
QDEF(MP_QSTR_lv_disp_drv_t_monitor_cb, (const byte*)"\xf7\x2e\x18" "lv_disp_drv_t_monitor_cb")
QDEF(MP_QSTR_wait_cb, (const byte*)"\xf0\x13\x07" "wait_cb")
QDEF(MP_QSTR_lv_disp_drv_t_wait_cb, (const byte*)"\x30\x6c\x15" "lv_disp_drv_t_wait_cb")
QDEF(MP_QSTR_clean_dcache_cb, (const byte*)"\xc9\x1f\x0f" "clean_dcache_cb")
QDEF(MP_QSTR_lv_disp_drv_t_clean_dcache_cb, (const byte*)"\x09\x97\x1d" "lv_disp_drv_t_clean_dcache_cb")
QDEF(MP_QSTR_gpu_wait_cb, (const byte*)"\xad\x7a\x0b" "gpu_wait_cb")
QDEF(MP_QSTR_lv_disp_drv_t_gpu_wait_cb, (const byte*)"\xed\x12\x19" "lv_disp_drv_t_gpu_wait_cb")
QDEF(MP_QSTR_gpu_blend_cb, (const byte*)"\xc7\x93\x0c" "gpu_blend_cb")
QDEF(MP_QSTR_lv_disp_drv_t_gpu_blend_cb, (const byte*)"\x87\x94\x1a" "lv_disp_drv_t_gpu_blend_cb")
QDEF(MP_QSTR_gpu_fill_cb, (const byte*)"\x69\x84\x0b" "gpu_fill_cb")
QDEF(MP_QSTR_lv_disp_drv_t_gpu_fill_cb, (const byte*)"\xa9\xdb\x19" "lv_disp_drv_t_gpu_fill_cb")
QDEF(MP_QSTR_color_chroma_key, (const byte*)"\x35\x6b\x10" "color_chroma_key")
QDEF(MP_QSTR_lv_disp_drv_t, (const byte*)"\x5a\xaa\x0d" "lv_disp_drv_t")
QDEF(MP_QSTR_last_run, (const byte*)"\x99\x15\x08" "last_run")
QDEF(MP_QSTR_task_cb, (const byte*)"\xd6\x18\x07" "task_cb")
QDEF(MP_QSTR_lv_task_t_task_cb, (const byte*)"\x8a\x53\x11" "lv_task_t_task_cb")
QDEF(MP_QSTR_repeat_count, (const byte*)"\x4e\x0e\x0c" "repeat_count")
QDEF(MP_QSTR_prio, (const byte*)"\x21\x82\x04" "prio")
QDEF(MP_QSTR_lv_task_t, (const byte*)"\xc6\x6b\x09" "lv_task_t")
QDEF(MP_QSTR_n_size, (const byte*)"\x51\xc6\x06" "n_size")
QDEF(MP_QSTR_head, (const byte*)"\xed\x5d\x04" "head")
QDEF(MP_QSTR_tail, (const byte*)"\x75\xa1\x04" "tail")
QDEF(MP_QSTR_lv_ll_t, (const byte*)"\xab\xc3\x07" "lv_ll_t")
QDEF(MP_QSTR_driver, (const byte*)"\x1b\x71\x06" "driver")
QDEF(MP_QSTR_refr_task, (const byte*)"\x34\xf8\x09" "refr_task")
QDEF(MP_QSTR_scr_ll, (const byte*)"\x18\x1e\x06" "scr_ll")
QDEF(MP_QSTR_act_scr, (const byte*)"\xce\xaa\x07" "act_scr")
QDEF(MP_QSTR_prev_scr, (const byte*)"\x49\x97\x08" "prev_scr")
QDEF(MP_QSTR_scr_to_load, (const byte*)"\xda\xb6\x0b" "scr_to_load")
QDEF(MP_QSTR_top_layer, (const byte*)"\x72\xf6\x09" "top_layer")
QDEF(MP_QSTR_sys_layer, (const byte*)"\x60\xbc\x09" "sys_layer")
QDEF(MP_QSTR_del_prev, (const byte*)"\xc6\x3b\x08" "del_prev")
QDEF(MP_QSTR_bg_color, (const byte*)"\x02\x32\x08" "bg_color")
QDEF(MP_QSTR_bg_img, (const byte*)"\x7c\xf4\x06" "bg_img")
QDEF(MP_QSTR_bg_opa, (const byte*)"\x01\xe8\x06" "bg_opa")
QDEF(MP_QSTR_inv_areas, (const byte*)"\xaf\xd6\x09" "inv_areas")
QDEF(MP_QSTR_inv_area_joined, (const byte*)"\x40\xb7\x0f" "inv_area_joined")
QDEF(MP_QSTR_inv_p, (const byte*)"\x5b\x6f\x05" "inv_p")
QDEF(MP_QSTR_last_activity_time, (const byte*)"\xf7\xdd\x12" "last_activity_time")
QDEF(MP_QSTR_lv_disp_t, (const byte*)"\x45\xbf\x09" "lv_disp_t")
QDEF(MP_QSTR_style_list, (const byte*)"\x6f\x98\x0a" "style_list")
QDEF(MP_QSTR_style_cnt, (const byte*)"\x54\xad\x09" "style_cnt")
QDEF(MP_QSTR_has_local, (const byte*)"\xed\xea\x09" "has_local")
QDEF(MP_QSTR_has_trans, (const byte*)"\x7a\x12\x09" "has_trans")
QDEF(MP_QSTR_skip_trans, (const byte*)"\xc1\x42\x0a" "skip_trans")
QDEF(MP_QSTR_ignore_trans, (const byte*)"\x38\xa3\x0c" "ignore_trans")
QDEF(MP_QSTR_valid_cache, (const byte*)"\xa0\x6a\x0b" "valid_cache")
QDEF(MP_QSTR_ignore_cache, (const byte*)"\xce\xfb\x0c" "ignore_cache")
QDEF(MP_QSTR_radius_zero, (const byte*)"\xc0\x54\x0b" "radius_zero")
QDEF(MP_QSTR_opa_scale_cover, (const byte*)"\x2e\x3a\x0f" "opa_scale_cover")
QDEF(MP_QSTR_clip_corner_off, (const byte*)"\xfb\x66\x0f" "clip_corner_off")
QDEF(MP_QSTR_transform_all_zero, (const byte*)"\xaa\x1d\x12" "transform_all_zero")
QDEF(MP_QSTR_pad_all_zero, (const byte*)"\x73\x30\x0c" "pad_all_zero")
QDEF(MP_QSTR_margin_all_zero, (const byte*)"\x78\x72\x0f" "margin_all_zero")
QDEF(MP_QSTR_blend_mode_all_normal, (const byte*)"\x8a\xbc\x15" "blend_mode_all_normal")
QDEF(MP_QSTR_bg_opa_transp, (const byte*)"\x34\xa7\x0d" "bg_opa_transp")
QDEF(MP_QSTR_bg_opa_cover, (const byte*)"\x13\x72\x0c" "bg_opa_cover")
QDEF(MP_QSTR_border_width_zero, (const byte*)"\x4d\x11\x11" "border_width_zero")
QDEF(MP_QSTR_border_side_full, (const byte*)"\x01\x7e\x10" "border_side_full")
QDEF(MP_QSTR_border_post_off, (const byte*)"\x7e\xd1\x0f" "border_post_off")
QDEF(MP_QSTR_outline_width_zero, (const byte*)"\x41\x51\x12" "outline_width_zero")
QDEF(MP_QSTR_pattern_img_null, (const byte*)"\x75\xc8\x10" "pattern_img_null")
QDEF(MP_QSTR_shadow_width_zero, (const byte*)"\xc7\x1b\x11" "shadow_width_zero")
QDEF(MP_QSTR_value_txt_str, (const byte*)"\xc3\xee\x0d" "value_txt_str")
QDEF(MP_QSTR_img_recolor_opa_transp, (const byte*)"\x47\x2b\x16" "img_recolor_opa_transp")
QDEF(MP_QSTR_text_space_zero, (const byte*)"\x5e\xea\x0f" "text_space_zero")
QDEF(MP_QSTR_text_decor_none, (const byte*)"\x0d\xda\x0f" "text_decor_none")
QDEF(MP_QSTR_text_font_normal, (const byte*)"\xb8\xfa\x10" "text_font_normal")
QDEF(MP_QSTR_lv_style_list_t, (const byte*)"\x81\x3e\x0f" "lv_style_list_t")
QDEF(MP_QSTR_lv_point_t, (const byte*)"\x27\x96\x0a" "lv_point_t")
QDEF(MP_QSTR_lv_obj_type_t, (const byte*)"\xab\x69\x0d" "lv_obj_type_t")
QDEF(MP_QSTR_radius, (const byte*)"\xfd\x0f\x06" "radius")
QDEF(MP_QSTR_bg_grad_color, (const byte*)"\x0d\x33\x0d" "bg_grad_color")
QDEF(MP_QSTR_bg_grad_dir, (const byte*)"\xef\x1e\x0b" "bg_grad_dir")
QDEF(MP_QSTR_bg_main_color_stop, (const byte*)"\x91\x22\x12" "bg_main_color_stop")
QDEF(MP_QSTR_bg_grad_color_stop, (const byte*)"\x6a\xb9\x12" "bg_grad_color_stop")
QDEF(MP_QSTR_bg_blend_mode, (const byte*)"\xe2\x60\x0d" "bg_blend_mode")
QDEF(MP_QSTR_border_color, (const byte*)"\x6b\x9b\x0c" "border_color")
QDEF(MP_QSTR_border_width, (const byte*)"\x10\xcc\x0c" "border_width")
QDEF(MP_QSTR_border_side, (const byte*)"\xed\x4d\x0b" "border_side")
QDEF(MP_QSTR_border_opa, (const byte*)"\x68\x0f\x0a" "border_opa")
QDEF(MP_QSTR_border_blend_mode, (const byte*)"\x2b\xdd\x11" "border_blend_mode")
QDEF(MP_QSTR_border_post, (const byte*)"\x2e\xbb\x0b" "border_post")
QDEF(MP_QSTR_outline_color, (const byte*)"\xe7\x68\x0d" "outline_color")
QDEF(MP_QSTR_outline_width, (const byte*)"\x9c\xb8\x0d" "outline_width")
QDEF(MP_QSTR_outline_pad, (const byte*)"\xcf\x16\x0b" "outline_pad")
QDEF(MP_QSTR_outline_opa, (const byte*)"\xe4\x4b\x0b" "outline_opa")
QDEF(MP_QSTR_outline_blend_mode, (const byte*)"\x27\xf9\x12" "outline_blend_mode")
QDEF(MP_QSTR_shadow_color, (const byte*)"\xa1\xea\x0c" "shadow_color")
QDEF(MP_QSTR_shadow_width, (const byte*)"\x5a\x4c\x0c" "shadow_width")
QDEF(MP_QSTR_shadow_ofs_x, (const byte*)"\xe1\xd4\x0c" "shadow_ofs_x")
QDEF(MP_QSTR_shadow_ofs_y, (const byte*)"\xe0\xd4\x0c" "shadow_ofs_y")
QDEF(MP_QSTR_shadow_spread, (const byte*)"\x0d\x4c\x0d" "shadow_spread")
QDEF(MP_QSTR_shadow_opa, (const byte*)"\xa2\x15\x0a" "shadow_opa")
QDEF(MP_QSTR_shadow_blend_mode, (const byte*)"\xa1\x15\x11" "shadow_blend_mode")
QDEF(MP_QSTR_pattern_image, (const byte*)"\x35\x5f\x0d" "pattern_image")
QDEF(MP_QSTR_pattern_font, (const byte*)"\x01\x00\x0c" "pattern_font")
QDEF(MP_QSTR_pattern_recolor, (const byte*)"\x18\xff\x0f" "pattern_recolor")
QDEF(MP_QSTR_pattern_opa, (const byte*)"\xac\x60\x0b" "pattern_opa")
QDEF(MP_QSTR_pattern_recolor_opa, (const byte*)"\x59\x1b\x13" "pattern_recolor_opa")
QDEF(MP_QSTR_pattern_repeat, (const byte*)"\xa5\xe2\x0e" "pattern_repeat")
QDEF(MP_QSTR_pattern_blend_mode, (const byte*)"\x6f\x27\x12" "pattern_blend_mode")
QDEF(MP_QSTR_value_str, (const byte*)"\x84\x8e\x09" "value_str")
QDEF(MP_QSTR_value_font, (const byte*)"\xc2\x9c\x0a" "value_font")
QDEF(MP_QSTR_value_opa, (const byte*)"\x0f\x01\x09" "value_opa")
QDEF(MP_QSTR_value_color, (const byte*)"\x0c\xff\x0b" "value_color")
QDEF(MP_QSTR_value_ofs_x, (const byte*)"\x8c\xea\x0b" "value_ofs_x")
QDEF(MP_QSTR_value_ofs_y, (const byte*)"\x8d\xea\x0b" "value_ofs_y")
QDEF(MP_QSTR_value_letter_space, (const byte*)"\xd4\x29\x12" "value_letter_space")
QDEF(MP_QSTR_value_line_space, (const byte*)"\xe4\x0c\x10" "value_line_space")
QDEF(MP_QSTR_value_align, (const byte*)"\xfc\x96\x0b" "value_align")
QDEF(MP_QSTR_value_blend_mode, (const byte*)"\x2c\x4d\x10" "value_blend_mode")
QDEF(MP_QSTR_lv_draw_rect_dsc_t, (const byte*)"\x9f\x26\x12" "lv_draw_rect_dsc_t")
QDEF(MP_QSTR_sel_color, (const byte*)"\x3d\x0f\x09" "sel_color")
QDEF(MP_QSTR_sel_bg_color, (const byte*)"\x47\x5a\x0c" "sel_bg_color")
QDEF(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF(MP_QSTR_opa, (const byte*)"\xdb\x5e\x03" "opa")
QDEF(MP_QSTR_line_space, (const byte*)"\xb0\xf0\x0a" "line_space")
QDEF(MP_QSTR_letter_space, (const byte*)"\x80\x77\x0c" "letter_space")
QDEF(MP_QSTR_sel_start, (const byte*)"\xe0\x39\x09" "sel_start")
QDEF(MP_QSTR_sel_end, (const byte*)"\x6f\xb9\x07" "sel_end")
QDEF(MP_QSTR_bidi_dir, (const byte*)"\xe3\xff\x08" "bidi_dir")
QDEF(MP_QSTR_flag, (const byte*)"\x69\x42\x04" "flag")
QDEF(MP_QSTR_decor, (const byte*)"\x5a\x50\x05" "decor")
QDEF(MP_QSTR_blend_mode, (const byte*)"\xf8\xd4\x0a" "blend_mode")
QDEF(MP_QSTR_lv_draw_label_dsc_t, (const byte*)"\x39\x2a\x13" "lv_draw_label_dsc_t")
QDEF(MP_QSTR_pivot, (const byte*)"\x91\x19\x05" "pivot")
QDEF(MP_QSTR_recolor_opa, (const byte*)"\x6e\xea\x0b" "recolor_opa")
QDEF(MP_QSTR_recolor, (const byte*)"\x6f\x04\x07" "recolor")
QDEF(MP_QSTR_antialias, (const byte*)"\x81\xac\x09" "antialias")
QDEF(MP_QSTR_lv_draw_img_dsc_t, (const byte*)"\x5c\x7d\x11" "lv_draw_img_dsc_t")
QDEF(MP_QSTR_dash_width, (const byte*)"\xc2\xdb\x0a" "dash_width")
QDEF(MP_QSTR_dash_gap, (const byte*)"\x52\x7d\x08" "dash_gap")
QDEF(MP_QSTR_round_start, (const byte*)"\xb8\x34\x0b" "round_start")
QDEF(MP_QSTR_round_end, (const byte*)"\x37\xb4\x09" "round_end")
QDEF(MP_QSTR_raw_end, (const byte*)"\x31\x1a\x07" "raw_end")
QDEF(MP_QSTR_lv_draw_line_dsc_t, (const byte*)"\xf1\x1d\x12" "lv_draw_line_dsc_t")
QDEF(MP_QSTR_get_style_radius, (const byte*)"\x7c\x7e\x10" "get_style_radius")
QDEF(MP_QSTR_set_style_local_radius, (const byte*)"\xba\x76\x16" "set_style_local_radius")
QDEF(MP_QSTR_get_style_clip_corner, (const byte*)"\xca\x37\x15" "get_style_clip_corner")
QDEF(MP_QSTR_set_style_local_clip_corner, (const byte*)"\x4c\x59\x1b" "set_style_local_clip_corner")
QDEF(MP_QSTR_get_style_size, (const byte*)"\xa1\xb9\x0e" "get_style_size")
QDEF(MP_QSTR_set_style_local_size, (const byte*)"\x67\x19\x14" "set_style_local_size")
QDEF(MP_QSTR_get_style_transform_width, (const byte*)"\x11\x16\x19" "get_style_transform_width")
QDEF(MP_QSTR_set_style_local_transform_width, (const byte*)"\x17\x79\x1f" "set_style_local_transform_width")
QDEF(MP_QSTR_get_style_transform_height, (const byte*)"\xc8\x90\x1a" "get_style_transform_height")
QDEF(MP_QSTR_set_style_local_transform_height, (const byte*)"\x8e\x60\x20" "set_style_local_transform_height")
QDEF(MP_QSTR_get_style_transform_angle, (const byte*)"\xf6\x5c\x19" "get_style_transform_angle")
QDEF(MP_QSTR_set_style_local_transform_angle, (const byte*)"\x70\x9f\x1f" "set_style_local_transform_angle")
QDEF(MP_QSTR_get_style_transform_zoom, (const byte*)"\xc0\x67\x18" "get_style_transform_zoom")
QDEF(MP_QSTR_set_style_local_transform_zoom, (const byte*)"\x86\x71\x1e" "set_style_local_transform_zoom")
QDEF(MP_QSTR_get_style_opa_scale, (const byte*)"\x5d\xc5\x13" "get_style_opa_scale")
QDEF(MP_QSTR_set_style_local_opa_scale, (const byte*)"\xdb\xaf\x19" "set_style_local_opa_scale")
QDEF(MP_QSTR_get_style_pad_top, (const byte*)"\xe5\xd5\x11" "get_style_pad_top")
QDEF(MP_QSTR_set_style_local_pad_top, (const byte*)"\x63\x75\x17" "set_style_local_pad_top")
QDEF(MP_QSTR_get_style_pad_bottom, (const byte*)"\x01\x5a\x14" "get_style_pad_bottom")
QDEF(MP_QSTR_set_style_local_pad_bottom, (const byte*)"\xc7\x32\x1a" "set_style_local_pad_bottom")
QDEF(MP_QSTR_get_style_pad_left, (const byte*)"\xb5\x84\x12" "get_style_pad_left")
QDEF(MP_QSTR_set_style_local_pad_left, (const byte*)"\xf3\x04\x18" "set_style_local_pad_left")
QDEF(MP_QSTR_get_style_pad_right, (const byte*)"\x2e\xd6\x13" "get_style_pad_right")
QDEF(MP_QSTR_set_style_local_pad_right, (const byte*)"\x28\x9f\x19" "set_style_local_pad_right")
QDEF(MP_QSTR_get_style_pad_inner, (const byte*)"\xb0\xcd\x13" "get_style_pad_inner")
QDEF(MP_QSTR_set_style_local_pad_inner, (const byte*)"\x36\x25\x19" "set_style_local_pad_inner")
QDEF(MP_QSTR_get_style_margin_top, (const byte*)"\x2e\x5f\x14" "get_style_margin_top")
QDEF(MP_QSTR_set_style_local_margin_top, (const byte*)"\x68\xfa\x1a" "set_style_local_margin_top")
QDEF(MP_QSTR_get_style_margin_bottom, (const byte*)"\x6a\xa9\x17" "get_style_margin_bottom")
QDEF(MP_QSTR_set_style_local_margin_bottom, (const byte*)"\xec\x64\x1d" "set_style_local_margin_bottom")
QDEF(MP_QSTR_get_style_margin_left, (const byte*)"\xde\xc9\x15" "get_style_margin_left")
QDEF(MP_QSTR_set_style_local_margin_left, (const byte*)"\xd8\xbc\x1b" "set_style_local_margin_left")
QDEF(MP_QSTR_get_style_margin_right, (const byte*)"\xe5\xb6\x16" "get_style_margin_right")
QDEF(MP_QSTR_set_style_local_margin_right, (const byte*)"\xa3\x68\x1c" "set_style_local_margin_right")
QDEF(MP_QSTR_get_style_bg_blend_mode, (const byte*)"\x03\xb3\x17" "get_style_bg_blend_mode")
QDEF(MP_QSTR_set_style_local_bg_blend_mode, (const byte*)"\x85\x5b\x1d" "set_style_local_bg_blend_mode")
QDEF(MP_QSTR_get_style_bg_main_stop, (const byte*)"\x12\x9b\x16" "get_style_bg_main_stop")
QDEF(MP_QSTR_set_style_local_bg_main_stop, (const byte*)"\x54\xde\x1c" "set_style_local_bg_main_stop")
QDEF(MP_QSTR_get_style_bg_grad_stop, (const byte*)"\xa9\x04\x16" "get_style_bg_grad_stop")
QDEF(MP_QSTR_set_style_local_bg_grad_stop, (const byte*)"\xef\x38\x1c" "set_style_local_bg_grad_stop")
QDEF(MP_QSTR_get_style_bg_grad_dir, (const byte*)"\x4e\xa5\x15" "get_style_bg_grad_dir")
QDEF(MP_QSTR_set_style_local_bg_grad_dir, (const byte*)"\x48\x68\x1b" "set_style_local_bg_grad_dir")
QDEF(MP_QSTR_get_style_bg_color, (const byte*)"\xc3\x25\x12" "get_style_bg_color")
QDEF(MP_QSTR_set_style_local_bg_color, (const byte*)"\x85\x56\x18" "set_style_local_bg_color")
QDEF(MP_QSTR_get_style_bg_grad_color, (const byte*)"\x2c\xfe\x17" "get_style_bg_grad_color")
QDEF(MP_QSTR_set_style_local_bg_grad_color, (const byte*)"\x2a\xda\x1d" "set_style_local_bg_grad_color")
QDEF(MP_QSTR_get_style_bg_opa, (const byte*)"\xc0\xf8\x10" "get_style_bg_opa")
QDEF(MP_QSTR_set_style_local_bg_opa, (const byte*)"\x86\x12\x16" "set_style_local_bg_opa")
QDEF(MP_QSTR_get_style_border_width, (const byte*)"\x51\x20\x16" "get_style_border_width")
QDEF(MP_QSTR_set_style_local_border_width, (const byte*)"\x97\x01\x1c" "set_style_local_border_width")
QDEF(MP_QSTR_get_style_border_side, (const byte*)"\x8c\xad\x15" "get_style_border_side")
QDEF(MP_QSTR_set_style_local_border_side, (const byte*)"\x8a\x0d\x1b" "set_style_local_border_side")
QDEF(MP_QSTR_get_style_border_blend_mode, (const byte*)"\x4a\x5a\x1b" "get_style_border_blend_mode")
QDEF(MP_QSTR_set_style_local_border_blend_mode, (const byte*)"\x4c\x52\x21" "set_style_local_border_blend_mode")
QDEF(MP_QSTR_get_style_border_post, (const byte*)"\x4f\x44\x15" "get_style_border_post")
QDEF(MP_QSTR_set_style_local_border_post, (const byte*)"\x49\xa4\x1b" "set_style_local_border_post")
QDEF(MP_QSTR_get_style_border_color, (const byte*)"\xea\xad\x16" "get_style_border_color")
QDEF(MP_QSTR_set_style_local_border_color, (const byte*)"\x2c\x3e\x1c" "set_style_local_border_color")
QDEF(MP_QSTR_get_style_border_opa, (const byte*)"\xe9\x66\x14" "get_style_border_opa")
QDEF(MP_QSTR_set_style_local_border_opa, (const byte*)"\x2f\x00\x1a" "set_style_local_border_opa")
QDEF(MP_QSTR_get_style_outline_width, (const byte*)"\xbd\xbc\x17" "get_style_outline_width")
QDEF(MP_QSTR_set_style_local_outline_width, (const byte*)"\x3b\x34\x1d" "set_style_local_outline_width")
QDEF(MP_QSTR_get_style_outline_pad, (const byte*)"\x6e\xb7\x15" "get_style_outline_pad")
QDEF(MP_QSTR_set_style_local_outline_pad, (const byte*)"\xe8\x55\x1b" "set_style_local_outline_pad")
QDEF(MP_QSTR_get_style_outline_blend_mode, (const byte*)"\x26\x21\x1c" "get_style_outline_blend_mode")
QDEF(MP_QSTR_set_style_local_outline_blend_mode, (const byte*)"\xe0\x7a\x22" "set_style_local_outline_blend_mode")
QDEF(MP_QSTR_get_style_outline_color, (const byte*)"\x46\x6c\x17" "get_style_outline_color")
QDEF(MP_QSTR_set_style_local_outline_color, (const byte*)"\xc0\x13\x1d" "set_style_local_outline_color")
QDEF(MP_QSTR_get_style_outline_opa, (const byte*)"\x45\xd3\x15" "get_style_outline_opa")
QDEF(MP_QSTR_set_style_local_outline_opa, (const byte*)"\xc3\x81\x1b" "set_style_local_outline_opa")
QDEF(MP_QSTR_get_style_shadow_width, (const byte*)"\x1b\x05\x16" "get_style_shadow_width")
QDEF(MP_QSTR_set_style_local_shadow_width, (const byte*)"\x5d\x86\x1c" "set_style_local_shadow_width")
QDEF(MP_QSTR_get_style_shadow_ofs_x, (const byte*)"\x60\xa6\x16" "get_style_shadow_ofs_x")
QDEF(MP_QSTR_set_style_local_shadow_ofs_x, (const byte*)"\xa6\xc5\x1c" "set_style_local_shadow_ofs_x")
QDEF(MP_QSTR_get_style_shadow_ofs_y, (const byte*)"\x61\xa6\x16" "get_style_shadow_ofs_y")
QDEF(MP_QSTR_set_style_local_shadow_ofs_y, (const byte*)"\xa7\xc5\x1c" "set_style_local_shadow_ofs_y")
QDEF(MP_QSTR_get_style_shadow_spread, (const byte*)"\x6c\x66\x17" "get_style_shadow_spread")
QDEF(MP_QSTR_set_style_local_shadow_spread, (const byte*)"\x6a\x5f\x1d" "set_style_local_shadow_spread")
QDEF(MP_QSTR_get_style_shadow_blend_mode, (const byte*)"\x40\x28\x1b" "get_style_shadow_blend_mode")
QDEF(MP_QSTR_set_style_local_shadow_blend_mode, (const byte*)"\xc6\xdf\x21" "set_style_local_shadow_blend_mode")
QDEF(MP_QSTR_get_style_shadow_color, (const byte*)"\xa0\xe4\x16" "get_style_shadow_color")
QDEF(MP_QSTR_set_style_local_shadow_color, (const byte*)"\xe6\xf4\x1c" "set_style_local_shadow_color")
QDEF(MP_QSTR_get_style_shadow_opa, (const byte*)"\xa3\x73\x14" "get_style_shadow_opa")
QDEF(MP_QSTR_set_style_local_shadow_opa, (const byte*)"\xe5\xbc\x1a" "set_style_local_shadow_opa")
QDEF(MP_QSTR_get_style_pattern_repeat, (const byte*)"\xe4\x0a\x18" "get_style_pattern_repeat")
QDEF(MP_QSTR_set_style_local_pattern_repeat, (const byte*)"\xa2\x04\x1e" "set_style_local_pattern_repeat")
QDEF(MP_QSTR_get_style_pattern_blend_mode, (const byte*)"\xee\x26\x1c" "get_style_pattern_blend_mode")
QDEF(MP_QSTR_set_style_local_pattern_blend_mode, (const byte*)"\xa8\x6e\x22" "set_style_local_pattern_blend_mode")
QDEF(MP_QSTR_get_style_pattern_recolor, (const byte*)"\x39\x68\x19" "get_style_pattern_recolor")
QDEF(MP_QSTR_set_style_local_pattern_recolor, (const byte*)"\xbf\x48\x1f" "set_style_local_pattern_recolor")
QDEF(MP_QSTR_get_style_pattern_opa, (const byte*)"\x8d\x90\x15" "get_style_pattern_opa")
QDEF(MP_QSTR_set_style_local_pattern_opa, (const byte*)"\x0b\xf1\x1b" "set_style_local_pattern_opa")
QDEF(MP_QSTR_get_style_pattern_recolor_opa, (const byte*)"\xb8\xdb\x1d" "get_style_pattern_recolor_opa")
QDEF(MP_QSTR_set_style_local_pattern_recolor_opa, (const byte*)"\xbe\x6e\x23" "set_style_local_pattern_recolor_opa")
QDEF(MP_QSTR_get_style_pattern_image, (const byte*)"\x94\xd2\x17" "get_style_pattern_image")
QDEF(MP_QSTR_set_style_local_pattern_image, (const byte*)"\x92\x9b\x1d" "set_style_local_pattern_image")
QDEF(MP_QSTR_get_style_value_letter_space, (const byte*)"\x55\xc1\x1c" "get_style_value_letter_space")
QDEF(MP_QSTR_set_style_local_value_letter_space, (const byte*)"\x93\x3a\x22" "set_style_local_value_letter_space")
QDEF(MP_QSTR_get_style_value_line_space, (const byte*)"\xa5\x96\x1a" "get_style_value_line_space")
QDEF(MP_QSTR_set_style_local_value_line_space, (const byte*)"\x63\xe9\x20" "set_style_local_value_line_space")
QDEF(MP_QSTR_get_style_value_blend_mode, (const byte*)"\x2d\x4a\x1a" "get_style_value_blend_mode")
QDEF(MP_QSTR_set_style_local_value_blend_mode, (const byte*)"\xeb\x0c\x20" "set_style_local_value_blend_mode")
QDEF(MP_QSTR_get_style_value_ofs_x, (const byte*)"\xed\xca\x15" "get_style_value_ofs_x")
QDEF(MP_QSTR_set_style_local_value_ofs_x, (const byte*)"\xeb\x3b\x1b" "set_style_local_value_ofs_x")
QDEF(MP_QSTR_get_style_value_ofs_y, (const byte*)"\xec\xca\x15" "get_style_value_ofs_y")
QDEF(MP_QSTR_set_style_local_value_ofs_y, (const byte*)"\xea\x3b\x1b" "set_style_local_value_ofs_y")
QDEF(MP_QSTR_get_style_value_align, (const byte*)"\x5d\x15\x15" "get_style_value_align")
QDEF(MP_QSTR_set_style_local_value_align, (const byte*)"\xdb\x27\x1b" "set_style_local_value_align")
QDEF(MP_QSTR_get_style_value_color, (const byte*)"\xad\xbe\x15" "get_style_value_color")
QDEF(MP_QSTR_set_style_local_value_color, (const byte*)"\xab\x5f\x1b" "set_style_local_value_color")
QDEF(MP_QSTR_get_style_value_opa, (const byte*)"\xae\x7c\x13" "get_style_value_opa")
QDEF(MP_QSTR_set_style_local_value_opa, (const byte*)"\xa8\x94\x19" "set_style_local_value_opa")
QDEF(MP_QSTR_get_style_value_font, (const byte*)"\x43\x4b\x14" "get_style_value_font")
QDEF(MP_QSTR_set_style_local_value_font, (const byte*)"\x85\xd4\x1a" "set_style_local_value_font")
QDEF(MP_QSTR_get_style_value_str, (const byte*)"\x25\x0a\x13" "get_style_value_str")
QDEF(MP_QSTR_set_style_local_value_str, (const byte*)"\x23\x43\x19" "set_style_local_value_str")
QDEF(MP_QSTR_get_style_text_letter_space, (const byte*)"\xe3\x69\x1b" "get_style_text_letter_space")
QDEF(MP_QSTR_set_style_local_text_letter_space, (const byte*)"\x65\x6f\x21" "set_style_local_text_letter_space")
QDEF(MP_QSTR_get_style_text_line_space, (const byte*)"\x53\xb0\x19" "get_style_text_line_space")
QDEF(MP_QSTR_set_style_local_text_line_space, (const byte*)"\x55\x60\x1f" "set_style_local_text_line_space")
QDEF(MP_QSTR_get_style_text_decor, (const byte*)"\x19\xce\x14" "get_style_text_decor")
QDEF(MP_QSTR_set_style_local_text_decor, (const byte*)"\xdf\x46\x1a" "set_style_local_text_decor")
QDEF(MP_QSTR_get_style_text_blend_mode, (const byte*)"\x5b\xe9\x19" "get_style_text_blend_mode")
QDEF(MP_QSTR_set_style_local_text_blend_mode, (const byte*)"\x5d\xea\x1f" "set_style_local_text_blend_mode")
QDEF(MP_QSTR_get_style_text_color, (const byte*)"\x9b\x3b\x14" "get_style_text_color")
QDEF(MP_QSTR_set_style_local_text_color, (const byte*)"\xdd\xb4\x1a" "set_style_local_text_color")
QDEF(MP_QSTR_get_style_text_sel_color, (const byte*)"\x3e\x9c\x18" "get_style_text_sel_color")
QDEF(MP_QSTR_set_style_local_text_sel_color, (const byte*)"\xf8\xe6\x1e" "set_style_local_text_sel_color")
QDEF(MP_QSTR_get_style_text_sel_bg_color, (const byte*)"\xa4\x02\x1b" "get_style_text_sel_bg_color")
QDEF(MP_QSTR_set_style_local_text_sel_bg_color, (const byte*)"\xa2\x7f\x21" "set_style_local_text_sel_bg_color")
QDEF(MP_QSTR_get_style_text_opa, (const byte*)"\x98\x37\x12" "get_style_text_opa")
QDEF(MP_QSTR_set_style_local_text_opa, (const byte*)"\xde\xba\x18" "set_style_local_text_opa")
QDEF(MP_QSTR_get_style_text_font, (const byte*)"\xb5\x4d\x13" "get_style_text_font")
QDEF(MP_QSTR_set_style_local_text_font, (const byte*)"\x33\x08\x19" "set_style_local_text_font")
QDEF(MP_QSTR_get_style_line_width, (const byte*)"\xb3\xe7\x14" "get_style_line_width")
QDEF(MP_QSTR_set_style_local_line_width, (const byte*)"\x75\x82\x1a" "set_style_local_line_width")
QDEF(MP_QSTR_get_style_line_blend_mode, (const byte*)"\x68\xdd\x19" "get_style_line_blend_mode")
QDEF(MP_QSTR_set_style_local_line_blend_mode, (const byte*)"\x6e\x3d\x1f" "set_style_local_line_blend_mode")
QDEF(MP_QSTR_get_style_line_dash_width, (const byte*)"\x52\x60\x19" "get_style_line_dash_width")
QDEF(MP_QSTR_set_style_local_line_dash_width, (const byte*)"\xd4\x91\x1f" "set_style_local_line_dash_width")
QDEF(MP_QSTR_get_style_line_dash_gap, (const byte*)"\xc2\xa9\x17" "get_style_line_dash_gap")
QDEF(MP_QSTR_set_style_local_line_dash_gap, (const byte*)"\x44\x64\x1d" "set_style_local_line_dash_gap")
QDEF(MP_QSTR_get_style_line_rounded, (const byte*)"\x16\x11\x16" "get_style_line_rounded")
QDEF(MP_QSTR_set_style_local_line_rounded, (const byte*)"\xd0\xd2\x1c" "set_style_local_line_rounded")
QDEF(MP_QSTR_get_style_line_color, (const byte*)"\x48\x85\x14" "get_style_line_color")
QDEF(MP_QSTR_set_style_local_line_color, (const byte*)"\x0e\xae\x1a" "set_style_local_line_color")
QDEF(MP_QSTR_get_style_line_opa, (const byte*)"\x4b\xf5\x12" "get_style_line_opa")
QDEF(MP_QSTR_set_style_local_line_opa, (const byte*)"\x0d\xf7\x18" "set_style_local_line_opa")
QDEF(MP_QSTR_get_style_image_blend_mode, (const byte*)"\x21\x0f\x1a" "get_style_image_blend_mode")
QDEF(MP_QSTR_set_style_local_image_blend_mode, (const byte*)"\x67\x41\x20" "set_style_local_image_blend_mode")
QDEF(MP_QSTR_get_style_image_recolor, (const byte*)"\x96\x42\x17" "get_style_image_recolor")
QDEF(MP_QSTR_set_style_local_image_recolor, (const byte*)"\x10\x1c\x1d" "set_style_local_image_recolor")
QDEF(MP_QSTR_get_style_image_opa, (const byte*)"\x22\xbf\x13" "get_style_image_opa")
QDEF(MP_QSTR_set_style_local_image_opa, (const byte*)"\xa4\x79\x19" "set_style_local_image_opa")
QDEF(MP_QSTR_get_style_image_recolor_opa, (const byte*)"\x57\xee\x1b" "get_style_image_recolor_opa")
QDEF(MP_QSTR_set_style_local_image_recolor_opa, (const byte*)"\x51\x76\x21" "set_style_local_image_recolor_opa")
QDEF(MP_QSTR_get_style_transition_time, (const byte*)"\xe1\xc7\x19" "get_style_transition_time")
QDEF(MP_QSTR_set_style_local_transition_time, (const byte*)"\xe7\xac\x1f" "set_style_local_transition_time")
QDEF(MP_QSTR_get_style_transition_delay, (const byte*)"\xa1\x38\x1a" "get_style_transition_delay")
QDEF(MP_QSTR_set_style_local_transition_delay, (const byte*)"\xe7\x9e\x20" "set_style_local_transition_delay")
QDEF(MP_QSTR_get_style_transition_prop_1, (const byte*)"\xa7\x41\x1b" "get_style_transition_prop_1")
QDEF(MP_QSTR_set_style_local_transition_prop_1, (const byte*)"\xa1\x3b\x21" "set_style_local_transition_prop_1")
QDEF(MP_QSTR_get_style_transition_prop_2, (const byte*)"\xa4\x41\x1b" "get_style_transition_prop_2")
QDEF(MP_QSTR_set_style_local_transition_prop_2, (const byte*)"\xa2\x3b\x21" "set_style_local_transition_prop_2")
QDEF(MP_QSTR_get_style_transition_prop_3, (const byte*)"\xa5\x41\x1b" "get_style_transition_prop_3")
QDEF(MP_QSTR_set_style_local_transition_prop_3, (const byte*)"\xa3\x3b\x21" "set_style_local_transition_prop_3")
QDEF(MP_QSTR_get_style_transition_prop_4, (const byte*)"\xa2\x41\x1b" "get_style_transition_prop_4")
QDEF(MP_QSTR_set_style_local_transition_prop_4, (const byte*)"\xa4\x3b\x21" "set_style_local_transition_prop_4")
QDEF(MP_QSTR_get_style_transition_prop_5, (const byte*)"\xa3\x41\x1b" "get_style_transition_prop_5")
QDEF(MP_QSTR_set_style_local_transition_prop_5, (const byte*)"\xa5\x3b\x21" "set_style_local_transition_prop_5")
QDEF(MP_QSTR_get_style_transition_prop_6, (const byte*)"\xa0\x41\x1b" "get_style_transition_prop_6")
QDEF(MP_QSTR_set_style_local_transition_prop_6, (const byte*)"\xa6\x3b\x21" "set_style_local_transition_prop_6")
QDEF(MP_QSTR_get_style_transition_path, (const byte*)"\x59\xd9\x19" "get_style_transition_path")
QDEF(MP_QSTR_set_style_local_transition_path, (const byte*)"\x5f\x5d\x1f" "set_style_local_transition_path")
QDEF(MP_QSTR_get_style_scale_width, (const byte*)"\xa5\xd7\x15" "get_style_scale_width")
QDEF(MP_QSTR_set_style_local_scale_width, (const byte*)"\x23\x08\x1b" "set_style_local_scale_width")
QDEF(MP_QSTR_get_style_scale_border_width, (const byte*)"\x56\x09\x1c" "get_style_scale_border_width")
QDEF(MP_QSTR_set_style_local_scale_border_width, (const byte*)"\x10\xff\x22" "set_style_local_scale_border_width")
QDEF(MP_QSTR_get_style_scale_end_border_width, (const byte*)"\x46\x7d\x20" "get_style_scale_end_border_width")
QDEF(MP_QSTR_set_style_local_scale_end_border_width, (const byte*)"\x00\x72\x26" "set_style_local_scale_end_border_width")
QDEF(MP_QSTR_get_style_scale_end_line_width, (const byte*)"\xe4\xaf\x1e" "get_style_scale_end_line_width")
QDEF(MP_QSTR_set_style_local_scale_end_line_width, (const byte*)"\x22\x2c\x24" "set_style_local_scale_end_line_width")
QDEF(MP_QSTR_get_style_scale_grad_color, (const byte*)"\x51\x62\x1a" "get_style_scale_grad_color")
QDEF(MP_QSTR_set_style_local_scale_grad_color, (const byte*)"\x97\x40\x20" "set_style_local_scale_grad_color")
QDEF(MP_QSTR_get_style_scale_end_color, (const byte*)"\x4e\x33\x19" "get_style_scale_end_color")
QDEF(MP_QSTR_set_style_local_scale_end_color, (const byte*)"\xc8\x72\x1f" "set_style_local_scale_end_color")
QDEF(MP_QSTR_set_style_local_pad_all, (const byte*)"\xc9\x1c\x17" "set_style_local_pad_all")
QDEF(MP_QSTR_set_style_local_pad_hor, (const byte*)"\x7d\x01\x17" "set_style_local_pad_hor")
QDEF(MP_QSTR_set_style_local_pad_ver, (const byte*)"\xa9\x8e\x17" "set_style_local_pad_ver")
QDEF(MP_QSTR_set_style_local_margin_all, (const byte*)"\x02\xaa\x1a" "set_style_local_margin_all")
QDEF(MP_QSTR_set_style_local_margin_hor, (const byte*)"\x76\xc6\x1a" "set_style_local_margin_hor")
QDEF(MP_QSTR_set_style_local_margin_ver, (const byte*)"\x22\x01\x1a" "set_style_local_margin_ver")
QDEF(MP_QSTR_delete, (const byte*)"\x9c\xe7\x06" "delete")
QDEF(MP_QSTR_del_anim_ready_cb, (const byte*)"\x76\x5d\x11" "del_anim_ready_cb")
QDEF(MP_QSTR_del_async, (const byte*)"\xd1\xab\x09" "del_async")
QDEF(MP_QSTR_clean, (const byte*)"\x60\xa0\x05" "clean")
QDEF(MP_QSTR_invalidate_area, (const byte*)"\x2c\x42\x0f" "invalidate_area")
QDEF(MP_QSTR_invalidate, (const byte*)"\x64\x00\x0a" "invalidate")
QDEF(MP_QSTR_area_is_visible, (const byte*)"\xe6\xed\x0f" "area_is_visible")
QDEF(MP_QSTR_is_visible, (const byte*)"\x6e\xea\x0a" "is_visible")
QDEF(MP_QSTR_set_parent, (const byte*)"\xc4\x89\x0a" "set_parent")
QDEF(MP_QSTR_move_foreground, (const byte*)"\xf0\x0e\x0f" "move_foreground")
QDEF(MP_QSTR_move_background, (const byte*)"\xc5\x9d\x0f" "move_background")
QDEF(MP_QSTR_set_pos, (const byte*)"\x54\x6d\x07" "set_pos")
QDEF(MP_QSTR_set_x, (const byte*)"\x20\xff\x05" "set_x")
QDEF(MP_QSTR_set_y, (const byte*)"\x21\xff\x05" "set_y")
QDEF(MP_QSTR_set_size, (const byte*)"\x3d\xac\x08" "set_size")
QDEF(MP_QSTR_set_width, (const byte*)"\xde\x39\x09" "set_width")
QDEF(MP_QSTR_set_height, (const byte*)"\x67\x49\x0a" "set_height")
QDEF(MP_QSTR_set_width_fit, (const byte*)"\xba\x9f\x0d" "set_width_fit")
QDEF(MP_QSTR_set_height_fit, (const byte*)"\x43\x94\x0e" "set_height_fit")
QDEF(MP_QSTR_set_width_margin, (const byte*)"\x1f\xae\x10" "set_width_margin")
QDEF(MP_QSTR_set_height_margin, (const byte*)"\x46\x90\x11" "set_height_margin")
QDEF(MP_QSTR_align_x, (const byte*)"\xaf\x8f\x07" "align_x")
QDEF(MP_QSTR_align_y, (const byte*)"\xae\x8f\x07" "align_y")
QDEF(MP_QSTR_align_mid, (const byte*)"\x97\x58\x09" "align_mid")
QDEF(MP_QSTR_align_mid_x, (const byte*)"\x50\xd0\x0b" "align_mid_x")
QDEF(MP_QSTR_align_mid_y, (const byte*)"\x51\xd0\x0b" "align_mid_y")
QDEF(MP_QSTR_realign, (const byte*)"\x9f\x8a\x07" "realign")
QDEF(MP_QSTR_set_auto_realign, (const byte*)"\x72\x01\x10" "set_auto_realign")
QDEF(MP_QSTR_set_ext_click_area, (const byte*)"\x08\xd8\x12" "set_ext_click_area")
QDEF(MP_QSTR_add_style, (const byte*)"\x8c\xf7\x09" "add_style")
QDEF(MP_QSTR_remove_style, (const byte*)"\x6b\x86\x0c" "remove_style")
QDEF(MP_QSTR_clean_style_list, (const byte*)"\xd5\x08\x10" "clean_style_list")
QDEF(MP_QSTR_reset_style_list, (const byte*)"\xa5\xf0\x10" "reset_style_list")
QDEF(MP_QSTR_refresh_style, (const byte*)"\xd0\x84\x0d" "refresh_style")
QDEF(MP_QSTR_report_style_mod, (const byte*)"\x7a\x2c\x10" "report_style_mod")
QDEF(MP_QSTR_remove_style_local_prop, (const byte*)"\xfb\x3e\x17" "remove_style_local_prop")
QDEF(MP_QSTR_set_hidden, (const byte*)"\x72\xe2\x0a" "set_hidden")
QDEF(MP_QSTR_set_adv_hittest, (const byte*)"\xb7\xe8\x0f" "set_adv_hittest")
QDEF(MP_QSTR_set_click, (const byte*)"\xd6\x20\x09" "set_click")
QDEF(MP_QSTR_set_top, (const byte*)"\x53\x7d\x07" "set_top")
QDEF(MP_QSTR_set_drag, (const byte*)"\xa8\xde\x08" "set_drag")
QDEF(MP_QSTR_set_drag_dir, (const byte*)"\xc8\xb8\x0c" "set_drag_dir")
QDEF(MP_QSTR_set_drag_throw, (const byte*)"\x01\x82\x0e" "set_drag_throw")
QDEF(MP_QSTR_set_drag_parent, (const byte*)"\x6b\xad\x0f" "set_drag_parent")
QDEF(MP_QSTR_set_focus_parent, (const byte*)"\x77\x4e\x10" "set_focus_parent")
QDEF(MP_QSTR_set_gesture_parent, (const byte*)"\x3c\x85\x12" "set_gesture_parent")
QDEF(MP_QSTR_set_parent_event, (const byte*)"\x17\x57\x10" "set_parent_event")
QDEF(MP_QSTR_set_base_dir, (const byte*)"\xcd\xbd\x0c" "set_base_dir")
QDEF(MP_QSTR_add_protect, (const byte*)"\xb0\x9a\x0b" "add_protect")
QDEF(MP_QSTR_clear_protect, (const byte*)"\x88\xb6\x0d" "clear_protect")
QDEF(MP_QSTR_set_state, (const byte*)"\x2f\x9d\x09" "set_state")
QDEF(MP_QSTR_add_state, (const byte*)"\x8c\x5a\x09" "add_state")
QDEF(MP_QSTR_clear_state, (const byte*)"\x74\xce\x0b" "clear_state")
QDEF(MP_QSTR_finish_transitions, (const byte*)"\x35\x6b\x12" "finish_transitions")
QDEF(MP_QSTR_set_event_cb, (const byte*)"\x4a\xbb\x0c" "set_event_cb")
QDEF(MP_QSTR_set_signal_cb, (const byte*)"\x18\x8e\x0d" "set_signal_cb")
QDEF(MP_QSTR_set_design_cb, (const byte*)"\x74\x22\x0d" "set_design_cb")
QDEF(MP_QSTR_allocate_ext_attr, (const byte*)"\x62\xc3\x11" "allocate_ext_attr")
QDEF(MP_QSTR_refresh_ext_draw_pad, (const byte*)"\xdb\xbd\x14" "refresh_ext_draw_pad")
QDEF(MP_QSTR_get_screen, (const byte*)"\xc0\xc7\x0a" "get_screen")
QDEF(MP_QSTR_get_disp, (const byte*)"\x22\x4a\x08" "get_disp")
QDEF(MP_QSTR_get_parent, (const byte*)"\x50\x65\x0a" "get_parent")
QDEF(MP_QSTR_get_child, (const byte*)"\xa6\xa3\x09" "get_child")
QDEF(MP_QSTR_get_child_back, (const byte*)"\x12\xb1\x0e" "get_child_back")
QDEF(MP_QSTR_count_children, (const byte*)"\x0a\x78\x0e" "count_children")
QDEF(MP_QSTR_count_children_recursive, (const byte*)"\x6f\x70\x18" "count_children_recursive")
QDEF(MP_QSTR_get_coords, (const byte*)"\x0a\x2d\x0a" "get_coords")
QDEF(MP_QSTR_get_inner_coords, (const byte*)"\xcb\xb8\x10" "get_inner_coords")
QDEF(MP_QSTR_get_x, (const byte*)"\x34\xdb\x05" "get_x")
QDEF(MP_QSTR_get_y, (const byte*)"\x35\xdb\x05" "get_y")
QDEF(MP_QSTR_get_width, (const byte*)"\xca\x58\x09" "get_width")
QDEF(MP_QSTR_get_height, (const byte*)"\xf3\x1b\x0a" "get_height")
QDEF(MP_QSTR_get_width_fit, (const byte*)"\xae\x21\x0d" "get_width_fit")
QDEF(MP_QSTR_get_height_fit, (const byte*)"\xd7\x81\x0e" "get_height_fit")
QDEF(MP_QSTR_get_height_margin, (const byte*)"\x52\x44\x11" "get_height_margin")
QDEF(MP_QSTR_get_width_margin, (const byte*)"\x8b\x1a\x10" "get_width_margin")
QDEF(MP_QSTR_get_width_grid, (const byte*)"\x8d\x7b\x0e" "get_width_grid")
QDEF(MP_QSTR_get_height_grid, (const byte*)"\x54\x86\x0f" "get_height_grid")
QDEF(MP_QSTR_get_auto_realign, (const byte*)"\xe6\x9f\x10" "get_auto_realign")
QDEF(MP_QSTR_get_ext_click_pad_left, (const byte*)"\x7a\xb0\x16" "get_ext_click_pad_left")
QDEF(MP_QSTR_get_ext_click_pad_right, (const byte*)"\xc1\xef\x17" "get_ext_click_pad_right")
QDEF(MP_QSTR_get_ext_click_pad_top, (const byte*)"\x0a\x09\x15" "get_ext_click_pad_top")
QDEF(MP_QSTR_get_ext_click_pad_bottom, (const byte*)"\x0e\x5e\x18" "get_ext_click_pad_bottom")
QDEF(MP_QSTR_get_ext_draw_pad, (const byte*)"\x90\xfe\x10" "get_ext_draw_pad")
QDEF(MP_QSTR_get_style_list, (const byte*)"\x26\x29\x0e" "get_style_list")
QDEF(MP_QSTR_get_local_style, (const byte*)"\xa9\x59\x0f" "get_local_style")
QDEF(MP_QSTR_get_hidden, (const byte*)"\xe6\x14\x0a" "get_hidden")
QDEF(MP_QSTR_get_adv_hittest, (const byte*)"\xa3\x2c\x0f" "get_adv_hittest")
QDEF(MP_QSTR_get_click, (const byte*)"\xc2\x73\x09" "get_click")
QDEF(MP_QSTR_get_top, (const byte*)"\x47\x8d\x07" "get_top")
QDEF(MP_QSTR_get_drag, (const byte*)"\x3c\xcb\x08" "get_drag")
QDEF(MP_QSTR_get_drag_dir, (const byte*)"\x5c\x02\x0c" "get_drag_dir")
QDEF(MP_QSTR_get_drag_throw, (const byte*)"\x95\x7f\x0e" "get_drag_throw")
QDEF(MP_QSTR_get_drag_parent, (const byte*)"\x7f\x56\x0f" "get_drag_parent")
QDEF(MP_QSTR_get_focus_parent, (const byte*)"\xe3\xd9\x10" "get_focus_parent")
QDEF(MP_QSTR_get_parent_event, (const byte*)"\x83\xe6\x10" "get_parent_event")
QDEF(MP_QSTR_get_gesture_parent, (const byte*)"\xa8\xc1\x12" "get_gesture_parent")
QDEF(MP_QSTR_get_base_dir, (const byte*)"\x59\x24\x0c" "get_base_dir")
QDEF(MP_QSTR_get_protect, (const byte*)"\x07\x38\x0b" "get_protect")
QDEF(MP_QSTR_is_protected, (const byte*)"\xaa\x70\x0c" "is_protected")
QDEF(MP_QSTR_get_state, (const byte*)"\x3b\x79\x09" "get_state")
QDEF(MP_QSTR_get_signal_cb, (const byte*)"\x0c\xd4\x0d" "get_signal_cb")
QDEF(MP_QSTR_get_design_cb, (const byte*)"\x60\x5e\x0d" "get_design_cb")
QDEF(MP_QSTR_get_event_cb, (const byte*)"\xde\x2d\x0c" "get_event_cb")
QDEF(MP_QSTR_is_point_on_coords, (const byte*)"\x6b\xf0\x12" "is_point_on_coords")
QDEF(MP_QSTR_hittest, (const byte*)"\x46\x29\x07" "hittest")
QDEF(MP_QSTR_get_ext_attr, (const byte*)"\xe9\x2a\x0c" "get_ext_attr")
QDEF(MP_QSTR_get_type, (const byte*)"\x54\xcc\x08" "get_type")
QDEF(MP_QSTR_get_user_data, (const byte*)"\x72\x35\x0d" "get_user_data")
QDEF(MP_QSTR_get_user_data_ptr, (const byte*)"\x7b\xdf\x11" "get_user_data_ptr")
QDEF(MP_QSTR_set_user_data, (const byte*)"\x66\x1d\x0d" "set_user_data")
QDEF(MP_QSTR_get_group, (const byte*)"\xd3\x57\x09" "get_group")
QDEF(MP_QSTR_is_focused, (const byte*)"\x8d\x3c\x0a" "is_focused")
QDEF(MP_QSTR_get_focused_obj, (const byte*)"\x99\xc0\x0f" "get_focused_obj")
QDEF(MP_QSTR_handle_get_type_signal, (const byte*)"\x60\x95\x16" "handle_get_type_signal")
QDEF(MP_QSTR_init_draw_rect_dsc, (const byte*)"\xd4\xf0\x12" "init_draw_rect_dsc")
QDEF(MP_QSTR_init_draw_label_dsc, (const byte*)"\x32\x54\x13" "init_draw_label_dsc")
QDEF(MP_QSTR_init_draw_img_dsc, (const byte*)"\x17\xfb\x11" "init_draw_img_dsc")
QDEF(MP_QSTR_init_draw_line_dsc, (const byte*)"\xfa\xb6\x12" "init_draw_line_dsc")
QDEF(MP_QSTR_get_draw_rect_ext_pad_size, (const byte*)"\xb5\xd6\x1a" "get_draw_rect_ext_pad_size")
QDEF(MP_QSTR_fade_in, (const byte*)"\x5b\x8e\x07" "fade_in")
QDEF(MP_QSTR_fade_out, (const byte*)"\x32\x3e\x08" "fade_out")
QDEF(MP_QSTR_PART, (const byte*)"\x92\xef\x04" "PART")
QDEF(MP_QSTR_obj, (const byte*)"\x02\x5c\x03" "obj")
QDEF(MP_QSTR_set_fit2, (const byte*)"\x51\xd9\x08" "set_fit2")
QDEF(MP_QSTR_set_fit, (const byte*)"\x03\xb9\x07" "set_fit")
QDEF(MP_QSTR_set_layout, (const byte*)"\x82\xa4\x0a" "set_layout")
QDEF(MP_QSTR_set_fit4, (const byte*)"\x57\xd9\x08" "set_fit4")
QDEF(MP_QSTR_get_layout, (const byte*)"\x16\x7d\x0a" "get_layout")
QDEF(MP_QSTR_get_fit_left, (const byte*)"\x73\x19\x0c" "get_fit_left")
QDEF(MP_QSTR_get_fit_right, (const byte*)"\xa8\x43\x0d" "get_fit_right")
QDEF(MP_QSTR_get_fit_top, (const byte*)"\xe3\xf9\x0b" "get_fit_top")
QDEF(MP_QSTR_get_fit_bottom, (const byte*)"\x47\x67\x0e" "get_fit_bottom")
QDEF(MP_QSTR_cont, (const byte*)"\x33\xd9\x04" "cont")
QDEF(MP_QSTR_set_checkable, (const byte*)"\xb4\x77\x0d" "set_checkable")
QDEF(MP_QSTR_get_checkable, (const byte*)"\xa0\x22\x0d" "get_checkable")
QDEF(MP_QSTR_STATE, (const byte*)"\x32\xf0\x05" "STATE")
QDEF(MP_QSTR_btn, (const byte*)"\x5d\x49\x03" "btn")
QDEF(MP_QSTR_set_src, (const byte*)"\x7a\x84\x07" "set_src")
QDEF(MP_QSTR_get_src, (const byte*)"\x6e\xb1\x07" "get_src")
QDEF(MP_QSTR_imgbtn, (const byte*)"\x1e\xb6\x06" "imgbtn")
QDEF(MP_QSTR_set_text, (const byte*)"\xc5\x2f\x08" "set_text")
QDEF(MP_QSTR_set_text_static, (const byte*)"\x42\xfc\x0f" "set_text_static")
QDEF(MP_QSTR_set_long_mode, (const byte*)"\xae\x6a\x0d" "set_long_mode")
QDEF(MP_QSTR_set_align, (const byte*)"\xd5\xcf\x09" "set_align")
QDEF(MP_QSTR_set_recolor, (const byte*)"\x92\xb5\x0b" "set_recolor")
QDEF(MP_QSTR_set_anim_speed, (const byte*)"\x6b\x61\x0e" "set_anim_speed")
QDEF(MP_QSTR_set_text_sel_start, (const byte*)"\xff\x9a\x12" "set_text_sel_start")
QDEF(MP_QSTR_set_text_sel_end, (const byte*)"\x70\x57\x10" "set_text_sel_end")
QDEF(MP_QSTR_get_text, (const byte*)"\x51\x3e\x08" "get_text")
QDEF(MP_QSTR_get_long_mode, (const byte*)"\xba\x06\x0d" "get_long_mode")
QDEF(MP_QSTR_get_align, (const byte*)"\xc1\x23\x09" "get_align")
QDEF(MP_QSTR_get_recolor, (const byte*)"\x86\x4d\x0b" "get_recolor")
QDEF(MP_QSTR_get_anim_speed, (const byte*)"\xff\xb9\x0e" "get_anim_speed")
QDEF(MP_QSTR_get_letter_pos, (const byte*)"\x41\xbd\x0e" "get_letter_pos")
QDEF(MP_QSTR_get_letter_on, (const byte*)"\x4c\xdb\x0d" "get_letter_on")
QDEF(MP_QSTR_is_char_under_pos, (const byte*)"\x9c\xec\x11" "is_char_under_pos")
QDEF(MP_QSTR_get_text_sel_start, (const byte*)"\x6b\x9e\x12" "get_text_sel_start")
QDEF(MP_QSTR_get_text_sel_end, (const byte*)"\xe4\x85\x10" "get_text_sel_end")
QDEF(MP_QSTR_get_style, (const byte*)"\x3b\x9a\x09" "get_style")
QDEF(MP_QSTR_ins_text, (const byte*)"\xf3\x83\x08" "ins_text")
QDEF(MP_QSTR_cut_text, (const byte*)"\xc5\xad\x08" "cut_text")
QDEF(MP_QSTR_refr_text, (const byte*)"\x84\xe5\x09" "refr_text")
QDEF(MP_QSTR_ALIGN, (const byte*)"\xc8\x1c\x05" "ALIGN")
QDEF(MP_QSTR_cf, (const byte*)"\xe0\x6e\x02" "cf")
QDEF(MP_QSTR_always_zero, (const byte*)"\xe9\xc1\x0b" "always_zero")
QDEF(MP_QSTR_reserved, (const byte*)"\x01\xa3\x08" "reserved")
QDEF(MP_QSTR_lv_img_header_t, (const byte*)"\x48\x82\x0f" "lv_img_header_t")
QDEF(MP_QSTR_header, (const byte*)"\x9a\x98\x06" "header")
QDEF(MP_QSTR_data_size, (const byte*)"\xcf\xd6\x09" "data_size")
QDEF(MP_QSTR_lv_img_dsc_t, (const byte*)"\xc3\x8b\x0c" "lv_img_dsc_t")
QDEF(MP_QSTR_info_cb, (const byte*)"\xb5\xd2\x07" "info_cb")
QDEF(MP_QSTR_lv_img_decoder_t_info_cb, (const byte*)"\x66\x29\x18" "lv_img_decoder_t_info_cb")
QDEF(MP_QSTR_open_cb, (const byte*)"\xcf\x6b\x07" "open_cb")
QDEF(MP_QSTR_lv_img_decoder_t_open_cb, (const byte*)"\xdc\x36\x18" "lv_img_decoder_t_open_cb")
QDEF(MP_QSTR_read_line_cb, (const byte*)"\xf8\x96\x0c" "read_line_cb")
QDEF(MP_QSTR_lv_img_decoder_t_read_line_cb, (const byte*)"\x8b\x4f\x1d" "lv_img_decoder_t_read_line_cb")
QDEF(MP_QSTR_close_cb, (const byte*)"\x6d\xed\x08" "close_cb")
QDEF(MP_QSTR_lv_img_decoder_t_close_cb, (const byte*)"\xde\x5c\x19" "lv_img_decoder_t_close_cb")
QDEF(MP_QSTR_lv_img_decoder_t, (const byte*)"\x49\x1d\x10" "lv_img_decoder_t")
QDEF(MP_QSTR_src, (const byte*)"\x07\x8d\x03" "src")
QDEF(MP_QSTR_src_type, (const byte*)"\x20\xd9\x08" "src_type")
QDEF(MP_QSTR_img_data, (const byte*)"\xa9\x06\x08" "img_data")
QDEF(MP_QSTR_time_to_open, (const byte*)"\x3f\xbe\x0c" "time_to_open")
QDEF(MP_QSTR_error_msg, (const byte*)"\x9b\x7e\x09" "error_msg")
QDEF(MP_QSTR_lv_img_decoder_dsc_t, (const byte*)"\xa2\xb0\x14" "lv_img_decoder_dsc_t")
QDEF(MP_QSTR_buf_alloc, (const byte*)"\x86\x19\x09" "buf_alloc")
QDEF(MP_QSTR_buf_get_px_color, (const byte*)"\xa8\xef\x10" "buf_get_px_color")
QDEF(MP_QSTR_buf_get_px_alpha, (const byte*)"\x21\x47\x10" "buf_get_px_alpha")
QDEF(MP_QSTR_buf_set_px_color, (const byte*)"\x3c\xda\x10" "buf_set_px_color")
QDEF(MP_QSTR_buf_set_px_alpha, (const byte*)"\xb5\xda\x10" "buf_set_px_alpha")
QDEF(MP_QSTR_buf_set_palette, (const byte*)"\x0b\xb0\x0f" "buf_set_palette")
QDEF(MP_QSTR_buf_free, (const byte*)"\x1f\xf2\x08" "buf_free")
QDEF(MP_QSTR_buf_get_img_size, (const byte*)"\x7b\xda\x10" "buf_get_img_size")
QDEF(MP_QSTR_decoder_get_info, (const byte*)"\xa3\x3b\x10" "decoder_get_info")
QDEF(MP_QSTR_decoder_open, (const byte*)"\x10\x0b\x0c" "decoder_open")
QDEF(MP_QSTR_decoder_read_line, (const byte*)"\x67\x37\x11" "decoder_read_line")
QDEF(MP_QSTR_decoder_close, (const byte*)"\xd2\x60\x0d" "decoder_close")
QDEF(MP_QSTR_decoder_create, (const byte*)"\x00\x4b\x0e" "decoder_create")
QDEF(MP_QSTR_decoder_delete, (const byte*)"\xdd\xfc\x0e" "decoder_delete")
QDEF(MP_QSTR_decoder_set_info_cb, (const byte*)"\xe9\x6a\x13" "decoder_set_info_cb")
QDEF(MP_QSTR_decoder_set_open_cb, (const byte*)"\x13\x19\x13" "decoder_set_open_cb")
QDEF(MP_QSTR_decoder_set_read_line_cb, (const byte*)"\x24\xb2\x18" "decoder_set_read_line_cb")
QDEF(MP_QSTR_decoder_set_close_cb, (const byte*)"\xb1\x4c\x14" "decoder_set_close_cb")
QDEF(MP_QSTR_decoder_built_in_info, (const byte*)"\x8b\x92\x15" "decoder_built_in_info")
QDEF(MP_QSTR_decoder_built_in_open, (const byte*)"\x71\xb8\x15" "decoder_built_in_open")
QDEF(MP_QSTR_decoder_built_in_read_line, (const byte*)"\x26\x2b\x1a" "decoder_built_in_read_line")
QDEF(MP_QSTR_decoder_built_in_close, (const byte*)"\x93\x98\x16" "decoder_built_in_close")
QDEF(MP_QSTR_src_get_type, (const byte*)"\xe9\xf6\x0c" "src_get_type")
QDEF(MP_QSTR_cf_get_px_size, (const byte*)"\xc4\x89\x0e" "cf_get_px_size")
QDEF(MP_QSTR_cf_is_chroma_keyed, (const byte*)"\x29\x6f\x12" "cf_is_chroma_keyed")
QDEF(MP_QSTR_cf_has_alpha, (const byte*)"\xce\xb1\x0c" "cf_has_alpha")
QDEF(MP_QSTR_set_auto_size, (const byte*)"\xad\xf5\x0d" "set_auto_size")
QDEF(MP_QSTR_set_offset_x, (const byte*)"\x52\x30\x0c" "set_offset_x")
QDEF(MP_QSTR_set_offset_y, (const byte*)"\x53\x30\x0c" "set_offset_y")
QDEF(MP_QSTR_set_pivot, (const byte*)"\xec\xc1\x09" "set_pivot")
QDEF(MP_QSTR_set_angle, (const byte*)"\xf9\xbe\x09" "set_angle")
QDEF(MP_QSTR_set_zoom, (const byte*)"\x6f\xdd\x08" "set_zoom")
QDEF(MP_QSTR_set_antialias, (const byte*)"\xfc\x87\x0d" "set_antialias")
QDEF(MP_QSTR_get_file_name, (const byte*)"\x32\x1b\x0d" "get_file_name")
QDEF(MP_QSTR_get_auto_size, (const byte*)"\xb9\xcf\x0d" "get_auto_size")
QDEF(MP_QSTR_get_offset_x, (const byte*)"\xc6\x59\x0c" "get_offset_x")
QDEF(MP_QSTR_get_offset_y, (const byte*)"\xc7\x59\x0c" "get_offset_y")
QDEF(MP_QSTR_get_angle, (const byte*)"\xed\x32\x09" "get_angle")
QDEF(MP_QSTR_get_pivot, (const byte*)"\xf8\xde\x09" "get_pivot")
QDEF(MP_QSTR_get_zoom, (const byte*)"\xfb\x0f\x08" "get_zoom")
QDEF(MP_QSTR_get_antialias, (const byte*)"\xe8\x8b\x0d" "get_antialias")
QDEF(MP_QSTR_cache_set_size, (const byte*)"\x2e\xf4\x0e" "cache_set_size")
QDEF(MP_QSTR_cache_invalidate_src, (const byte*)"\x6a\x67\x14" "cache_invalidate_src")
QDEF(MP_QSTR_CF, (const byte*)"\xe0\x72\x02" "CF")
QDEF(MP_QSTR_SRC, (const byte*)"\x27\x11\x03" "SRC")
QDEF(MP_QSTR_img, (const byte*)"\x26\x53\x03" "img")
QDEF(MP_QSTR_set_points, (const byte*)"\xe7\x65\x0a" "set_points")
QDEF(MP_QSTR_set_y_invert, (const byte*)"\x6c\xf3\x0c" "set_y_invert")
QDEF(MP_QSTR_get_y_invert, (const byte*)"\xf8\x7d\x0c" "get_y_invert")
QDEF(MP_QSTR_set_scrollable_fit4, (const byte*)"\xef\xc7\x13" "set_scrollable_fit4")
QDEF(MP_QSTR_set_scrollable_fit2, (const byte*)"\xe9\xc7\x13" "set_scrollable_fit2")
QDEF(MP_QSTR_set_scrollable_fit, (const byte*)"\x7b\xb8\x12" "set_scrollable_fit")
QDEF(MP_QSTR_set_scrl_width, (const byte*)"\x8f\x6c\x0e" "set_scrl_width")
QDEF(MP_QSTR_set_scrl_height, (const byte*)"\x16\xf7\x0f" "set_scrl_height")
QDEF(MP_QSTR_set_scrl_layout, (const byte*)"\xf3\xdb\x0f" "set_scrl_layout")
QDEF(MP_QSTR_get_scrl_width, (const byte*)"\x1b\x47\x0e" "get_scrl_width")
QDEF(MP_QSTR_get_scrl_height, (const byte*)"\x02\x11\x0f" "get_scrl_height")
QDEF(MP_QSTR_get_scrl_layout, (const byte*)"\xe7\xeb\x0f" "get_scrl_layout")
QDEF(MP_QSTR_get_scrl_fit_left, (const byte*)"\x82\x8c\x11" "get_scrl_fit_left")
QDEF(MP_QSTR_get_scrl_fit_right, (const byte*)"\xb9\xc4\x12" "get_scrl_fit_right")
QDEF(MP_QSTR_get_scrl_fit_top, (const byte*)"\xf2\xa3\x10" "get_scrl_fit_top")
QDEF(MP_QSTR_get_scrl_fit_bottom, (const byte*)"\x36\xdd\x13" "get_scrl_fit_bottom")
QDEF(MP_QSTR_get_scrollable, (const byte*)"\x4b\xfc\x0e" "get_scrollable")
QDEF(MP_QSTR_get_anim_time, (const byte*)"\x0d\xe6\x0d" "get_anim_time")
QDEF(MP_QSTR_set_scrollbar_mode, (const byte*)"\x38\x1b\x12" "set_scrollbar_mode")
QDEF(MP_QSTR_set_anim_time, (const byte*)"\x19\x96\x0d" "set_anim_time")
QDEF(MP_QSTR_set_scroll_propagation, (const byte*)"\x6c\x27\x16" "set_scroll_propagation")
QDEF(MP_QSTR_set_edge_flash, (const byte*)"\xb4\x78\x0e" "set_edge_flash")
QDEF(MP_QSTR_get_scrollbar_mode, (const byte*)"\xac\x28\x12" "get_scrollbar_mode")
QDEF(MP_QSTR_get_scroll_propagation, (const byte*)"\xf8\xe2\x16" "get_scroll_propagation")
QDEF(MP_QSTR_get_edge_flash, (const byte*)"\x20\x71\x0e" "get_edge_flash")
QDEF(MP_QSTR_on_edge, (const byte*)"\xf8\x8e\x07" "on_edge")
QDEF(MP_QSTR_glue_obj, (const byte*)"\xc6\x52\x08" "glue_obj")
QDEF(MP_QSTR_focus, (const byte*)"\x49\xed\x05" "focus")
QDEF(MP_QSTR_scroll_hor, (const byte*)"\x02\x24\x0a" "scroll_hor")
QDEF(MP_QSTR_scroll_ver, (const byte*)"\xd6\x96\x0a" "scroll_ver")
QDEF(MP_QSTR_start_edge_flash, (const byte*)"\x96\x84\x10" "start_edge_flash")
QDEF(MP_QSTR_EDGE, (const byte*)"\x86\x72\x04" "EDGE")
QDEF(MP_QSTR_page, (const byte*)"\x36\xd1\x04" "page")
QDEF(MP_QSTR_add_btn, (const byte*)"\x03\x9a\x07" "add_btn")
QDEF(MP_QSTR_focus_btn, (const byte*)"\x0e\xdb\x09" "focus_btn")
QDEF(MP_QSTR_get_btn_text, (const byte*)"\xf6\xf7\x0c" "get_btn_text")
QDEF(MP_QSTR_get_btn_label, (const byte*)"\x2d\x26\x0d" "get_btn_label")
QDEF(MP_QSTR_get_btn_img, (const byte*)"\x08\x7d\x0b" "get_btn_img")
QDEF(MP_QSTR_get_prev_btn, (const byte*)"\x3a\xa0\x0c" "get_prev_btn")
QDEF(MP_QSTR_get_next_btn, (const byte*)"\x4c\x12\x0c" "get_next_btn")
QDEF(MP_QSTR_get_btn_index, (const byte*)"\xd5\x6b\x0d" "get_btn_index")
QDEF(MP_QSTR_get_size, (const byte*)"\xa9\xfb\x08" "get_size")
QDEF(MP_QSTR_get_btn_selected, (const byte*)"\x82\x8e\x10" "get_btn_selected")
QDEF(MP_QSTR_up, (const byte*)"\xa0\x6f\x02" "up")
QDEF(MP_QSTR_down, (const byte*)"\x37\x06\x04" "down")
QDEF(MP_QSTR_points, (const byte*)"\x7a\x57\x06" "points")
QDEF(MP_QSTR_start_point, (const byte*)"\xb6\x53\x0b" "start_point")
QDEF(MP_QSTR_ext_buf_assigned, (const byte*)"\xfd\x72\x10" "ext_buf_assigned")
QDEF(MP_QSTR_y_axis, (const byte*)"\x00\xda\x06" "y_axis")
QDEF(MP_QSTR_lv_chart_series_t, (const byte*)"\x03\x47\x11" "lv_chart_series_t")
QDEF(MP_QSTR_point, (const byte*)"\xe9\x19\x05" "point")
QDEF(MP_QSTR_axes, (const byte*)"\x8a\xf0\x04" "axes")
QDEF(MP_QSTR_lv_chart_cursor_t, (const byte*)"\xd2\x0f\x11" "lv_chart_cursor_t")
QDEF(MP_QSTR_add_series, (const byte*)"\x00\xf5\x0a" "add_series")
QDEF(MP_QSTR_remove_series, (const byte*)"\x07\x8d\x0d" "remove_series")
QDEF(MP_QSTR_add_cursor, (const byte*)"\xd1\xdc\x0a" "add_cursor")
QDEF(MP_QSTR_clear_series, (const byte*)"\x38\xc5\x0c" "clear_series")
QDEF(MP_QSTR_hide_series, (const byte*)"\xe1\x1b\x0b" "hide_series")
QDEF(MP_QSTR_set_div_line_count, (const byte*)"\x4e\xf5\x12" "set_div_line_count")
QDEF(MP_QSTR_set_y_range, (const byte*)"\x61\x06\x0b" "set_y_range")
QDEF(MP_QSTR_set_type, (const byte*)"\xc0\x5f\x08" "set_type")
QDEF(MP_QSTR_set_point_count, (const byte*)"\x28\x37\x0f" "set_point_count")
QDEF(MP_QSTR_init_points, (const byte*)"\x5f\xad\x0b" "init_points")
QDEF(MP_QSTR_set_next, (const byte*)"\x9f\x88\x08" "set_next")
QDEF(MP_QSTR_set_update_mode, (const byte*)"\x75\x23\x0f" "set_update_mode")
QDEF(MP_QSTR_set_x_tick_length, (const byte*)"\x49\x18\x11" "set_x_tick_length")
QDEF(MP_QSTR_set_y_tick_length, (const byte*)"\x48\xb7\x11" "set_y_tick_length")
QDEF(MP_QSTR_set_secondary_y_tick_length, (const byte*)"\x0d\x2e\x1b" "set_secondary_y_tick_length")
QDEF(MP_QSTR_set_x_tick_texts, (const byte*)"\xfb\x49\x10" "set_x_tick_texts")
QDEF(MP_QSTR_set_secondary_y_tick_texts, (const byte*)"\xbf\xa7\x1a" "set_secondary_y_tick_texts")
QDEF(MP_QSTR_set_y_tick_texts, (const byte*)"\xda\x84\x10" "set_y_tick_texts")
QDEF(MP_QSTR_set_x_start_point, (const byte*)"\x4c\x3b\x11" "set_x_start_point")
QDEF(MP_QSTR_set_ext_array, (const byte*)"\x17\xac\x0d" "set_ext_array")
QDEF(MP_QSTR_set_point_id, (const byte*)"\xe6\x07\x0c" "set_point_id")
QDEF(MP_QSTR_set_series_axis, (const byte*)"\x7f\xf0\x0f" "set_series_axis")
QDEF(MP_QSTR_set_cursor_point, (const byte*)"\xe1\x99\x10" "set_cursor_point")
QDEF(MP_QSTR_get_point_count, (const byte*)"\x3c\x6b\x0f" "get_point_count")
QDEF(MP_QSTR_get_x_start_point, (const byte*)"\x58\x50\x11" "get_x_start_point")
QDEF(MP_QSTR_get_series_axis, (const byte*)"\x6b\xfa\x0f" "get_series_axis")
QDEF(MP_QSTR_get_series_area, (const byte*)"\xff\x34\x0f" "get_series_area")
QDEF(MP_QSTR_get_cursor_point, (const byte*)"\x75\xbf\x10" "get_cursor_point")
QDEF(MP_QSTR_get_nearest_index_from_coord, (const byte*)"\xf4\xdc\x1c" "get_nearest_index_from_coord")
QDEF(MP_QSTR_get_x_from_index, (const byte*)"\x3c\xc5\x10" "get_x_from_index")
QDEF(MP_QSTR_get_y_from_index, (const byte*)"\x1d\x19\x10" "get_y_from_index")
QDEF(MP_QSTR_TYPE, (const byte*)"\x5d\xa0\x04" "TYPE")
QDEF(MP_QSTR_UPDATE_MODE, (const byte*)"\x08\xe6\x0b" "UPDATE_MODE")
QDEF(MP_QSTR_AXIS, (const byte*)"\xc6\xf8\x04" "AXIS")
QDEF(MP_QSTR_chart, (const byte*)"\x09\xc2\x05" "chart")
QDEF(MP_QSTR_set_cell_value, (const byte*)"\x6a\x7c\x0e" "set_cell_value")
QDEF(MP_QSTR_set_row_cnt, (const byte*)"\x54\x3e\x0b" "set_row_cnt")
QDEF(MP_QSTR_set_col_cnt, (const byte*)"\x9e\xce\x0b" "set_col_cnt")
QDEF(MP_QSTR_set_col_width, (const byte*)"\xa1\x7e\x0d" "set_col_width")
QDEF(MP_QSTR_set_cell_align, (const byte*)"\xcc\x64\x0e" "set_cell_align")
QDEF(MP_QSTR_set_cell_type, (const byte*)"\xf9\x9d\x0d" "set_cell_type")
QDEF(MP_QSTR_set_cell_crop, (const byte*)"\x6f\x8c\x0d" "set_cell_crop")
QDEF(MP_QSTR_set_cell_merge_right, (const byte*)"\x86\x55\x14" "set_cell_merge_right")
QDEF(MP_QSTR_get_cell_value, (const byte*)"\xfe\xed\x0e" "get_cell_value")
QDEF(MP_QSTR_get_row_cnt, (const byte*)"\x40\x72\x0b" "get_row_cnt")
QDEF(MP_QSTR_get_col_cnt, (const byte*)"\x8a\x7a\x0b" "get_col_cnt")
QDEF(MP_QSTR_get_col_width, (const byte*)"\xb5\xb3\x0d" "get_col_width")
QDEF(MP_QSTR_get_cell_align, (const byte*)"\x58\x23\x0e" "get_cell_align")
QDEF(MP_QSTR_get_cell_type, (const byte*)"\xed\x90\x0d" "get_cell_type")
QDEF(MP_QSTR_get_cell_crop, (const byte*)"\x7b\x61\x0d" "get_cell_crop")
QDEF(MP_QSTR_get_cell_merge_right, (const byte*)"\x12\x74\x14" "get_cell_merge_right")
QDEF(MP_QSTR_get_pressed_cell, (const byte*)"\xd3\x86\x10" "get_pressed_cell")
QDEF(MP_QSTR_table, (const byte*)"\x7b\xac\x05" "table")
QDEF(MP_QSTR_is_checked, (const byte*)"\xa7\xcd\x0a" "is_checked")
QDEF(MP_QSTR_is_inactive, (const byte*)"\x0b\x01\x0b" "is_inactive")
QDEF(MP_QSTR_set_checked, (const byte*)"\xbf\xf9\x0b" "set_checked")
QDEF(MP_QSTR_set_disabled, (const byte*)"\x88\x9e\x0c" "set_disabled")
QDEF(MP_QSTR_checkbox, (const byte*)"\x56\x1e\x08" "checkbox")
QDEF(MP_QSTR_s, (const byte*)"\xd6\xb5\x01" "s")
QDEF(MP_QSTR_lv_color_hsv_t, (const byte*)"\xa4\x6d\x0e" "lv_color_hsv_t")
QDEF(MP_QSTR_set_hue, (const byte*)"\x80\x8d\x07" "set_hue")
QDEF(MP_QSTR_set_value, (const byte*)"\xb3\xf8\x09" "set_value")
QDEF(MP_QSTR_set_hsv, (const byte*)"\xd5\x8d\x07" "set_hsv")
QDEF(MP_QSTR_set_color, (const byte*)"\x25\x77\x09" "set_color")
QDEF(MP_QSTR_set_color_mode, (const byte*)"\x79\xf8\x0e" "set_color_mode")
QDEF(MP_QSTR_set_color_mode_fixed, (const byte*)"\x70\x5a\x14" "set_color_mode_fixed")
QDEF(MP_QSTR_set_knob_colored, (const byte*)"\xf3\x28\x10" "set_knob_colored")
QDEF(MP_QSTR_get_color_mode, (const byte*)"\xed\x45\x0e" "get_color_mode")
QDEF(MP_QSTR_get_color_mode_fixed, (const byte*)"\xe4\xf8\x14" "get_color_mode_fixed")
QDEF(MP_QSTR_get_hue, (const byte*)"\x94\x39\x07" "get_hue")
QDEF(MP_QSTR_get_saturation, (const byte*)"\x10\x00\x0e" "get_saturation")
QDEF(MP_QSTR_get_value, (const byte*)"\xa7\x17\x09" "get_value")
QDEF(MP_QSTR_get_hsv, (const byte*)"\xc1\x3a\x07" "get_hsv")
QDEF(MP_QSTR_get_color, (const byte*)"\x31\xeb\x09" "get_color")
QDEF(MP_QSTR_get_knob_colored, (const byte*)"\x67\x53\x10" "get_knob_colored")
QDEF(MP_QSTR_COLOR_MODE, (const byte*)"\xc4\x2f\x0a" "COLOR_MODE")
QDEF(MP_QSTR_cpicker, (const byte*)"\xc0\x7a\x07" "cpicker")
QDEF(MP_QSTR_set_start_value, (const byte*)"\x6c\x3f\x0f" "set_start_value")
QDEF(MP_QSTR_set_range, (const byte*)"\x67\xbe\x09" "set_range")
QDEF(MP_QSTR_get_start_value, (const byte*)"\x78\xe7\x0f" "get_start_value")
QDEF(MP_QSTR_get_min_value, (const byte*)"\x92\xd1\x0d" "get_min_value")
QDEF(MP_QSTR_get_max_value, (const byte*)"\x0c\xdb\x0d" "get_max_value")
QDEF(MP_QSTR_bar, (const byte*)"\xf4\x47\x03" "bar")
QDEF(MP_QSTR_set_left_value, (const byte*)"\x57\x94\x0e" "set_left_value")
QDEF(MP_QSTR_get_left_value, (const byte*)"\xc3\x4e\x0e" "get_left_value")
QDEF(MP_QSTR_is_dragged, (const byte*)"\x76\x89\x0a" "is_dragged")
QDEF(MP_QSTR_slider, (const byte*)"\x60\xb0\x06" "slider")
QDEF(MP_QSTR_set_bright, (const byte*)"\xfa\x2a\x0a" "set_bright")
QDEF(MP_QSTR_get_bright, (const byte*)"\x6e\x8d\x0a" "get_bright")
QDEF(MP_QSTR_set_map, (const byte*)"\x44\x9c\x07" "set_map")
QDEF(MP_QSTR_set_ctrl_map, (const byte*)"\xd2\xa4\x0c" "set_ctrl_map")
QDEF(MP_QSTR_set_focused_btn, (const byte*)"\x52\xf1\x0f" "set_focused_btn")
QDEF(MP_QSTR_set_btn_ctrl, (const byte*)"\x16\x83\x0c" "set_btn_ctrl")
QDEF(MP_QSTR_clear_btn_ctrl, (const byte*)"\xed\x2f\x0e" "clear_btn_ctrl")
QDEF(MP_QSTR_set_btn_ctrl_all, (const byte*)"\x48\x64\x10" "set_btn_ctrl_all")
QDEF(MP_QSTR_clear_btn_ctrl_all, (const byte*)"\xf3\xce\x12" "clear_btn_ctrl_all")
QDEF(MP_QSTR_set_btn_width, (const byte*)"\x19\xe3\x0d" "set_btn_width")
QDEF(MP_QSTR_set_one_check, (const byte*)"\xc5\x82\x0d" "set_one_check")
QDEF(MP_QSTR_get_map_array, (const byte*)"\xb6\x3f\x0d" "get_map_array")
QDEF(MP_QSTR_get_active_btn, (const byte*)"\x67\x2e\x0e" "get_active_btn")
QDEF(MP_QSTR_get_active_btn_text, (const byte*)"\x85\x36\x13" "get_active_btn_text")
QDEF(MP_QSTR_get_focused_btn, (const byte*)"\x46\xf5\x0f" "get_focused_btn")
QDEF(MP_QSTR_get_btn_ctrl, (const byte*)"\x82\xad\x0c" "get_btn_ctrl")
QDEF(MP_QSTR_get_one_check, (const byte*)"\xd1\x82\x0d" "get_one_check")
QDEF(MP_QSTR_CTRL, (const byte*)"\x2c\xfd\x04" "CTRL")
QDEF(MP_QSTR_btnmatrix, (const byte*)"\x86\x08\x09" "btnmatrix")
QDEF(MP_QSTR_set_textarea, (const byte*)"\x52\x42\x0c" "set_textarea")
QDEF(MP_QSTR_set_mode, (const byte*)"\x3b\x30\x08" "set_mode")
QDEF(MP_QSTR_set_cursor_manage, (const byte*)"\x8c\x4e\x11" "set_cursor_manage")
QDEF(MP_QSTR_get_textarea, (const byte*)"\xc6\x2f\x0c" "get_textarea")
QDEF(MP_QSTR_get_mode, (const byte*)"\xaf\xb5\x08" "get_mode")
QDEF(MP_QSTR_get_cursor_manage, (const byte*)"\x98\x76\x11" "get_cursor_manage")
QDEF(MP_QSTR_def_event_cb, (const byte*)"\x6f\x74\x0c" "def_event_cb")
QDEF(MP_QSTR_MODE, (const byte*)"\x66\xc0\x04" "MODE")
QDEF(MP_QSTR_keyboard, (const byte*)"\x68\x5e\x08" "keyboard")
QDEF(MP_QSTR_clear_options, (const byte*)"\x13\x28\x0d" "clear_options")
QDEF(MP_QSTR_set_options, (const byte*)"\x88\xf6\x0b" "set_options")
QDEF(MP_QSTR_set_options_static, (const byte*)"\x2f\x85\x12" "set_options_static")
QDEF(MP_QSTR_add_option, (const byte*)"\x58\xcd\x0a" "add_option")
QDEF(MP_QSTR_set_selected, (const byte*)"\x31\xbd\x0c" "set_selected")
QDEF(MP_QSTR_set_dir, (const byte*)"\x07\xc1\x07" "set_dir")
QDEF(MP_QSTR_set_max_height, (const byte*)"\x6c\xf6\x0e" "set_max_height")
QDEF(MP_QSTR_set_symbol, (const byte*)"\xbe\x2c\x0a" "set_symbol")
QDEF(MP_QSTR_set_show_selected, (const byte*)"\x4d\x0f\x11" "set_show_selected")
QDEF(MP_QSTR_get_options, (const byte*)"\x9c\xba\x0b" "get_options")
QDEF(MP_QSTR_get_selected, (const byte*)"\xa5\xee\x0c" "get_selected")
QDEF(MP_QSTR_get_option_cnt, (const byte*)"\x89\x96\x0e" "get_option_cnt")
QDEF(MP_QSTR_get_selected_str, (const byte*)"\xaf\x52\x10" "get_selected_str")
QDEF(MP_QSTR_get_max_height, (const byte*)"\xf8\x43\x0e" "get_max_height")
QDEF(MP_QSTR_get_symbol, (const byte*)"\x2a\x43\x0a" "get_symbol")
QDEF(MP_QSTR_get_dir, (const byte*)"\x13\x48\x07" "get_dir")
QDEF(MP_QSTR_get_show_selected, (const byte*)"\x59\x2c\x11" "get_show_selected")
QDEF(MP_QSTR_DIR, (const byte*)"\x1a\xbb\x03" "DIR")
QDEF(MP_QSTR_dropdown, (const byte*)"\xde\xa4\x08" "dropdown")
QDEF(MP_QSTR_set_visible_row_count, (const byte*)"\xbf\x48\x15" "set_visible_row_count")
QDEF(MP_QSTR_set_auto_fit, (const byte*)"\x93\x0c\x0c" "set_auto_fit")
QDEF(MP_QSTR_get_auto_fit, (const byte*)"\x07\x5a\x0c" "get_auto_fit")
QDEF(MP_QSTR_roller, (const byte*)"\xaf\xf4\x06" "roller")
QDEF(MP_QSTR_add_char, (const byte*)"\xc3\x70\x08" "add_char")
QDEF(MP_QSTR_del_char, (const byte*)"\x6f\x44\x08" "del_char")
QDEF(MP_QSTR_del_char_forward, (const byte*)"\xab\x70\x10" "del_char_forward")
QDEF(MP_QSTR_set_placeholder_text, (const byte*)"\x19\x4d\x14" "set_placeholder_text")
QDEF(MP_QSTR_set_cursor_pos, (const byte*)"\x21\xd3\x0e" "set_cursor_pos")
QDEF(MP_QSTR_set_cursor_hidden, (const byte*)"\xe7\xcb\x11" "set_cursor_hidden")
QDEF(MP_QSTR_set_cursor_click_pos, (const byte*)"\xd0\x8c\x14" "set_cursor_click_pos")
QDEF(MP_QSTR_set_pwd_mode, (const byte*)"\xc7\x6e\x0c" "set_pwd_mode")
QDEF(MP_QSTR_set_one_line, (const byte*)"\x6d\xcd\x0c" "set_one_line")
QDEF(MP_QSTR_set_text_align, (const byte*)"\x37\xef\x0e" "set_text_align")
QDEF(MP_QSTR_set_accepted_chars, (const byte*)"\xed\xa6\x12" "set_accepted_chars")
QDEF(MP_QSTR_set_max_length, (const byte*)"\x4f\x78\x0e" "set_max_length")
QDEF(MP_QSTR_set_insert_replace, (const byte*)"\x1c\x85\x12" "set_insert_replace")
QDEF(MP_QSTR_set_text_sel, (const byte*)"\xa0\x19\x0c" "set_text_sel")
QDEF(MP_QSTR_set_pwd_show_time, (const byte*)"\x2d\x47\x11" "set_pwd_show_time")
QDEF(MP_QSTR_set_cursor_blink_time, (const byte*)"\xc5\x97\x15" "set_cursor_blink_time")
QDEF(MP_QSTR_get_placeholder_text, (const byte*)"\x8d\x4a\x14" "get_placeholder_text")
QDEF(MP_QSTR_get_label, (const byte*)"\xaa\xe7\x09" "get_label")
QDEF(MP_QSTR_get_cursor_pos, (const byte*)"\xb5\xcc\x0e" "get_cursor_pos")
QDEF(MP_QSTR_get_cursor_hidden, (const byte*)"\xf3\x52\x11" "get_cursor_hidden")
QDEF(MP_QSTR_get_cursor_click_pos, (const byte*)"\x44\x87\x14" "get_cursor_click_pos")
QDEF(MP_QSTR_get_pwd_mode, (const byte*)"\x53\xc1\x0c" "get_pwd_mode")
QDEF(MP_QSTR_get_one_line, (const byte*)"\xf9\x9a\x0c" "get_one_line")
QDEF(MP_QSTR_get_accepted_chars, (const byte*)"\x79\x3b\x12" "get_accepted_chars")
QDEF(MP_QSTR_get_max_length, (const byte*)"\xdb\xa8\x0e" "get_max_length")
QDEF(MP_QSTR_text_is_selected, (const byte*)"\xab\x25\x10" "text_is_selected")
QDEF(MP_QSTR_get_text_sel_en, (const byte*)"\x80\xd5\x0f" "get_text_sel_en")
QDEF(MP_QSTR_get_pwd_show_time, (const byte*)"\x39\x02\x11" "get_pwd_show_time")
QDEF(MP_QSTR_get_cursor_blink_time, (const byte*)"\xd1\x02\x15" "get_cursor_blink_time")
QDEF(MP_QSTR_clear_selection, (const byte*)"\x83\x9e\x0f" "clear_selection")
QDEF(MP_QSTR_cursor_right, (const byte*)"\x70\x56\x0c" "cursor_right")
QDEF(MP_QSTR_cursor_left, (const byte*)"\xab\xd5\x0b" "cursor_left")
QDEF(MP_QSTR_cursor_down, (const byte*)"\x42\x8a\x0b" "cursor_down")
QDEF(MP_QSTR_cursor_up, (const byte*)"\x55\x43\x09" "cursor_up")
QDEF(MP_QSTR_textarea, (const byte*)"\x0f\x45\x08" "textarea")
QDEF(MP_QSTR_set_buffer, (const byte*)"\x78\x0c\x0a" "set_buffer")
QDEF(MP_QSTR_set_px, (const byte*)"\x50\xe4\x06" "set_px")
QDEF(MP_QSTR_set_palette, (const byte*)"\x25\x04\x0b" "set_palette")
QDEF(MP_QSTR_get_px, (const byte*)"\xc4\x42\x06" "get_px")
QDEF(MP_QSTR_get_img, (const byte*)"\xcf\x34\x07" "get_img")
QDEF(MP_QSTR_copy_buf, (const byte*)"\x8e\x4c\x08" "copy_buf")
QDEF(MP_QSTR_transform, (const byte*)"\x49\x73\x09" "transform")
QDEF(MP_QSTR_blur_hor, (const byte*)"\x46\x1e\x08" "blur_hor")
QDEF(MP_QSTR_blur_ver, (const byte*)"\x12\xd1\x08" "blur_ver")
QDEF(MP_QSTR_fill_bg, (const byte*)"\x10\xab\x07" "fill_bg")
QDEF(MP_QSTR_draw_rect, (const byte*)"\x3a\xe9\x09" "draw_rect")
QDEF(MP_QSTR_draw_text, (const byte*)"\x87\xf1\x09" "draw_text")
QDEF(MP_QSTR_draw_img, (const byte*)"\xd9\x2f\x08" "draw_img")
QDEF(MP_QSTR_draw_polygon, (const byte*)"\xd6\x0f\x0c" "draw_polygon")
QDEF(MP_QSTR_draw_arc, (const byte*)"\x6a\x4e\x08" "draw_arc")
QDEF(MP_QSTR_canvas, (const byte*)"\xcd\xf8\x06" "canvas")
QDEF(MP_QSTR_add_btn_right, (const byte*)"\xbc\x85\x0d" "add_btn_right")
QDEF(MP_QSTR_add_btn_left, (const byte*)"\xe7\x18\x0c" "add_btn_left")
QDEF(MP_QSTR_close_event_cb, (const byte*)"\xde\xd9\x0e" "close_event_cb")
QDEF(MP_QSTR_set_title, (const byte*)"\x98\x0a\x09" "set_title")
QDEF(MP_QSTR_set_header_height, (const byte*)"\x07\x40\x11" "set_header_height")
QDEF(MP_QSTR_set_content_size, (const byte*)"\x0b\xb2\x10" "set_content_size")
QDEF(MP_QSTR_title_set_alignment, (const byte*)"\x58\xf2\x13" "title_set_alignment")
QDEF(MP_QSTR_get_title, (const byte*)"\x8c\xa5\x09" "get_title")
QDEF(MP_QSTR_get_content, (const byte*)"\x45\xbb\x0b" "get_content")
QDEF(MP_QSTR_get_header_height, (const byte*)"\x13\x08\x11" "get_header_height")
QDEF(MP_QSTR_get_btn_width, (const byte*)"\x0d\xa4\x0d" "get_btn_width")
QDEF(MP_QSTR_get_from_btn, (const byte*)"\x3d\x31\x0c" "get_from_btn")
QDEF(MP_QSTR_get_sb_mode, (const byte*)"\x21\x86\x0b" "get_sb_mode")
QDEF(MP_QSTR_title_get_alignment, (const byte*)"\x4c\x46\x13" "title_get_alignment")
QDEF(MP_QSTR_win, (const byte*)"\xb5\x7f\x03" "win")
QDEF(MP_QSTR_add_tab, (const byte*)"\xac\x60\x07" "add_tab")
QDEF(MP_QSTR_clean_tab, (const byte*)"\x88\xf6\x09" "clean_tab")
QDEF(MP_QSTR_set_tab_act, (const byte*)"\xa6\xe1\x0b" "set_tab_act")
QDEF(MP_QSTR_set_tab_name, (const byte*)"\x97\x67\x0c" "set_tab_name")
QDEF(MP_QSTR_set_btns_pos, (const byte*)"\xa0\x45\x0c" "set_btns_pos")
QDEF(MP_QSTR_get_tab_act, (const byte*)"\xb2\x6d\x0b" "get_tab_act")
QDEF(MP_QSTR_get_tab_count, (const byte*)"\xe7\x24\x0d" "get_tab_count")
QDEF(MP_QSTR_get_tab, (const byte*)"\x1b\x8d\x07" "get_tab")
QDEF(MP_QSTR_get_btns_pos, (const byte*)"\x34\x30\x0c" "get_btns_pos")
QDEF(MP_QSTR_TAB_POS, (const byte*)"\x41\x3c\x07" "TAB_POS")
QDEF(MP_QSTR_tabview, (const byte*)"\x5f\x83\x07" "tabview")
QDEF(MP_QSTR_add_element, (const byte*)"\x65\xf3\x0b" "add_element")
QDEF(MP_QSTR_set_valid_positions, (const byte*)"\xdb\xfc\x13" "set_valid_positions")
QDEF(MP_QSTR_set_tile_act, (const byte*)"\xa5\x81\x0c" "set_tile_act")
QDEF(MP_QSTR_get_tile_act, (const byte*)"\x31\x30\x0c" "get_tile_act")
QDEF(MP_QSTR_tileview, (const byte*)"\xbc\xa3\x08" "tileview")
QDEF(MP_QSTR_add_btns, (const byte*)"\x10\xda\x08" "add_btns")
QDEF(MP_QSTR_start_auto_close, (const byte*)"\xbc\x35\x10" "start_auto_close")
QDEF(MP_QSTR_stop_auto_close, (const byte*)"\xa4\x39\x0f" "stop_auto_close")
QDEF(MP_QSTR_get_btnmatrix, (const byte*)"\x6f\xa0\x0d" "get_btnmatrix")
QDEF(MP_QSTR_msgbox, (const byte*)"\x29\xef\x06" "msgbox")
QDEF(MP_QSTR_param, (const byte*)"\xca\xc8\x05" "param")
QDEF(MP_QSTR_lv_objmask_mask_t, (const byte*)"\xb3\x81\x11" "lv_objmask_mask_t")
QDEF(MP_QSTR_add_mask, (const byte*)"\x8f\x73\x08" "add_mask")
QDEF(MP_QSTR_update_mask, (const byte*)"\x7f\x22\x0b" "update_mask")
QDEF(MP_QSTR_remove_mask, (const byte*)"\x88\xe6\x0b" "remove_mask")
QDEF(MP_QSTR_objmask, (const byte*)"\x96\xbb\x07" "objmask")
QDEF(MP_QSTR_set_scale, (const byte*)"\x00\x0b\x09" "set_scale")
QDEF(MP_QSTR_set_angle_offset, (const byte*)"\x0b\x12\x10" "set_angle_offset")
QDEF(MP_QSTR_set_mirror, (const byte*)"\x81\x08\x0a" "set_mirror")
QDEF(MP_QSTR_get_line_count, (const byte*)"\x3e\x24\x0e" "get_line_count")
QDEF(MP_QSTR_get_scale_angle, (const byte*)"\x8a\xf3\x0f" "get_scale_angle")
QDEF(MP_QSTR_get_angle_offset, (const byte*)"\x9f\x18\x10" "get_angle_offset")
QDEF(MP_QSTR_draw_scale, (const byte*)"\x82\xd4\x0a" "draw_scale")
QDEF(MP_QSTR_get_mirror, (const byte*)"\x15\x3d\x0a" "get_mirror")
QDEF(MP_QSTR_linemeter, (const byte*)"\x40\x41\x09" "linemeter")
QDEF(MP_QSTR_lv_obj_t_format_cb, (const byte*)"\x4e\xaa\x12" "lv_obj_t_format_cb")
QDEF(MP_QSTR_set_critical_value, (const byte*)"\x07\xb4\x12" "set_critical_value")
QDEF(MP_QSTR_get_critical_value, (const byte*)"\x93\x86\x12" "get_critical_value")
QDEF(MP_QSTR_set_needle_count, (const byte*)"\xc7\x23\x10" "set_needle_count")
QDEF(MP_QSTR_set_needle_img, (const byte*)"\x47\x4d\x0e" "set_needle_img")
QDEF(MP_QSTR_set_formatter_cb, (const byte*)"\x26\xc8\x10" "set_formatter_cb")
QDEF(MP_QSTR_get_needle_count, (const byte*)"\x53\xa5\x10" "get_needle_count")
QDEF(MP_QSTR_get_label_count, (const byte*)"\x16\x6a\x0f" "get_label_count")
QDEF(MP_QSTR_get_needle_img, (const byte*)"\xd3\xc2\x0e" "get_needle_img")
QDEF(MP_QSTR_get_needle_img_pivot_x, (const byte*)"\x9f\xfa\x16" "get_needle_img_pivot_x")
QDEF(MP_QSTR_get_needle_img_pivot_y, (const byte*)"\x9e\xfa\x16" "get_needle_img_pivot_y")
QDEF(MP_QSTR_gauge, (const byte*)"\x54\xb3\x05" "gauge")
QDEF(MP_QSTR_switch, (const byte*)"\xb7\x3d\x06" "switch")
QDEF(MP_QSTR_set_start_angle, (const byte*)"\x26\xba\x0f" "set_start_angle")
QDEF(MP_QSTR_set_end_angle, (const byte*)"\x29\x65\x0d" "set_end_angle")
QDEF(MP_QSTR_set_angles, (const byte*)"\x6a\x9e\x0a" "set_angles")
QDEF(MP_QSTR_set_bg_start_angle, (const byte*)"\x1c\x92\x12" "set_bg_start_angle")
QDEF(MP_QSTR_set_bg_end_angle, (const byte*)"\x93\x27\x10" "set_bg_end_angle")
QDEF(MP_QSTR_set_bg_angles, (const byte*)"\x90\x5d\x0d" "set_bg_angles")
QDEF(MP_QSTR_set_rotation, (const byte*)"\x6c\x67\x0c" "set_rotation")
QDEF(MP_QSTR_set_chg_rate, (const byte*)"\xa9\x00\x0c" "set_chg_rate")
QDEF(MP_QSTR_set_adjustable, (const byte*)"\xaf\x99\x0e" "set_adjustable")
QDEF(MP_QSTR_get_angle_start, (const byte*)"\xb2\x95\x0f" "get_angle_start")
QDEF(MP_QSTR_get_angle_end, (const byte*)"\x3d\x61\x0d" "get_angle_end")
QDEF(MP_QSTR_get_bg_angle_start, (const byte*)"\x88\x96\x12" "get_bg_angle_start")
QDEF(MP_QSTR_get_bg_angle_end, (const byte*)"\x07\xb1\x10" "get_bg_angle_end")
QDEF(MP_QSTR_get_adjustable, (const byte*)"\x3b\x57\x0e" "get_adjustable")
QDEF(MP_QSTR_arc, (const byte*)"\x95\x34\x03" "arc")
QDEF(MP_QSTR_set_arc_length, (const byte*)"\x6b\x0c\x0e" "set_arc_length")
QDEF(MP_QSTR_set_spin_time, (const byte*)"\xb6\xab\x0d" "set_spin_time")
QDEF(MP_QSTR_get_arc_length, (const byte*)"\xff\x03\x0e" "get_arc_length")
QDEF(MP_QSTR_get_spin_time, (const byte*)"\xa2\x60\x0d" "get_spin_time")
QDEF(MP_QSTR_anim_cb, (const byte*)"\x70\x61\x07" "anim_cb")
QDEF(MP_QSTR_spinner, (const byte*)"\x38\x52\x07" "spinner")
QDEF(MP_QSTR_lv_calendar_date_t, (const byte*)"\xb2\xb7\x12" "lv_calendar_date_t")
QDEF(MP_QSTR_set_today_date, (const byte*)"\x14\xa6\x0e" "set_today_date")
QDEF(MP_QSTR_set_showed_date, (const byte*)"\xf1\x05\x0f" "set_showed_date")
QDEF(MP_QSTR_set_highlighted_dates, (const byte*)"\x11\xcd\x15" "set_highlighted_dates")
QDEF(MP_QSTR_set_day_names, (const byte*)"\x0f\x0a\x0d" "set_day_names")
QDEF(MP_QSTR_set_month_names, (const byte*)"\x03\x72\x0f" "set_month_names")
QDEF(MP_QSTR_get_today_date, (const byte*)"\x80\x0a\x0e" "get_today_date")
QDEF(MP_QSTR_get_showed_date, (const byte*)"\xe5\x96\x0f" "get_showed_date")
QDEF(MP_QSTR_get_pressed_date, (const byte*)"\x61\xce\x10" "get_pressed_date")
QDEF(MP_QSTR_get_highlighted_dates, (const byte*)"\x05\xfe\x15" "get_highlighted_dates")
QDEF(MP_QSTR_get_highlighted_dates_num, (const byte*)"\xac\x7c\x19" "get_highlighted_dates_num")
QDEF(MP_QSTR_get_day_names, (const byte*)"\x1b\x38\x0d" "get_day_names")
QDEF(MP_QSTR_get_month_names, (const byte*)"\x17\xb3\x0f" "get_month_names")
QDEF(MP_QSTR_get_day_of_week, (const byte*)"\xa5\x10\x0f" "get_day_of_week")
QDEF(MP_QSTR_calendar, (const byte*)"\x17\x34\x08" "calendar")
QDEF(MP_QSTR_set_rollover, (const byte*)"\x4b\x5a\x0c" "set_rollover")
QDEF(MP_QSTR_set_digit_format, (const byte*)"\x73\x5b\x10" "set_digit_format")
QDEF(MP_QSTR_set_step, (const byte*)"\x8a\x1b\x08" "set_step")
QDEF(MP_QSTR_set_padding_left, (const byte*)"\xed\x1f\x10" "set_padding_left")
QDEF(MP_QSTR_get_rollover, (const byte*)"\xdf\xac\x0c" "get_rollover")
QDEF(MP_QSTR_step_next, (const byte*)"\xaf\x32\x09" "step_next")
QDEF(MP_QSTR_step_prev, (const byte*)"\xd9\xf8\x09" "step_prev")
QDEF(MP_QSTR_increment, (const byte*)"\xe4\xf1\x09" "increment")
QDEF(MP_QSTR_decrement, (const byte*)"\x42\xb5\x09" "decrement")
QDEF(MP_QSTR_spinbox, (const byte*)"\x74\x21\x07" "spinbox")
QDEF(MP_QSTR_total_size, (const byte*)"\x9d\xe1\x0a" "total_size")
QDEF(MP_QSTR_free_cnt, (const byte*)"\xb7\x5d\x08" "free_cnt")
QDEF(MP_QSTR_free_size, (const byte*)"\x2b\xd3\x09" "free_size")
QDEF(MP_QSTR_free_biggest_size, (const byte*)"\x1d\x1d\x11" "free_biggest_size")
QDEF(MP_QSTR_used_cnt, (const byte*)"\xc4\x0e\x08" "used_cnt")
QDEF(MP_QSTR_max_used, (const byte*)"\x49\xa1\x08" "max_used")
QDEF(MP_QSTR_used_pct, (const byte*)"\xfa\xd0\x08" "used_pct")
QDEF(MP_QSTR_frag_pct, (const byte*)"\x0f\x1c\x08" "frag_pct")
QDEF(MP_QSTR_lv_mem_monitor_t, (const byte*)"\xdd\x1f\x10" "lv_mem_monitor_t")
QDEF(MP_QSTR_btn_id, (const byte*)"\x8f\x19\x06" "btn_id")
QDEF(MP_QSTR_enc_diff, (const byte*)"\x3f\x25\x08" "enc_diff")
QDEF(MP_QSTR_lv_indev_data_t, (const byte*)"\x74\x63\x0f" "lv_indev_data_t")
QDEF(MP_QSTR_read_cb, (const byte*)"\x69\x7f\x07" "read_cb")
QDEF(MP_QSTR_lv_indev_drv_t_read_cb, (const byte*)"\xd7\x5b\x16" "lv_indev_drv_t_read_cb")
QDEF(MP_QSTR_feedback_cb, (const byte*)"\xb2\x68\x0b" "feedback_cb")
QDEF(MP_QSTR_lv_indev_drv_t_feedback_cb, (const byte*)"\x8c\xa8\x1a" "lv_indev_drv_t_feedback_cb")
QDEF(MP_QSTR_disp, (const byte*)"\x2b\xfe\x04" "disp")
QDEF(MP_QSTR_read_task, (const byte*)"\x25\x3e\x09" "read_task")
QDEF(MP_QSTR_drag_limit, (const byte*)"\xff\xe4\x0a" "drag_limit")
QDEF(MP_QSTR_drag_throw, (const byte*)"\x5c\xe1\x0a" "drag_throw")
QDEF(MP_QSTR_gesture_min_velocity, (const byte*)"\xdf\x5e\x14" "gesture_min_velocity")
QDEF(MP_QSTR_gesture_limit, (const byte*)"\x28\x6d\x0d" "gesture_limit")
QDEF(MP_QSTR_long_press_time, (const byte*)"\x7d\x93\x0f" "long_press_time")
QDEF(MP_QSTR_long_press_rep_time, (const byte*)"\x45\xb2\x13" "long_press_rep_time")
QDEF(MP_QSTR_lv_indev_drv_t, (const byte*)"\x64\xb9\x0e" "lv_indev_drv_t")
QDEF(MP_QSTR_act_point, (const byte*)"\x40\x1e\x09" "act_point")
QDEF(MP_QSTR_last_point, (const byte*)"\x1c\x93\x0a" "last_point")
QDEF(MP_QSTR_vect, (const byte*)"\x61\xea\x04" "vect")
QDEF(MP_QSTR_drag_sum, (const byte*)"\xc1\x75\x08" "drag_sum")
QDEF(MP_QSTR_drag_throw_vect, (const byte*)"\xe7\x3f\x0f" "drag_throw_vect")
QDEF(MP_QSTR_act_obj, (const byte*)"\xab\x33\x07" "act_obj")
QDEF(MP_QSTR_last_obj, (const byte*)"\x77\xa7\x08" "last_obj")
QDEF(MP_QSTR_last_pressed, (const byte*)"\xf6\x26\x0c" "last_pressed")
QDEF(MP_QSTR_gesture_dir, (const byte*)"\x02\x6f\x0b" "gesture_dir")
QDEF(MP_QSTR_gesture_sum, (const byte*)"\x56\x3b\x0b" "gesture_sum")
QDEF(MP_QSTR_drag_limit_out, (const byte*)"\x8e\x09\x0e" "drag_limit_out")
QDEF(MP_QSTR_drag_in_prog, (const byte*)"\xf8\x64\x0c" "drag_in_prog")
QDEF(MP_QSTR_drag_dir, (const byte*)"\x15\x3f\x08" "drag_dir")
QDEF(MP_QSTR_gesture_sent, (const byte*)"\x91\x61\x0c" "gesture_sent")
QDEF(MP_QSTR_lv_indev_proc_types_pointer_t, (const byte*)"\x5a\x4f\x1d" "lv_indev_proc_types_pointer_t")
QDEF(MP_QSTR_last_state, (const byte*)"\x27\xa9\x0a" "last_state")
QDEF(MP_QSTR_last_key, (const byte*)"\xc7\x96\x08" "last_key")
QDEF(MP_QSTR_lv_indev_proc_types_keypad_t, (const byte*)"\xc3\x9e\x1c" "lv_indev_proc_types_keypad_t")
QDEF(MP_QSTR_pointer, (const byte*)"\x9e\x44\x07" "pointer")
QDEF(MP_QSTR_keypad, (const byte*)"\xe7\xd7\x06" "keypad")
QDEF(MP_QSTR_lv_indev_proc_types_t, (const byte*)"\xde\x9e\x15" "lv_indev_proc_types_t")
QDEF(MP_QSTR_types, (const byte*)"\x4e\x73\x05" "types")
QDEF(MP_QSTR_pr_timestamp, (const byte*)"\x36\x6e\x0c" "pr_timestamp")
QDEF(MP_QSTR_longpr_rep_timestamp, (const byte*)"\xc4\xb3\x14" "longpr_rep_timestamp")
QDEF(MP_QSTR_long_pr_sent, (const byte*)"\x81\xae\x0c" "long_pr_sent")
QDEF(MP_QSTR_reset_query, (const byte*)"\xe5\xf2\x0b" "reset_query")
QDEF(MP_QSTR_disabled, (const byte*)"\xd5\x48\x08" "disabled")
QDEF(MP_QSTR_wait_until_release, (const byte*)"\xcd\x96\x12" "wait_until_release")
QDEF(MP_QSTR_lv_indev_proc_t, (const byte*)"\x0a\xf6\x0f" "lv_indev_proc_t")
QDEF(MP_QSTR_obj_ll, (const byte*)"\x9d\x59\x06" "obj_ll")
QDEF(MP_QSTR_obj_focus, (const byte*)"\x51\x19\x09" "obj_focus")
QDEF(MP_QSTR_focus_cb, (const byte*)"\x57\xef\x08" "focus_cb")
QDEF(MP_QSTR_lv_group_t_focus_cb, (const byte*)"\x39\x0b\x13" "lv_group_t_focus_cb")
QDEF(MP_QSTR_frozen, (const byte*)"\x0f\xb8\x06" "frozen")
QDEF(MP_QSTR_editing, (const byte*)"\x19\xd0\x07" "editing")
QDEF(MP_QSTR_click_focus, (const byte*)"\xb8\x4f\x0b" "click_focus")
QDEF(MP_QSTR_refocus_policy, (const byte*)"\xc1\x89\x0e" "refocus_policy")
QDEF(MP_QSTR_wrap, (const byte*)"\x51\xfc\x04" "wrap")
QDEF(MP_QSTR_lv_group_t, (const byte*)"\xf4\xb2\x0a" "lv_group_t")
QDEF(MP_QSTR_proc, (const byte*)"\xeb\x81\x04" "proc")
QDEF(MP_QSTR_cursor, (const byte*)"\xcf\xfa\x06" "cursor")
QDEF(MP_QSTR_btn_points, (const byte*)"\x5d\x62\x0a" "btn_points")
QDEF(MP_QSTR_lv_indev_t, (const byte*)"\x3b\xe4\x0a" "lv_indev_t")
QDEF(MP_QSTR_lv_draw_mask_common_dsc_t_cb, (const byte*)"\xe7\x77\x1c" "lv_draw_mask_common_dsc_t_cb")
QDEF(MP_QSTR_lv_draw_mask_common_dsc_t, (const byte*)"\x79\x92\x19" "lv_draw_mask_common_dsc_t")
QDEF(MP_QSTR_p1, (const byte*)"\x44\x70\x02" "p1")
QDEF(MP_QSTR_p2, (const byte*)"\x47\x70\x02" "p2")
QDEF(MP_QSTR_side, (const byte*)"\x7e\xa8\x04" "side")
QDEF(MP_QSTR_lv_draw_mask_line_param_cfg_t, (const byte*)"\xfc\x0c\x1d" "lv_draw_mask_line_param_cfg_t")
QDEF(MP_QSTR_cfg, (const byte*)"\x87\x4a\x03" "cfg")
QDEF(MP_QSTR_origo, (const byte*)"\x79\x2b\x05" "origo")
QDEF(MP_QSTR_xy_steep, (const byte*)"\x6c\x0c\x08" "xy_steep")
QDEF(MP_QSTR_yx_steep, (const byte*)"\x4c\x94\x08" "yx_steep")
QDEF(MP_QSTR_steep, (const byte*)"\xf2\xfe\x05" "steep")
QDEF(MP_QSTR_spx, (const byte*)"\xde\x8d\x03" "spx")
QDEF(MP_QSTR_lv_draw_mask_line_param_t, (const byte*)"\x21\x24\x19" "lv_draw_mask_line_param_t")
QDEF(MP_QSTR_vertex_p, (const byte*)"\x62\x11\x08" "vertex_p")
QDEF(MP_QSTR_start_angle, (const byte*)"\x1b\xff\x0b" "start_angle")
QDEF(MP_QSTR_end_angle, (const byte*)"\x94\x85\x09" "end_angle")
QDEF(MP_QSTR_lv_draw_mask_angle_param_cfg_t, (const byte*)"\x53\x87\x1e" "lv_draw_mask_angle_param_cfg_t")
QDEF(MP_QSTR_start_line, (const byte*)"\xb4\xa0\x0a" "start_line")
QDEF(MP_QSTR_end_line, (const byte*)"\xdb\x93\x08" "end_line")
QDEF(MP_QSTR_delta_deg, (const byte*)"\xc4\x7c\x09" "delta_deg")
QDEF(MP_QSTR_lv_draw_mask_angle_param_t, (const byte*)"\xce\xcc\x1a" "lv_draw_mask_angle_param_t")
QDEF(MP_QSTR_outer, (const byte*)"\xdc\xe2\x05" "outer")
QDEF(MP_QSTR_lv_draw_mask_radius_param_cfg_t, (const byte*)"\x0a\x88\x1f" "lv_draw_mask_radius_param_cfg_t")
QDEF(MP_QSTR_i, (const byte*)"\xcc\xb5\x01" "i")
QDEF(MP_QSTR_lv_sqrt_res_t, (const byte*)"\xf4\xcd\x0d" "lv_sqrt_res_t")
QDEF(MP_QSTR_y_prev, (const byte*)"\xb2\x7b\x06" "y_prev")
QDEF(MP_QSTR_y_prev_x, (const byte*)"\x35\x27\x08" "y_prev_x")
QDEF(MP_QSTR_lv_draw_mask_radius_param_t, (const byte*)"\x97\x6b\x1b" "lv_draw_mask_radius_param_t")
QDEF(MP_QSTR_coords, (const byte*)"\xc3\x79\x06" "coords")
QDEF(MP_QSTR_y_top, (const byte*)"\xe8\x26\x05" "y_top")
QDEF(MP_QSTR_y_bottom, (const byte*)"\x6c\x41\x08" "y_bottom")
QDEF(MP_QSTR_opa_top, (const byte*)"\xaf\x78\x07" "opa_top")
QDEF(MP_QSTR_opa_bottom, (const byte*)"\x0b\x4d\x0a" "opa_bottom")
QDEF(MP_QSTR_lv_draw_mask_fade_param_cfg_t, (const byte*)"\xf4\x08\x1d" "lv_draw_mask_fade_param_cfg_t")
QDEF(MP_QSTR_lv_draw_mask_fade_param_t, (const byte*)"\x29\x5e\x19" "lv_draw_mask_fade_param_t")
QDEF(MP_QSTR_lv_draw_mask_map_param_cfg_t, (const byte*)"\x6e\x57\x1c" "lv_draw_mask_map_param_cfg_t")
QDEF(MP_QSTR_lv_draw_mask_map_param_t, (const byte*)"\xb3\x01\x18" "lv_draw_mask_map_param_t")
QDEF(MP_QSTR_letter, (const byte*)"\x7b\x4e\x06" "letter")
QDEF(MP_QSTR_file_size, (const byte*)"\x59\xa6\x09" "file_size")
QDEF(MP_QSTR_rddir_size, (const byte*)"\xd6\x7d\x0a" "rddir_size")
QDEF(MP_QSTR_lv_fs_drv_t_ready_cb, (const byte*)"\x0b\xaa\x14" "lv_fs_drv_t_ready_cb")
QDEF(MP_QSTR_lv_fs_drv_t_open_cb, (const byte*)"\x34\x99\x13" "lv_fs_drv_t_open_cb")
QDEF(MP_QSTR_lv_fs_drv_t_close_cb, (const byte*)"\xf6\x38\x14" "lv_fs_drv_t_close_cb")
QDEF(MP_QSTR_remove_cb, (const byte*)"\x3d\xfa\x09" "remove_cb")
QDEF(MP_QSTR_lv_fs_drv_t_remove_cb, (const byte*)"\xc6\x60\x15" "lv_fs_drv_t_remove_cb")
QDEF(MP_QSTR_lv_fs_drv_t_read_cb, (const byte*)"\x92\x05\x13" "lv_fs_drv_t_read_cb")
QDEF(MP_QSTR_write_cb, (const byte*)"\x26\xcd\x08" "write_cb")
QDEF(MP_QSTR_lv_fs_drv_t_write_cb, (const byte*)"\x3d\xb8\x14" "lv_fs_drv_t_write_cb")
QDEF(MP_QSTR_seek_cb, (const byte*)"\x83\x0d\x07" "seek_cb")
QDEF(MP_QSTR_lv_fs_drv_t_seek_cb, (const byte*)"\x78\x77\x13" "lv_fs_drv_t_seek_cb")
QDEF(MP_QSTR_tell_cb, (const byte*)"\x2a\xf6\x07" "tell_cb")
QDEF(MP_QSTR_lv_fs_drv_t_tell_cb, (const byte*)"\xd1\x6c\x13" "lv_fs_drv_t_tell_cb")
QDEF(MP_QSTR_trunc_cb, (const byte*)"\x85\x81\x08" "trunc_cb")
QDEF(MP_QSTR_lv_fs_drv_t_trunc_cb, (const byte*)"\x5e\x62\x14" "lv_fs_drv_t_trunc_cb")
QDEF(MP_QSTR_size_cb, (const byte*)"\xde\xa0\x07" "size_cb")
QDEF(MP_QSTR_lv_fs_drv_t_size_cb, (const byte*)"\x25\xa7\x13" "lv_fs_drv_t_size_cb")
QDEF(MP_QSTR_rename_cb, (const byte*)"\xab\xe4\x09" "rename_cb")
QDEF(MP_QSTR_lv_fs_drv_t_rename_cb, (const byte*)"\x50\x14\x15" "lv_fs_drv_t_rename_cb")
QDEF(MP_QSTR_free_space_cb, (const byte*)"\xf4\x3e\x0d" "free_space_cb")
QDEF(MP_QSTR_lv_fs_drv_t_free_space_cb, (const byte*)"\x0f\xc4\x19" "lv_fs_drv_t_free_space_cb")
QDEF(MP_QSTR_dir_open_cb, (const byte*)"\x2f\x21\x0b" "dir_open_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_open_cb, (const byte*)"\x94\xf1\x17" "lv_fs_drv_t_dir_open_cb")
QDEF(MP_QSTR_dir_read_cb, (const byte*)"\x49\x93\x0b" "dir_read_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_read_cb, (const byte*)"\x72\x5e\x17" "lv_fs_drv_t_dir_read_cb")
QDEF(MP_QSTR_dir_close_cb, (const byte*)"\x0d\xd7\x0c" "dir_close_cb")
QDEF(MP_QSTR_lv_fs_drv_t_dir_close_cb, (const byte*)"\x16\x77\x18" "lv_fs_drv_t_dir_close_cb")
QDEF(MP_QSTR_lv_fs_drv_t, (const byte*)"\xa1\xac\x0b" "lv_fs_drv_t")
QDEF(MP_QSTR_file_d, (const byte*)"\x98\x7c\x06" "file_d")
QDEF(MP_QSTR_drv, (const byte*)"\x85\x1f\x03" "drv")
QDEF(MP_QSTR_lv_fs_file_t, (const byte*)"\xc7\x3a\x0c" "lv_fs_file_t")
QDEF(MP_QSTR_dir_d, (const byte*)"\x61\xcb\x05" "dir_d")
QDEF(MP_QSTR_lv_fs_dir_t, (const byte*)"\x1e\xbe\x0b" "lv_fs_dir_t")
QDEF(MP_QSTR_apply_cb, (const byte*)"\x4f\x73\x08" "apply_cb")
QDEF(MP_QSTR_lv_theme_t_apply_cb, (const byte*)"\xef\x8d\x13" "lv_theme_t_apply_cb")
QDEF(MP_QSTR_apply_xcb, (const byte*)"\xb7\xfa\x09" "apply_xcb")
QDEF(MP_QSTR_lv_theme_t_apply_xcb, (const byte*)"\x17\x69\x14" "lv_theme_t_apply_xcb")
QDEF(MP_QSTR_color_primary, (const byte*)"\x6b\x91\x0d" "color_primary")
QDEF(MP_QSTR_color_secondary, (const byte*)"\xdd\xd8\x0f" "color_secondary")
QDEF(MP_QSTR_font_small, (const byte*)"\x36\xe3\x0a" "font_small")
QDEF(MP_QSTR_font_normal, (const byte*)"\x3a\xcd\x0b" "font_normal")
QDEF(MP_QSTR_font_subtitle, (const byte*)"\xcd\x08\x0d" "font_subtitle")
QDEF(MP_QSTR_font_title, (const byte*)"\xe9\x6a\x0a" "font_title")
QDEF(MP_QSTR_lv_theme_t, (const byte*)"\x7a\x1e\x0a" "lv_theme_t")
QDEF(MP_QSTR_cast_instance, (const byte*)"\x96\x98\x0d" "cast_instance")
QDEF(MP_QSTR_color_to1, (const byte*)"\xad\xd7\x09" "color_to1")
QDEF(MP_QSTR_color_to8, (const byte*)"\xa4\xd7\x09" "color_to8")
QDEF(MP_QSTR_color_to16, (const byte*)"\x7b\xcd\x0a" "color_to16")
QDEF(MP_QSTR_color_to32, (const byte*)"\xbd\xcd\x0a" "color_to32")
QDEF(MP_QSTR_color_mix, (const byte*)"\xfb\xb7\x09" "color_mix")
QDEF(MP_QSTR_color_premult, (const byte*)"\x20\xc4\x0d" "color_premult")
QDEF(MP_QSTR_color_mix_with_alpha, (const byte*)"\xad\x29\x14" "color_mix_with_alpha")
QDEF(MP_QSTR_color_brightness, (const byte*)"\x4e\xab\x10" "color_brightness")
QDEF(MP_QSTR_color_fill, (const byte*)"\xc8\xff\x0a" "color_fill")
QDEF(MP_QSTR_color_lighten, (const byte*)"\xd2\x3b\x0d" "color_lighten")
QDEF(MP_QSTR_color_darken, (const byte*)"\xf0\x5f\x0c" "color_darken")
QDEF(MP_QSTR_color_to_hsv, (const byte*)"\xae\x14\x0c" "color_to_hsv")
QDEF(MP_QSTR_get_line_height, (const byte*)"\x62\xe3\x0f" "get_line_height")
QDEF(MP_QSTR_get_glyph_width, (const byte*)"\x9f\x2a\x0f" "get_glyph_width")
QDEF(MP_QSTR_get_bitmap_fmt_txt, (const byte*)"\x08\xb1\x12" "get_bitmap_fmt_txt")
QDEF(MP_QSTR_get_glyph_dsc_fmt_txt, (const byte*)"\x2a\x00\x15" "get_glyph_dsc_fmt_txt")
QDEF(MP_QSTR_set_cb, (const byte*)"\xf9\xe6\x06" "set_cb")
QDEF(MP_QSTR_linear, (const byte*)"\xf8\x7f\x06" "linear")
QDEF(MP_QSTR_ease_in, (const byte*)"\x0f\x77\x07" "ease_in")
QDEF(MP_QSTR_ease_out, (const byte*)"\xe6\x82\x08" "ease_out")
QDEF(MP_QSTR_ease_in_out, (const byte*)"\x7e\xa4\x0b" "ease_in_out")
QDEF(MP_QSTR_overshoot, (const byte*)"\x24\x32\x09" "overshoot")
QDEF(MP_QSTR_bounce, (const byte*)"\x95\xe3\x06" "bounce")
QDEF(MP_QSTR_set_var, (const byte*)"\x1d\x76\x07" "set_var")
QDEF(MP_QSTR_set_custom_var, (const byte*)"\x51\xef\x0e" "set_custom_var")
QDEF(MP_QSTR_set_exec_cb, (const byte*)"\x9d\xea\x0b" "set_exec_cb")
QDEF(MP_QSTR_set_time, (const byte*)"\x6d\x1e\x08" "set_time")
QDEF(MP_QSTR_set_delay, (const byte*)"\xad\x7e\x09" "set_delay")
QDEF(MP_QSTR_set_values, (const byte*)"\x60\x0f\x0a" "set_values")
QDEF(MP_QSTR_set_custom_exec_cb, (const byte*)"\xd1\x85\x12" "set_custom_exec_cb")
QDEF(MP_QSTR_set_path, (const byte*)"\xd5\x10\x08" "set_path")
QDEF(MP_QSTR_set_start_cb, (const byte*)"\x06\x2e\x0c" "set_start_cb")
QDEF(MP_QSTR_set_ready_cb, (const byte*)"\xcd\xbd\x0c" "set_ready_cb")
QDEF(MP_QSTR_set_playback_time, (const byte*)"\x9d\x55\x11" "set_playback_time")
QDEF(MP_QSTR_set_playback_delay, (const byte*)"\x9d\xac\x12" "set_playback_delay")
QDEF(MP_QSTR_set_repeat_count, (const byte*)"\x13\xc3\x10" "set_repeat_count")
QDEF(MP_QSTR_set_repeat_delay, (const byte*)"\x65\xb3\x10" "set_repeat_delay")
QDEF(MP_QSTR_get_delay, (const byte*)"\xb9\xb1\x09" "get_delay")
QDEF(MP_QSTR_custom_del, (const byte*)"\x84\x0a\x0a" "custom_del")
QDEF(MP_QSTR_set_radius, (const byte*)"\xe0\xbd\x0a" "set_radius")
QDEF(MP_QSTR_set_clip_corner, (const byte*)"\xd6\xb1\x0f" "set_clip_corner")
QDEF(MP_QSTR_set_transform_width, (const byte*)"\x0d\xb0\x13" "set_transform_width")
QDEF(MP_QSTR_set_transform_height, (const byte*)"\x54\x3c\x14" "set_transform_height")
QDEF(MP_QSTR_set_transform_angle, (const byte*)"\xea\x8b\x13" "set_transform_angle")
QDEF(MP_QSTR_set_transform_zoom, (const byte*)"\x5c\xf3\x12" "set_transform_zoom")
QDEF(MP_QSTR_set_opa_scale, (const byte*)"\x41\xa2\x0d" "set_opa_scale")
QDEF(MP_QSTR_set_pad_top, (const byte*)"\xf9\x63\x0b" "set_pad_top")
QDEF(MP_QSTR_set_pad_bottom, (const byte*)"\x9d\xa2\x0e" "set_pad_bottom")
QDEF(MP_QSTR_set_pad_left, (const byte*)"\x29\xe0\x0c" "set_pad_left")
QDEF(MP_QSTR_set_pad_right, (const byte*)"\x32\x70\x0d" "set_pad_right")
QDEF(MP_QSTR_set_pad_inner, (const byte*)"\xac\xd9\x0d" "set_pad_inner")
QDEF(MP_QSTR_set_margin_top, (const byte*)"\xb2\x7b\x0e" "set_margin_top")
QDEF(MP_QSTR_set_margin_bottom, (const byte*)"\x76\x2e\x11" "set_margin_bottom")
QDEF(MP_QSTR_set_margin_left, (const byte*)"\xc2\x7d\x0f" "set_margin_left")
QDEF(MP_QSTR_set_margin_right, (const byte*)"\x79\x3f\x10" "set_margin_right")
QDEF(MP_QSTR_set_bg_blend_mode, (const byte*)"\x1f\x79\x11" "set_bg_blend_mode")
QDEF(MP_QSTR_set_bg_main_stop, (const byte*)"\x8e\xd0\x10" "set_bg_main_stop")
QDEF(MP_QSTR_set_bg_grad_stop, (const byte*)"\x35\xfc\x10" "set_bg_grad_stop")
QDEF(MP_QSTR_set_bg_grad_dir, (const byte*)"\x52\xb8\x0f" "set_bg_grad_dir")
QDEF(MP_QSTR_set_bg_color, (const byte*)"\x5f\xd5\x0c" "set_bg_color")
QDEF(MP_QSTR_set_bg_grad_color, (const byte*)"\x30\x1e\x11" "set_bg_grad_color")
QDEF(MP_QSTR_set_bg_opa, (const byte*)"\x5c\xa3\x0a" "set_bg_opa")
QDEF(MP_QSTR_set_border_width, (const byte*)"\xcd\x33\x10" "set_border_width")
QDEF(MP_QSTR_set_border_side, (const byte*)"\x90\xa2\x0f" "set_border_side")
QDEF(MP_QSTR_set_border_blend_mode, (const byte*)"\x56\xf7\x15" "set_border_blend_mode")
QDEF(MP_QSTR_set_border_post, (const byte*)"\x53\x56\x0f" "set_border_post")
QDEF(MP_QSTR_set_border_color, (const byte*)"\x76\x96\x10" "set_border_color")
QDEF(MP_QSTR_set_border_opa, (const byte*)"\x75\x46\x0e" "set_border_opa")
QDEF(MP_QSTR_set_outline_width, (const byte*)"\xa1\xac\x11" "set_outline_width")
QDEF(MP_QSTR_set_outline_pad, (const byte*)"\x72\xd5\x0f" "set_outline_pad")
QDEF(MP_QSTR_set_outline_blend_mode, (const byte*)"\xba\xab\x16" "set_outline_blend_mode")
QDEF(MP_QSTR_set_outline_color, (const byte*)"\x5a\x6f\x11" "set_outline_color")
QDEF(MP_QSTR_set_outline_opa, (const byte*)"\x59\x8f\x0f" "set_outline_opa")
QDEF(MP_QSTR_set_shadow_width, (const byte*)"\x87\x54\x10" "set_shadow_width")
QDEF(MP_QSTR_set_shadow_ofs_x, (const byte*)"\xfc\xec\x10" "set_shadow_ofs_x")
QDEF(MP_QSTR_set_shadow_ofs_y, (const byte*)"\xfd\xec\x10" "set_shadow_ofs_y")
QDEF(MP_QSTR_set_shadow_spread, (const byte*)"\x70\x3f\x11" "set_shadow_spread")
QDEF(MP_QSTR_set_shadow_blend_mode, (const byte*)"\x5c\x7f\x15" "set_shadow_blend_mode")
QDEF(MP_QSTR_set_shadow_color, (const byte*)"\x3c\x85\x10" "set_shadow_color")
QDEF(MP_QSTR_set_shadow_opa, (const byte*)"\x3f\xcf\x0e" "set_shadow_opa")
QDEF(MP_QSTR_set_pattern_repeat, (const byte*)"\x78\x55\x12" "set_pattern_repeat")
QDEF(MP_QSTR_set_pattern_blend_mode, (const byte*)"\x72\x2b\x16" "set_pattern_blend_mode")
QDEF(MP_QSTR_set_pattern_recolor, (const byte*)"\x25\x6d\x13" "set_pattern_recolor")
QDEF(MP_QSTR_set_pattern_opa, (const byte*)"\x91\x84\x0f" "set_pattern_opa")
QDEF(MP_QSTR_set_pattern_recolor_opa, (const byte*)"\xa4\x3f\x17" "set_pattern_recolor_opa")
QDEF(MP_QSTR_set_pattern_image, (const byte*)"\x88\x73\x11" "set_pattern_image")
QDEF(MP_QSTR_set_value_letter_space, (const byte*)"\xc9\x59\x16" "set_value_letter_space")
QDEF(MP_QSTR_set_value_line_space, (const byte*)"\x39\x0b\x14" "set_value_line_space")
QDEF(MP_QSTR_set_value_blend_mode, (const byte*)"\xb1\x39\x14" "set_value_blend_mode")
QDEF(MP_QSTR_set_value_ofs_x, (const byte*)"\xf1\x36\x0f" "set_value_ofs_x")
QDEF(MP_QSTR_set_value_ofs_y, (const byte*)"\xf0\x36\x0f" "set_value_ofs_y")
QDEF(MP_QSTR_set_value_align, (const byte*)"\x41\x01\x0f" "set_value_align")
QDEF(MP_QSTR_set_value_color, (const byte*)"\xb1\xc8\x0f" "set_value_color")
QDEF(MP_QSTR_set_value_opa, (const byte*)"\xb2\xbb\x0d" "set_value_opa")
QDEF(MP_QSTR_set_value_font, (const byte*)"\xdf\x87\x0e" "set_value_font")
QDEF(MP_QSTR_set_value_str, (const byte*)"\x39\x2e\x0d" "set_value_str")
QDEF(MP_QSTR_set_text_letter_space, (const byte*)"\xff\xd4\x15" "set_text_letter_space")
QDEF(MP_QSTR_set_text_line_space, (const byte*)"\x4f\x27\x13" "set_text_line_space")
QDEF(MP_QSTR_set_text_decor, (const byte*)"\x85\xdb\x0e" "set_text_decor")
QDEF(MP_QSTR_set_text_blend_mode, (const byte*)"\x47\xdd\x13" "set_text_blend_mode")
QDEF(MP_QSTR_set_text_color, (const byte*)"\x07\xa7\x0e" "set_text_color")
QDEF(MP_QSTR_set_text_sel_color, (const byte*)"\xa2\xe5\x12" "set_text_sel_color")
QDEF(MP_QSTR_set_text_sel_bg_color, (const byte*)"\xb8\x3f\x15" "set_text_sel_bg_color")
QDEF(MP_QSTR_set_text_opa, (const byte*)"\x04\x4a\x0c" "set_text_opa")
QDEF(MP_QSTR_set_text_font, (const byte*)"\xa9\x98\x0d" "set_text_font")
QDEF(MP_QSTR_set_line_width, (const byte*)"\x2f\x55\x0e" "set_line_width")
QDEF(MP_QSTR_set_line_blend_mode, (const byte*)"\x74\x14\x13" "set_line_blend_mode")
QDEF(MP_QSTR_set_line_dash_width, (const byte*)"\x4e\x40\x13" "set_line_dash_width")
QDEF(MP_QSTR_set_line_dash_gap, (const byte*)"\xde\x75\x11" "set_line_dash_gap")
QDEF(MP_QSTR_set_line_rounded, (const byte*)"\x8a\x09\x10" "set_line_rounded")
QDEF(MP_QSTR_set_line_color, (const byte*)"\xd4\xc7\x0e" "set_line_color")
QDEF(MP_QSTR_set_line_opa, (const byte*)"\xd7\xae\x0c" "set_line_opa")
QDEF(MP_QSTR_set_image_blend_mode, (const byte*)"\xbd\x8c\x14" "set_image_blend_mode")
QDEF(MP_QSTR_set_image_recolor, (const byte*)"\x8a\x1b\x11" "set_image_recolor")
QDEF(MP_QSTR_set_image_opa, (const byte*)"\x3e\x91\x0d" "set_image_opa")
QDEF(MP_QSTR_set_image_recolor_opa, (const byte*)"\x4b\x68\x15" "set_image_recolor_opa")
QDEF(MP_QSTR_set_transition_time, (const byte*)"\xfd\xed\x13" "set_transition_time")
QDEF(MP_QSTR_set_transition_delay, (const byte*)"\x3d\x30\x14" "set_transition_delay")
QDEF(MP_QSTR_set_transition_prop_1, (const byte*)"\xbb\x2e\x15" "set_transition_prop_1")
QDEF(MP_QSTR_set_transition_prop_2, (const byte*)"\xb8\x2e\x15" "set_transition_prop_2")
QDEF(MP_QSTR_set_transition_prop_3, (const byte*)"\xb9\x2e\x15" "set_transition_prop_3")
QDEF(MP_QSTR_set_transition_prop_4, (const byte*)"\xbe\x2e\x15" "set_transition_prop_4")
QDEF(MP_QSTR_set_transition_prop_5, (const byte*)"\xbf\x2e\x15" "set_transition_prop_5")
QDEF(MP_QSTR_set_transition_prop_6, (const byte*)"\xbc\x2e\x15" "set_transition_prop_6")
QDEF(MP_QSTR_set_transition_path, (const byte*)"\x45\xdc\x13" "set_transition_path")
QDEF(MP_QSTR_set_scale_width, (const byte*)"\xb9\x5e\x0f" "set_scale_width")
QDEF(MP_QSTR_set_scale_border_width, (const byte*)"\xca\x82\x16" "set_scale_border_width")
QDEF(MP_QSTR_set_scale_end_border_width, (const byte*)"\xda\x56\x1a" "set_scale_end_border_width")
QDEF(MP_QSTR_set_scale_end_line_width, (const byte*)"\x78\xb3\x18" "set_scale_end_line_width")
QDEF(MP_QSTR_set_scale_grad_color, (const byte*)"\xcd\x97\x14" "set_scale_grad_color")
QDEF(MP_QSTR_set_scale_end_color, (const byte*)"\x52\xbd\x13" "set_scale_end_color")
QDEF(MP_QSTR_set_pad_all, (const byte*)"\xd3\x93\x0b" "set_pad_all")
QDEF(MP_QSTR_set_pad_hor, (const byte*)"\xe7\xb7\x0b" "set_pad_hor")
QDEF(MP_QSTR_set_pad_ver, (const byte*)"\xb3\x49\x0b" "set_pad_ver")
QDEF(MP_QSTR_set_margin_all, (const byte*)"\xd8\xb3\x0e" "set_margin_all")
QDEF(MP_QSTR_set_margin_hor, (const byte*)"\xac\x8f\x0e" "set_margin_hor")
QDEF(MP_QSTR_set_margin_ver, (const byte*)"\xf8\x95\x0e" "set_margin_ver")
QDEF(MP_QSTR_remove_prop, (const byte*)"\x21\x51\x0b" "remove_prop")
QDEF(MP_QSTR_drv_update, (const byte*)"\xcb\xda\x0a" "drv_update")
QDEF(MP_QSTR_set_default, (const byte*)"\x33\x7b\x0b" "set_default")
QDEF(MP_QSTR_get_hor_res, (const byte*)"\xe2\x69\x0b" "get_hor_res")
QDEF(MP_QSTR_get_ver_res, (const byte*)"\x36\x92\x0b" "get_ver_res")
QDEF(MP_QSTR_get_antialiasing, (const byte*)"\xc8\x32\x10" "get_antialiasing")
QDEF(MP_QSTR_get_dpi, (const byte*)"\x31\x4b\x07" "get_dpi")
QDEF(MP_QSTR_get_size_category, (const byte*)"\x46\x1e\x11" "get_size_category")
QDEF(MP_QSTR_get_next, (const byte*)"\x0b\x13\x08" "get_next")
QDEF(MP_QSTR_get_buf, (const byte*)"\x9d\x53\x07" "get_buf")
QDEF(MP_QSTR_get_inv_buf_size, (const byte*)"\xc9\x9f\x10" "get_inv_buf_size")
QDEF(MP_QSTR_is_double_buf, (const byte*)"\xdb\x93\x0d" "is_double_buf")
QDEF(MP_QSTR_is_true_double_buf, (const byte*)"\xf2\xf8\x12" "is_true_double_buf")
QDEF(MP_QSTR_get_scr_act, (const byte*)"\xe7\x56\x0b" "get_scr_act")
QDEF(MP_QSTR_get_scr_prev, (const byte*)"\xa0\x12\x0c" "get_scr_prev")
QDEF(MP_QSTR_get_layer_top, (const byte*)"\x9b\xc7\x0d" "get_layer_top")
QDEF(MP_QSTR_get_layer_sys, (const byte*)"\x89\xcd\x0d" "get_layer_sys")
QDEF(MP_QSTR_assign_screen, (const byte*)"\x37\xc4\x0d" "assign_screen")
QDEF(MP_QSTR_set_bg_image, (const byte*)"\xc5\x79\x0c" "set_bg_image")
QDEF(MP_QSTR_get_inactive_time, (const byte*)"\x4d\x28\x11" "get_inactive_time")
QDEF(MP_QSTR_trig_activity, (const byte*)"\x3f\x21\x0d" "trig_activity")
QDEF(MP_QSTR_clean_dcache, (const byte*)"\x97\x5e\x0c" "clean_dcache")
QDEF(MP_QSTR_flush_ready, (const byte*)"\xd5\xf6\x0b" "flush_ready")
QDEF(MP_QSTR_flush_is_last, (const byte*)"\x11\x1b\x0d" "flush_is_last")
QDEF(MP_QSTR__del, (const byte*)"\xb7\x50\x04" "_del")
QDEF(MP_QSTR_set_prio, (const byte*)"\x3c\x6e\x08" "set_prio")
QDEF(MP_QSTR_set_period, (const byte*)"\xbd\xba\x0a" "set_period")
QDEF(MP_QSTR_ready, (const byte*)"\xee\x30\x05" "ready")
QDEF(MP_QSTR_read_line, (const byte*)"\x86\x37\x09" "read_line")
QDEF(MP_QSTR_set_info_cb, (const byte*)"\xc8\x86\x0b" "set_info_cb")
QDEF(MP_QSTR_set_open_cb, (const byte*)"\x32\x7d\x0b" "set_open_cb")
QDEF(MP_QSTR_set_read_line_cb, (const byte*)"\xa5\x68\x10" "set_read_line_cb")
QDEF(MP_QSTR_set_close_cb, (const byte*)"\x30\x2c\x0c" "set_close_cb")
QDEF(MP_QSTR_built_in_info, (const byte*)"\xaa\x4d\x0d" "built_in_info")
QDEF(MP_QSTR_built_in_open, (const byte*)"\xd0\x93\x0d" "built_in_open")
QDEF(MP_QSTR_built_in_read_line, (const byte*)"\xa7\x99\x12" "built_in_read_line")
QDEF(MP_QSTR_built_in_close, (const byte*)"\x12\xe0\x0e" "built_in_close")
QDEF(MP_QSTR_reset_long_press, (const byte*)"\x7d\x2c\x10" "reset_long_press")
QDEF(MP_QSTR_set_cursor, (const byte*)"\x12\x32\x0a" "set_cursor")
QDEF(MP_QSTR_set_group, (const byte*)"\xc7\xbc\x09" "set_group")
QDEF(MP_QSTR_set_button_points, (const byte*)"\xce\xa8\x11" "set_button_points")
QDEF(MP_QSTR_get_point, (const byte*)"\x00\x67\x09" "get_point")
QDEF(MP_QSTR_get_gesture_dir, (const byte*)"\xab\x14\x0f" "get_gesture_dir")
QDEF(MP_QSTR_get_key, (const byte*)"\xdb\x4c\x07" "get_key")
QDEF(MP_QSTR_is_dragging, (const byte*)"\x97\xe8\x0b" "is_dragging")
QDEF(MP_QSTR_get_vect, (const byte*)"\x68\x39\x08" "get_vect")
QDEF(MP_QSTR_finish_drag, (const byte*)"\x99\xb3\x0b" "finish_drag")
QDEF(MP_QSTR_wait_release, (const byte*)"\x78\x8c\x0c" "wait_release")
QDEF(MP_QSTR_add_obj, (const byte*)"\x5c\x8f\x07" "add_obj")
QDEF(MP_QSTR_remove_all_objs, (const byte*)"\xb6\x41\x0f" "remove_all_objs")
QDEF(MP_QSTR_focus_next, (const byte*)"\xf1\xec\x0a" "focus_next")
QDEF(MP_QSTR_focus_prev, (const byte*)"\x87\x0d\x0a" "focus_prev")
QDEF(MP_QSTR_focus_freeze, (const byte*)"\x9d\x5b\x0c" "focus_freeze")
QDEF(MP_QSTR_send_data, (const byte*)"\x96\x44\x09" "send_data")
QDEF(MP_QSTR_set_focus_cb, (const byte*)"\x4a\xa9\x0c" "set_focus_cb")
QDEF(MP_QSTR_set_refocus_policy, (const byte*)"\x5c\x13\x12" "set_refocus_policy")
QDEF(MP_QSTR_set_editing, (const byte*)"\x64\xa6\x0b" "set_editing")
QDEF(MP_QSTR_set_click_focus, (const byte*)"\x05\x29\x0f" "set_click_focus")
QDEF(MP_QSTR_set_wrap, (const byte*)"\x8c\x44\x08" "set_wrap")
QDEF(MP_QSTR_get_focused, (const byte*)"\x81\x24\x0b" "get_focused")
QDEF(MP_QSTR_get_focus_cb, (const byte*)"\xde\xb3\x0c" "get_focus_cb")
QDEF(MP_QSTR_get_editing, (const byte*)"\x70\x32\x0b" "get_editing")
QDEF(MP_QSTR_get_click_focus, (const byte*)"\x11\xf0\x0f" "get_click_focus")
QDEF(MP_QSTR_get_wrap, (const byte*)"\x18\xad\x08" "get_wrap")
QDEF(MP_QSTR_points_init, (const byte*)"\xff\xe6\x0b" "points_init")
QDEF(MP_QSTR_angle_init, (const byte*)"\x41\x45\x0a" "angle_init")
QDEF(MP_QSTR_set_act, (const byte*)"\x0e\xad\x07" "set_act")
QDEF(MP_QSTR_set_apply_cb, (const byte*)"\xd2\xd2\x0c" "set_apply_cb")
QDEF(MP_QSTR_lv_log_print_g_cb_t_print_cb, (const byte*)"\x57\xc0\x1c" "lv_log_print_g_cb_t_print_cb")
QDEF(MP_QSTR_task_xcb, (const byte*)"\x8e\x25\x08" "task_xcb")
QDEF(MP_QSTR_async_xcb, (const byte*)"\xc5\x08\x09" "async_xcb")
QDEF(MP_QSTR_line_start, (const byte*)"\x54\xbd\x0a" "line_start")
QDEF(MP_QSTR_coord_y, (const byte*)"\xb6\xb7\x07" "coord_y")
QDEF(MP_QSTR_lv_draw_label_hint_t, (const byte*)"\x76\x15\x14" "lv_draw_label_hint_t")
QDEF(MP_QSTR_lvgl, (const byte*)"\x74\x85\x04" "lvgl")
QDEF(MP_QSTR_color_mix_premult, (const byte*)"\xc3\x5f\x11" "color_mix_premult")
QDEF(MP_QSTR_color_make, (const byte*)"\x85\xd4\x0a" "color_make")
QDEF(MP_QSTR_color_hex, (const byte*)"\xb2\xc4\x09" "color_hex")
QDEF(MP_QSTR_color_hex3, (const byte*)"\xc1\x5a\x0a" "color_hex3")
QDEF(MP_QSTR_scr_act, (const byte*)"\xce\x0e\x07" "scr_act")
QDEF(MP_QSTR_layer_top, (const byte*)"\xb2\x79\x09" "layer_top")
QDEF(MP_QSTR_layer_sys, (const byte*)"\x20\x88\x09" "layer_sys")
QDEF(MP_QSTR_scr_load, (const byte*)"\x3e\x04\x08" "scr_load")
QDEF(MP_QSTR_dpx, (const byte*)"\xc9\x1f\x03" "dpx")
QDEF(MP_QSTR_log_register_print_cb, (const byte*)"\x67\xdf\x15" "log_register_print_cb")
QDEF(MP_QSTR_mem_realloc, (const byte*)"\xa5\x85\x0b" "mem_realloc")
QDEF(MP_QSTR_mem_defrag, (const byte*)"\x8c\x20\x0a" "mem_defrag")
QDEF(MP_QSTR_mem_test, (const byte*)"\x09\x17\x08" "mem_test")
QDEF(MP_QSTR_task_handler, (const byte*)"\x2f\x4d\x0c" "task_handler")
QDEF(MP_QSTR_task_create_basic, (const byte*)"\x76\xae\x11" "task_create_basic")
QDEF(MP_QSTR_task_create, (const byte*)"\xb3\x74\x0b" "task_create")
QDEF(MP_QSTR_task_enable, (const byte*)"\x76\x92\x0b" "task_enable")
QDEF(MP_QSTR_task_get_idle, (const byte*)"\x5a\xf4\x0d" "task_get_idle")
QDEF(MP_QSTR_async_call, (const byte*)"\xfe\xed\x0a" "async_call")
QDEF(MP_QSTR_color_hsv_to_rgb, (const byte*)"\xc6\x6d\x10" "color_hsv_to_rgb")
QDEF(MP_QSTR_color_rgb_to_hsv, (const byte*)"\x06\xb9\x10" "color_rgb_to_hsv")
QDEF(MP_QSTR_disp_get_default, (const byte*)"\x96\x95\x10" "disp_get_default")
QDEF(MP_QSTR_tick_inc, (const byte*)"\xeb\x2b\x08" "tick_inc")
QDEF(MP_QSTR_tick_get, (const byte*)"\x99\x44\x08" "tick_get")
QDEF(MP_QSTR_tick_elaps, (const byte*)"\xa4\xcf\x0a" "tick_elaps")
QDEF(MP_QSTR_anim_del, (const byte*)"\x7c\x83\x08" "anim_del")
QDEF(MP_QSTR_anim_get, (const byte*)"\x27\xa0\x08" "anim_get")
QDEF(MP_QSTR_anim_count_running, (const byte*)"\xca\xbe\x12" "anim_count_running")
QDEF(MP_QSTR_anim_speed_to_time, (const byte*)"\x58\xed\x12" "anim_speed_to_time")
QDEF(MP_QSTR_anim_refr_now, (const byte*)"\xbb\x99\x0d" "anim_refr_now")
QDEF(MP_QSTR_debug_check_null, (const byte*)"\x09\xe9\x10" "debug_check_null")
QDEF(MP_QSTR_debug_check_mem_integrity, (const byte*)"\xef\x02\x19" "debug_check_mem_integrity")
QDEF(MP_QSTR_debug_check_str, (const byte*)"\xe7\x7b\x0f" "debug_check_str")
QDEF(MP_QSTR_debug_log_error, (const byte*)"\x08\xec\x0f" "debug_log_error")
QDEF(MP_QSTR_draw_mask_add, (const byte*)"\xd0\x4b\x0d" "draw_mask_add")
QDEF(MP_QSTR_draw_mask_apply, (const byte*)"\xc5\xda\x0f" "draw_mask_apply")
QDEF(MP_QSTR_draw_mask_remove_id, (const byte*)"\xe5\x35\x13" "draw_mask_remove_id")
QDEF(MP_QSTR_draw_mask_remove_custom, (const byte*)"\x3b\x1d\x17" "draw_mask_remove_custom")
QDEF(MP_QSTR_draw_mask_get_cnt, (const byte*)"\x61\x6b\x11" "draw_mask_get_cnt")
QDEF(MP_QSTR_debug_check_style, (const byte*)"\x65\x19\x11" "debug_check_style")
QDEF(MP_QSTR_debug_check_style_list, (const byte*)"\x38\x06\x16" "debug_check_style_list")
QDEF(MP_QSTR_draw_px, (const byte*)"\x12\x2e\x07" "draw_px")
QDEF(MP_QSTR_draw_label, (const byte*)"\xbc\xfe\x0a" "draw_label")
QDEF(MP_QSTR_fs_get_drv, (const byte*)"\xa6\xd7\x0a" "fs_get_drv")
QDEF(MP_QSTR_fs_is_ready, (const byte*)"\x81\x96\x0b" "fs_is_ready")
QDEF(MP_QSTR_fs_remove, (const byte*)"\x69\xa7\x09" "fs_remove")
QDEF(MP_QSTR_fs_rename, (const byte*)"\x3f\x14\x09" "fs_rename")
QDEF(MP_QSTR_fs_free_space, (const byte*)"\x80\xbb\x0d" "fs_free_space")
QDEF(MP_QSTR_fs_get_letters, (const byte*)"\x8b\x66\x0e" "fs_get_letters")
QDEF(MP_QSTR_fs_get_ext, (const byte*)"\x6f\xd5\x0a" "fs_get_ext")
QDEF(MP_QSTR_fs_up, (const byte*)"\xaa\x6c\x05" "fs_up")
QDEF(MP_QSTR_fs_get_last, (const byte*)"\x2c\x03\x0b" "fs_get_last")
QDEF(MP_QSTR_event_send, (const byte*)"\x0a\x87\x0a" "event_send")
QDEF(MP_QSTR_event_send_refresh, (const byte*)"\x88\x7d\x12" "event_send_refresh")
QDEF(MP_QSTR_event_send_refresh_recursive, (const byte*)"\x6d\x1d\x1c" "event_send_refresh_recursive")
QDEF(MP_QSTR_event_send_func, (const byte*)"\x0b\x3b\x0f" "event_send_func")
QDEF(MP_QSTR_event_get_data, (const byte*)"\xef\xfa\x0e" "event_get_data")
QDEF(MP_QSTR_signal_send, (const byte*)"\xb8\xa2\x0b" "signal_send")
QDEF(MP_QSTR_debug_check_obj_type, (const byte*)"\x12\x92\x14" "debug_check_obj_type")
QDEF(MP_QSTR_debug_check_obj_valid, (const byte*)"\xbc\x97\x15" "debug_check_obj_valid")
QDEF(MP_QSTR_group_create, (const byte*)"\x61\xf0\x0c" "group_create")
QDEF(MP_QSTR_group_remove_obj, (const byte*)"\x1b\xe8\x10" "group_remove_obj")
QDEF(MP_QSTR_group_focus_obj, (const byte*)"\xf1\xc8\x0f" "group_focus_obj")
QDEF(MP_QSTR_indev_get_act, (const byte*)"\xf5\x7c\x0d" "indev_get_act")
QDEF(MP_QSTR_indev_get_obj_act, (const byte*)"\xed\x7d\x11" "indev_get_obj_act")
QDEF(MP_QSTR_indev_search_obj, (const byte*)"\x7c\x1c\x10" "indev_search_obj")
QDEF(MP_QSTR_indev_get_read_task, (const byte*)"\xa3\x9f\x13" "indev_get_read_task")
QDEF(MP_QSTR_refr_now, (const byte*)"\x2f\x23\x08" "refr_now")
QDEF(MP_QSTR_disp_load_scr, (const byte*)"\x0f\x63\x0d" "disp_load_scr")
QDEF(MP_QSTR_scr_load_anim, (const byte*)"\xaa\x2a\x0d" "scr_load_anim")
QDEF(MP_QSTR_theme_get_act, (const byte*)"\x34\x07\x0d" "theme_get_act")
QDEF(MP_QSTR_theme_apply, (const byte*)"\xbf\xb5\x0b" "theme_apply")
QDEF(MP_QSTR_theme_get_font_small, (const byte*)"\x91\xd5\x14" "theme_get_font_small")
QDEF(MP_QSTR_theme_get_font_normal, (const byte*)"\x3d\xfb\x15" "theme_get_font_normal")
QDEF(MP_QSTR_theme_get_font_subtitle, (const byte*)"\x8a\xe3\x17" "theme_get_font_subtitle")
QDEF(MP_QSTR_theme_get_font_title, (const byte*)"\xce\xa6\x14" "theme_get_font_title")
QDEF(MP_QSTR_theme_get_color_primary, (const byte*)"\x2c\xb2\x17" "theme_get_color_primary")
QDEF(MP_QSTR_theme_get_color_secondary, (const byte*)"\xda\xfa\x19" "theme_get_color_secondary")
QDEF(MP_QSTR_theme_get_flags, (const byte*)"\xbd\x2e\x0f" "theme_get_flags")
QDEF(MP_QSTR_theme_empty_init, (const byte*)"\x9b\x62\x10" "theme_empty_init")
QDEF(MP_QSTR_theme_template_init, (const byte*)"\x7e\xf2\x13" "theme_template_init")
QDEF(MP_QSTR_theme_material_init, (const byte*)"\x25\x65\x13" "theme_material_init")
QDEF(MP_QSTR_theme_mono_init, (const byte*)"\x8d\xf6\x0f" "theme_mono_init")
QDEF(MP_QSTR_font_load, (const byte*)"\x6f\x4e\x09" "font_load")
QDEF(MP_QSTR_draw_triangle, (const byte*)"\x34\x10\x0d" "draw_triangle")
QDEF(MP_QSTR_LOG_LEVEL, (const byte*)"\x68\xc5\x09" "LOG_LEVEL")
QDEF(MP_QSTR_RES, (const byte*)"\x81\x06\x03" "RES")
QDEF(MP_QSTR_TASK_PRIO, (const byte*)"\xd3\xac\x09" "TASK_PRIO")
QDEF(MP_QSTR_OPA, (const byte*)"\xfb\xe2\x03" "OPA")
QDEF(MP_QSTR_COORD, (const byte*)"\x90\x03\x05" "COORD")
QDEF(MP_QSTR_INDEV_TYPE, (const byte*)"\x72\xf7\x0a" "INDEV_TYPE")
QDEF(MP_QSTR_INDEV_STATE, (const byte*)"\xfd\x1c\x0b" "INDEV_STATE")
QDEF(MP_QSTR_DRAG_DIR, (const byte*)"\xf5\x46\x08" "DRAG_DIR")
QDEF(MP_QSTR_GESTURE_DIR, (const byte*)"\x02\x06\x0b" "GESTURE_DIR")
QDEF(MP_QSTR_FONT_SUBPX, (const byte*)"\x05\x0e\x0a" "FONT_SUBPX")
QDEF(MP_QSTR_ANIM, (const byte*)"\xce\x9b\x04" "ANIM")
QDEF(MP_QSTR_DRAW_MASK_RES, (const byte*)"\x55\x1c\x0d" "DRAW_MASK_RES")
QDEF(MP_QSTR_DRAW_MASK_TYPE, (const byte*)"\x09\xf0\x0e" "DRAW_MASK_TYPE")
QDEF(MP_QSTR_DRAW_MASK_LINE_SIDE, (const byte*)"\x5b\xda\x13" "DRAW_MASK_LINE_SIDE")
QDEF(MP_QSTR_BLEND_MODE, (const byte*)"\x98\xde\x0a" "BLEND_MODE")
QDEF(MP_QSTR_GRAD_DIR, (const byte*)"\x15\x01\x08" "GRAD_DIR")
QDEF(MP_QSTR_STYLE, (const byte*)"\x32\x53\x05" "STYLE")
QDEF(MP_QSTR_BIDI_DIR, (const byte*)"\x83\xa1\x08" "BIDI_DIR")
QDEF(MP_QSTR_TXT_FLAG, (const byte*)"\x6e\x2f\x08" "TXT_FLAG")
QDEF(MP_QSTR_TXT_CMD_STATE, (const byte*)"\xc0\x9f\x0d" "TXT_CMD_STATE")
QDEF(MP_QSTR_FS_RES, (const byte*)"\x0b\xd9\x06" "FS_RES")
QDEF(MP_QSTR_FS_MODE, (const byte*)"\xac\x81\x07" "FS_MODE")
QDEF(MP_QSTR_DESIGN, (const byte*)"\x97\x4b\x06" "DESIGN")
QDEF(MP_QSTR_DESIGN_RES, (const byte*)"\x8c\x52\x0a" "DESIGN_RES")
QDEF(MP_QSTR_EVENT, (const byte*)"\x29\x8a\x05" "EVENT")
QDEF(MP_QSTR_SIGNAL, (const byte*)"\xfb\xfd\x06" "SIGNAL")
QDEF(MP_QSTR_PROTECT, (const byte*)"\x4e\xad\x07" "PROTECT")
QDEF(MP_QSTR_GROUP_REFOCUS_POLICY, (const byte*)"\x61\xe3\x14" "GROUP_REFOCUS_POLICY")
QDEF(MP_QSTR_FONT_FMT_TXT_CMAP, (const byte*)"\x51\xbd\x11" "FONT_FMT_TXT_CMAP")
QDEF(MP_QSTR_LAYOUT, (const byte*)"\x9f\xfb\x06" "LAYOUT")
QDEF(MP_QSTR_LABEL_DOT, (const byte*)"\xe3\x4c\x09" "LABEL_DOT")
QDEF(MP_QSTR_LABEL_POS, (const byte*)"\xf0\x18\x09" "LABEL_POS")
QDEF(MP_QSTR_LABEL_TEXT_SEL, (const byte*)"\x84\xd6\x0e" "LABEL_TEXT_SEL")
QDEF(MP_QSTR_SCROLLBAR_MODE, (const byte*)"\x45\xc3\x0e" "SCROLLBAR_MODE")
QDEF(MP_QSTR_CHART_POINT, (const byte*)"\xfa\x8e\x0b" "CHART_POINT")
QDEF(MP_QSTR_CHART_TICK_LENGTH, (const byte*)"\x40\xba\x11" "CHART_TICK_LENGTH")
QDEF(MP_QSTR_BTNMATRIX_BTN, (const byte*)"\x41\x4b\x0d" "BTNMATRIX_BTN")
QDEF(MP_QSTR_TEXTAREA_CURSOR, (const byte*)"\x3a\x1c\x0f" "TEXTAREA_CURSOR")
QDEF(MP_QSTR_DISP_SIZE, (const byte*)"\xf1\x7a\x09" "DISP_SIZE")
QDEF(MP_QSTR_SCR_LOAD_ANIM, (const byte*)"\xca\x7e\x0d" "SCR_LOAD_ANIM")
QDEF(MP_QSTR_THEME, (const byte*)"\x54\xc5\x05" "THEME")
QDEF(MP_QSTR_THEME_MATERIAL_FLAG, (const byte*)"\xb3\x1a\x13" "THEME_MATERIAL_FLAG")
QDEF(MP_QSTR_FONT_FMT_TXT, (const byte*)"\xf1\x1a\x0c" "FONT_FMT_TXT")
QDEF(MP_QSTR_color16_t, (const byte*)"\x34\xef\x09" "color16_t")
QDEF(MP_QSTR_color16_ch_t, (const byte*)"\xe0\x73\x0c" "color16_ch_t")
QDEF(MP_QSTR_font_t, (const byte*)"\x5d\x5f\x06" "font_t")
QDEF(MP_QSTR_font_glyph_dsc_t, (const byte*)"\x23\xa7\x10" "font_glyph_dsc_t")
QDEF(MP_QSTR_anim_path_t, (const byte*)"\x57\xc9\x0b" "anim_path_t")
QDEF(MP_QSTR_anim_t, (const byte*)"\xc5\x86\x06" "anim_t")
QDEF(MP_QSTR_area_t, (const byte*)"\x59\xaa\x06" "area_t")
QDEF(MP_QSTR_style_t, (const byte*)"\x99\x97\x07" "style_t")
QDEF(MP_QSTR_disp_t, (const byte*)"\x20\x3e\x06" "disp_t")
QDEF(MP_QSTR_disp_drv_t, (const byte*)"\xff\x90\x0a" "disp_drv_t")
QDEF(MP_QSTR_disp_buf_t, (const byte*)"\xce\xd4\x0a" "disp_buf_t")
QDEF(MP_QSTR_task_t, (const byte*)"\x23\xd2\x06" "task_t")
QDEF(MP_QSTR_ll_t, (const byte*)"\xce\x2e\x04" "ll_t")
QDEF(MP_QSTR_style_list_t, (const byte*)"\x64\x68\x0c" "style_list_t")
QDEF(MP_QSTR_point_t, (const byte*)"\x62\x42\x07" "point_t")
QDEF(MP_QSTR_obj_type_t, (const byte*)"\xce\x86\x0a" "obj_type_t")
QDEF(MP_QSTR_draw_rect_dsc_t, (const byte*)"\xda\xae\x0f" "draw_rect_dsc_t")
QDEF(MP_QSTR_draw_label_dsc_t, (const byte*)"\xdc\xcd\x10" "draw_label_dsc_t")
QDEF(MP_QSTR_draw_img_dsc_t, (const byte*)"\xb9\x50\x0e" "draw_img_dsc_t")
QDEF(MP_QSTR_draw_line_dsc_t, (const byte*)"\xf4\xe5\x0f" "draw_line_dsc_t")
QDEF(MP_QSTR_img_dsc_t, (const byte*)"\xc6\x6b\x09" "img_dsc_t")
QDEF(MP_QSTR_img_header_t, (const byte*)"\xad\x4d\x0c" "img_header_t")
QDEF(MP_QSTR_img_decoder_dsc_t, (const byte*)"\xe7\xc0\x11" "img_decoder_dsc_t")
QDEF(MP_QSTR_img_decoder_t, (const byte*)"\x4c\x9b\x0d" "img_decoder_t")
QDEF(MP_QSTR_chart_series_t, (const byte*)"\x66\x29\x0e" "chart_series_t")
QDEF(MP_QSTR_chart_cursor_t, (const byte*)"\xb7\xd8\x0e" "chart_cursor_t")
QDEF(MP_QSTR_color_hsv_t, (const byte*)"\xe1\x53\x0b" "color_hsv_t")
QDEF(MP_QSTR_objmask_mask_t, (const byte*)"\xd6\x72\x0e" "objmask_mask_t")
QDEF(MP_QSTR_calendar_date_t, (const byte*)"\xb7\x65\x0f" "calendar_date_t")
QDEF(MP_QSTR_mem_monitor_t, (const byte*)"\x58\xc5\x0d" "mem_monitor_t")
QDEF(MP_QSTR_indev_drv_t, (const byte*)"\xa1\x45\x0b" "indev_drv_t")
QDEF(MP_QSTR_indev_data_t, (const byte*)"\x11\xb8\x0c" "indev_data_t")
QDEF(MP_QSTR_indev_t, (const byte*)"\xfe\x20\x07" "indev_t")
QDEF(MP_QSTR_indev_proc_t, (const byte*)"\x6f\x92\x0c" "indev_proc_t")
QDEF(MP_QSTR_indev_proc_types_t, (const byte*)"\xfb\x4f\x12" "indev_proc_types_t")
QDEF(MP_QSTR_indev_proc_types_pointer_t, (const byte*)"\xbf\x97\x1a" "indev_proc_types_pointer_t")
QDEF(MP_QSTR_indev_proc_types_keypad_t, (const byte*)"\x46\x45\x19" "indev_proc_types_keypad_t")
QDEF(MP_QSTR_group_t, (const byte*)"\x31\xbc\x07" "group_t")
QDEF(MP_QSTR_draw_mask_line_param_t, (const byte*)"\x44\x49\x16" "draw_mask_line_param_t")
QDEF(MP_QSTR_draw_mask_common_dsc_t, (const byte*)"\x1c\xb1\x16" "draw_mask_common_dsc_t")
QDEF(MP_QSTR_draw_mask_line_param_cfg_t, (const byte*)"\xd9\xb1\x1a" "draw_mask_line_param_cfg_t")
QDEF(MP_QSTR_draw_mask_angle_param_t, (const byte*)"\x8b\x48\x17" "draw_mask_angle_param_t")
QDEF(MP_QSTR_draw_mask_angle_param_cfg_t, (const byte*)"\x16\x4b\x1b" "draw_mask_angle_param_cfg_t")
QDEF(MP_QSTR_draw_mask_radius_param_t, (const byte*)"\xf2\x42\x18" "draw_mask_radius_param_t")
QDEF(MP_QSTR_draw_mask_radius_param_cfg_t, (const byte*)"\x2f\x40\x1c" "draw_mask_radius_param_cfg_t")
QDEF(MP_QSTR_sqrt_res_t, (const byte*)"\xd1\x4d\x0a" "sqrt_res_t")
QDEF(MP_QSTR_draw_mask_fade_param_t, (const byte*)"\x4c\xc4\x16" "draw_mask_fade_param_t")
QDEF(MP_QSTR_draw_mask_fade_param_cfg_t, (const byte*)"\xd1\x6e\x1a" "draw_mask_fade_param_cfg_t")
QDEF(MP_QSTR_draw_mask_map_param_t, (const byte*)"\x36\x9d\x15" "draw_mask_map_param_t")
QDEF(MP_QSTR_draw_mask_map_param_cfg_t, (const byte*)"\x6b\x7a\x19" "draw_mask_map_param_cfg_t")
QDEF(MP_QSTR_fs_drv_t, (const byte*)"\x84\x75\x08" "fs_drv_t")
QDEF(MP_QSTR_fs_file_t, (const byte*)"\x82\x47\x09" "fs_file_t")
QDEF(MP_QSTR_fs_dir_t, (const byte*)"\xbb\x2e\x08" "fs_dir_t")
QDEF(MP_QSTR_theme_t, (const byte*)"\x3f\x68\x07" "theme_t")
QDEF(MP_QSTR_draw_label_hint_t, (const byte*)"\x33\x12\x11" "draw_label_hint_t")
QDEF(MP_QSTR_color_t, (const byte*)"\x13\x12\x07" "color_t")
QDEF(MP_QSTR_font_montserrat_14, (const byte*)"\xc8\xd4\x12" "font_montserrat_14")
QDEF(MP_QSTR_font_montserrat_16, (const byte*)"\xca\xd4\x12" "font_montserrat_16")
QDEF(MP_QSTR_font_dejavu_16_persian_hebrew, (const byte*)"\xc5\x57\x1d" "font_dejavu_16_persian_hebrew")
QDEF(MP_QSTR_anim_path_def, (const byte*)"\xe4\x3a\x0d" "anim_path_def")
QDEF(MP_QSTR_lv_color32_ch_t, (const byte*)"\x03\x9f\x0f" "lv_color32_ch_t")
QDEF(MP_QSTR_lv_color32_t, (const byte*)"\xb7\x9f\x0c" "lv_color32_t")
QDEF(MP_QSTR_color32_t, (const byte*)"\xf2\xe7\x09" "color32_t")
QDEF(MP_QSTR_color32_ch_t, (const byte*)"\x66\xdd\x0c" "color32_ch_t")
QDEF(MP_QSTR_quit, (const byte*)"\x5c\xf9\x04" "quit")
QDEF(MP_QSTR_rtthread, (const byte*)"\x6d\xd8\x08" "rtthread")
QDEF(MP_QSTR_fastslew, (const byte*)"\xa8\xdc\x08" "fastslew")
QDEF(MP_QSTR_hys, (const byte*)"\xe7\x51\x03" "hys")
QDEF(MP_QSTR_pad_expert_cfg, (const byte*)"\x1c\xed\x0e" "pad_expert_cfg")
QDEF(MP_QSTR_HIZ, (const byte*)"\x1e\xec\x03" "HIZ")
QDEF(MP_QSTR_IN_PUP, (const byte*)"\x28\x9f\x06" "IN_PUP")
QDEF(MP_QSTR_IN_PUP_WEAK, (const byte*)"\x6f\x50\x0b" "IN_PUP_WEAK")
QDEF(MP_QSTR_IN_PDN, (const byte*)"\xc7\x9d\x06" "IN_PDN")
QDEF(MP_QSTR_OUT_WEAK, (const byte*)"\x2c\xf8\x08" "OUT_WEAK")
QDEF(MP_QSTR_OD_PUP, (const byte*)"\x64\xfe\x06" "OD_PUP")
QDEF(MP_QSTR_SLEW_FAST, (const byte*)"\xb7\xc8\x09" "SLEW_FAST")
QDEF(MP_QSTR_HYS, (const byte*)"\x07\xee\x03" "HYS")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF(MP_QSTR_BUZZER, (const byte*)"\x65\x1b\x06" "BUZZER")
QDEF(MP_QSTR_CEXAMPLE, (const byte*)"\x8e\x56\x08" "CEXAMPLE")
QDEF(MP_QSTR_CPUFREQ, (const byte*)"\x83\x5f\x07" "CPUFREQ")
QDEF(MP_QSTR_FIR, (const byte*)"\x18\xb3\x03" "FIR")
QDEF(MP_QSTR_GIF, (const byte*)"\x8d\xbf\x03" "GIF")
QDEF(MP_QSTR_IMU, (const byte*)"\x14\xd7\x03" "IMU")
QDEF(MP_QSTR_MICRO_SPEECH, (const byte*)"\x48\xd9\x0c" "MICRO_SPEECH")
QDEF(MP_QSTR_MJPEG, (const byte*)"\xd0\x33\x05" "MJPEG")
QDEF(MP_QSTR_OMV, (const byte*)"\x11\xe0\x03" "OMV")
QDEF(MP_QSTR_SENSOR, (const byte*)"\x53\xf1\x06" "SENSOR")
QDEF(MP_QSTR_TF, (const byte*)"\x57\x74\x02" "TF")
QDEF(MP_QSTR_CMM, (const byte*)"\x06\xd0\x03" "CMM")
QDEF(MP_QSTR_cmm, (const byte*)"\x26\x4c\x03" "cmm")
QDEF(MP_QSTR_TOF, (const byte*)"\x58\x00\x03" "TOF")
QDEF(MP_QSTR_tof, (const byte*)"\x38\x63\x03" "tof")
QDEF(MP_QSTR_TV, (const byte*)"\x47\x74\x02" "TV")
QDEF(MP_QSTR_UARRAY, (const byte*)"\xc9\x41\x06" "UARRAY")
QDEF(MP_QSTR_ULAB, (const byte*)"\x5f\x5b\x04" "ULAB")
QDEF(MP_QSTR_NXP_MODULE, (const byte*)"\xa6\xa4\x0a" "NXP_MODULE")
QDEF(MP_QSTR_nxp_module, (const byte*)"\xc6\xa1\x0a" "nxp_module")
QDEF(MP_QSTR_mcu, (const byte*)"\x7e\x44\x03" "mcu")
QDEF(MP_QSTR_mdelay, (const byte*)"\x3d\x26\x06" "mdelay")
QDEF(MP_QSTR_stacks_analyze, (const byte*)"\x63\x57\x0e" "stacks_analyze")
QDEF(MP_QSTR_list_device, (const byte*)"\x20\x96\x0b" "list_device")
QDEF(MP_QSTR_rectangle, (const byte*)"\xa4\x2d\x09" "rectangle")
QDEF(MP_QSTR_show_image, (const byte*)"\xde\x12\x0a" "show_image")
QDEF(MP_QSTR_show_bmp, (const byte*)"\xe6\x64\x08" "show_bmp")
QDEF(MP_QSTR_WHITE, (const byte*)"\xa2\xc2\x05" "WHITE")
QDEF(MP_QSTR_BLACK, (const byte*)"\x82\x4d\x05" "BLACK")
QDEF(MP_QSTR_BLUE, (const byte*)"\x3b\x3b\x04" "BLUE")
QDEF(MP_QSTR_BRED, (const byte*)"\x34\x73\x04" "BRED")
QDEF(MP_QSTR_GRED, (const byte*)"\x91\xc6\x04" "GRED")
QDEF(MP_QSTR_GBLUE, (const byte*)"\x5c\x03\x05" "GBLUE")
QDEF(MP_QSTR_RED, (const byte*)"\x96\x06\x03" "RED")
QDEF(MP_QSTR_MAGENTA, (const byte*)"\xf0\xf0\x07" "MAGENTA")
QDEF(MP_QSTR_GREEN, (const byte*)"\xde\x98\x05" "GREEN")
QDEF(MP_QSTR_CYAN, (const byte*)"\x10\x26\x04" "CYAN")
QDEF(MP_QSTR_YELLOW, (const byte*)"\x41\x49\x06" "YELLOW")
QDEF(MP_QSTR_BROWN, (const byte*)"\xc3\x12\x05" "BROWN")
QDEF(MP_QSTR_BRRED, (const byte*)"\x06\xb2\x05" "BRRED")
QDEF(MP_QSTR_GRAY, (const byte*)"\x08\xc6\x04" "GRAY")
QDEF(MP_QSTR_GRAY175, (const byte*)"\x1b\x3c\x07" "GRAY175")
QDEF(MP_QSTR_GRAY151, (const byte*)"\xdd\x3b\x07" "GRAY151")
QDEF(MP_QSTR_GRAY187, (const byte*)"\xb6\x3a\x07" "GRAY187")
QDEF(MP_QSTR_GRAY240, (const byte*)"\x3e\x38\x07" "GRAY240")
QDEF(MP_QSTR_ALT_OD, (const byte*)"\x88\xe4\x06" "ALT_OD")
QDEF(MP_QSTR_ALT_PP, (const byte*)"\xe3\xe5\x06" "ALT_PP")
QDEF(MP_QSTR_userfunc, (const byte*)"\x4a\x03\x08" "userfunc")
QDEF(MP_QSTR_tensor, (const byte*)"\x34\x3b\x06" "tensor")
QDEF(MP_QSTR_alloc_float_tensor, (const byte*)"\xc9\x32\x12" "alloc_float_tensor")
QDEF(MP_QSTR_add_float_tensor, (const byte*)"\xe5\x6e\x10" "add_float_tensor")
QDEF(MP_QSTR_compare_float_tensor, (const byte*)"\xc3\x4f\x14" "compare_float_tensor")
QDEF(MP_QSTR_compare_tensor_angle, (const byte*)"\xd2\x5f\x14" "compare_tensor_angle")
QDEF(MP_QSTR_image_resize, (const byte*)"\x6f\xfd\x0c" "image_resize")
QDEF(MP_QSTR_weit_cache, (const byte*)"\x39\x06\x0a" "weit_cache")
QDEF(MP_QSTR_score_threshold, (const byte*)"\x85\xa6\x0f" "score_threshold")
QDEF(MP_QSTR_topn, (const byte*)"\x80\xc8\x04" "topn")
QDEF(MP_QSTR_during, (const byte*)"\x06\xbf\x06" "during")
QDEF(MP_QSTR_tf_invoke, (const byte*)"\xf8\xde\x09" "tf_invoke")
QDEF(MP_QSTR_logistic, (const byte*)"\xe5\xc6\x08" "logistic")
QDEF(MP_QSTR_regress, (const byte*)"\x42\x8d\x07" "regress")
QDEF(MP_QSTR_profile, (const byte*)"\x4e\xd2\x07" "profile")
QDEF(MP_QSTR_fastdetect, (const byte*)"\x42\x8b\x0a" "fastdetect")
QDEF(MP_QSTR_invoke, (const byte*)"\x55\x1b\x06" "invoke")
QDEF(MP_QSTR_AF0_LPI2C4, (const byte*)"\xdd\xb1\x0a" "AF0_LPI2C4")
QDEF(MP_QSTR_AF0_PWM2, (const byte*)"\x55\x63\x08" "AF0_PWM2")
QDEF(MP_QSTR_AF1_GPT1, (const byte*)"\x7e\xcd\x08" "AF1_GPT1")
QDEF(MP_QSTR_AF1_LPI2C3, (const byte*)"\xbb\x35\x0a" "AF1_LPI2C3")
QDEF(MP_QSTR_AF1_PWM1, (const byte*)"\xf7\x83\x08" "AF1_PWM1")
QDEF(MP_QSTR_AF1_PWM2, (const byte*)"\xf4\x83\x08" "AF1_PWM2")
QDEF(MP_QSTR_AF1_PWM4, (const byte*)"\xf2\x83\x08" "AF1_PWM4")
QDEF(MP_QSTR_AF1_TMR3, (const byte*)"\x14\x9d\x08" "AF1_TMR3")
QDEF(MP_QSTR_AF2_LPI2C3, (const byte*)"\x98\xca\x0a" "AF2_LPI2C3")
QDEF(MP_QSTR_AF2_LPUART1, (const byte*)"\xb0\x59\x0b" "AF2_LPUART1")
QDEF(MP_QSTR_AF2_LPUART2, (const byte*)"\xb3\x59\x0b" "AF2_LPUART2")
QDEF(MP_QSTR_AF2_LPUART3, (const byte*)"\xb2\x59\x0b" "AF2_LPUART3")
QDEF(MP_QSTR_AF2_LPUART6, (const byte*)"\xb7\x59\x0b" "AF2_LPUART6")
QDEF(MP_QSTR_AF2_LPUART8, (const byte*)"\xb9\x59\x0b" "AF2_LPUART8")
QDEF(MP_QSTR_AF3_LPI2C1, (const byte*)"\x7b\xcd\x0a" "AF3_LPI2C1")
QDEF(MP_QSTR_AF3_SAI1, (const byte*)"\x44\xfb\x08" "AF3_SAI1")
QDEF(MP_QSTR_AF3_SAI2, (const byte*)"\x47\xfb\x08" "AF3_SAI2")
QDEF(MP_QSTR_AF4_LPSPI1, (const byte*)"\x6e\x6d\x0a" "AF4_LPSPI1")
QDEF(MP_QSTR_AF4_PWM1, (const byte*)"\xd2\x62\x08" "AF4_PWM1")
QDEF(MP_QSTR_AF5_GPIO1, (const byte*)"\xa8\xfe\x09" "AF5_GPIO1")
QDEF(MP_QSTR_AF5_GPIO3, (const byte*)"\xaa\xfe\x09" "AF5_GPIO3")
QDEF(MP_QSTR_AF5_GPIO5, (const byte*)"\xac\xfe\x09" "AF5_GPIO5")
QDEF(MP_QSTR_AF7_GPT2, (const byte*)"\x3b\x8c\x08" "AF7_GPT2")
QDEF(MP_QSTR_AF7_LPSPI3, (const byte*)"\x4f\x47\x0a" "AF7_LPSPI3")
QDEF(MP_QSTR_A0, (const byte*)"\x54\x72\x02" "A0")
QDEF(MP_QSTR_A1, (const byte*)"\x55\x72\x02" "A1")
QDEF(MP_QSTR_A2, (const byte*)"\x56\x72\x02" "A2")
QDEF(MP_QSTR_A3, (const byte*)"\x57\x72\x02" "A3")
QDEF(MP_QSTR_A4, (const byte*)"\x50\x72\x02" "A4")
QDEF(MP_QSTR_A5, (const byte*)"\x51\x72\x02" "A5")
QDEF(MP_QSTR_AD_B0_01, (const byte*)"\xf3\x19\x08" "AD_B0_01")
QDEF(MP_QSTR_AD_B0_02, (const byte*)"\xf0\x19\x08" "AD_B0_02")
QDEF(MP_QSTR_AD_B0_03, (const byte*)"\xf1\x19\x08" "AD_B0_03")
QDEF(MP_QSTR_AD_B0_09, (const byte*)"\xfb\x19\x08" "AD_B0_09")
QDEF(MP_QSTR_AD_B0_10, (const byte*)"\xd3\x19\x08" "AD_B0_10")
QDEF(MP_QSTR_AD_B0_11, (const byte*)"\xd2\x19\x08" "AD_B0_11")
QDEF(MP_QSTR_AD_B0_12, (const byte*)"\xd1\x19\x08" "AD_B0_12")
QDEF(MP_QSTR_AD_B0_13, (const byte*)"\xd0\x19\x08" "AD_B0_13")
QDEF(MP_QSTR_AD_B1_00, (const byte*)"\xd3\x95\x08" "AD_B1_00")
QDEF(MP_QSTR_AD_B1_01, (const byte*)"\xd2\x95\x08" "AD_B1_01")
QDEF(MP_QSTR_AD_B1_02, (const byte*)"\xd1\x95\x08" "AD_B1_02")
QDEF(MP_QSTR_AD_B1_03, (const byte*)"\xd0\x95\x08" "AD_B1_03")
QDEF(MP_QSTR_AD_B1_04, (const byte*)"\xd7\x95\x08" "AD_B1_04")
QDEF(MP_QSTR_AD_B1_05, (const byte*)"\xd6\x95\x08" "AD_B1_05")
QDEF(MP_QSTR_AD_B1_06, (const byte*)"\xd5\x95\x08" "AD_B1_06")
QDEF(MP_QSTR_AD_B1_07, (const byte*)"\xd4\x95\x08" "AD_B1_07")
QDEF(MP_QSTR_AD_B1_08, (const byte*)"\xdb\x95\x08" "AD_B1_08")
QDEF(MP_QSTR_AD_B1_10, (const byte*)"\xf2\x95\x08" "AD_B1_10")
QDEF(MP_QSTR_AD_B1_11, (const byte*)"\xf3\x95\x08" "AD_B1_11")
QDEF(MP_QSTR_D0_RX, (const byte*)"\x44\xed\x05" "D0_RX")
QDEF(MP_QSTR_D10_SS, (const byte*)"\xbf\x51\x06" "D10_SS")
QDEF(MP_QSTR_D11_MO, (const byte*)"\x9c\xd6\x06" "D11_MO")
QDEF(MP_QSTR_D12_MI, (const byte*)"\xb9\x39\x06" "D12_MI")
QDEF(MP_QSTR_D13_CK, (const byte*)"\x94\xbf\x06" "D13_CK")
QDEF(MP_QSTR_D14_SDA, (const byte*)"\xed\x86\x07" "D14_SDA")
QDEF(MP_QSTR_D15_SCL, (const byte*)"\x46\x9f\x07" "D15_SCL")
QDEF(MP_QSTR_D1_TX, (const byte*)"\x23\x89\x05" "D1_TX")
QDEF(MP_QSTR_D2_INT0, (const byte*)"\xcf\x73\x07" "D2_INT0")
QDEF(MP_QSTR_D3_INT1, (const byte*)"\xaf\x33\x07" "D3_INT1")
QDEF(MP_QSTR_D4, (const byte*)"\x35\x72\x02" "D4")
QDEF(MP_QSTR_D5_PWM1, (const byte*)"\x30\x9b\x07" "D5_PWM1")
QDEF(MP_QSTR_D6_PWM2, (const byte*)"\x90\xbb\x07" "D6_PWM2")
QDEF(MP_QSTR_D7_PWM3, (const byte*)"\x70\x7b\x07" "D7_PWM3")
QDEF(MP_QSTR_D8, (const byte*)"\x39\x72\x02" "D8")
QDEF(MP_QSTR_D9_PWM4, (const byte*)"\xb9\x5a\x07" "D9_PWM4")
QDEF(MP_QSTR_DBG_RXD, (const byte*)"\x95\xcd\x07" "DBG_RXD")
QDEF(MP_QSTR_DBG_TXD, (const byte*)"\x93\xf7\x07" "DBG_TXD")
QDEF(MP_QSTR_SD_B0_00, (const byte*)"\xa0\x34\x08" "SD_B0_00")
QDEF(MP_QSTR_SD_B0_01, (const byte*)"\xa1\x34\x08" "SD_B0_01")
QDEF(MP_QSTR_SD_B0_02, (const byte*)"\xa2\x34\x08" "SD_B0_02")
QDEF(MP_QSTR_SD_B0_03, (const byte*)"\xa3\x34\x08" "SD_B0_03")
QDEF(MP_QSTR_WAKEUP, (const byte*)"\x78\x36\x06" "WAKEUP")
QDEF(MP_QSTR_HID, (const byte*)"\x00\xec\x03" "HID")
QDEF(MP_QSTR_MSC_plus_HID, (const byte*)"\x27\x05\x0c" "MSC_plus_HID")
