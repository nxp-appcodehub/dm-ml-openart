from building import *
import rtconfig
import os
from auto_generate_qstr import gen_qstr
from makeversionhdr import make_version_header

if GetDepend(['NXP_USING_MICROPYTHON']):
    path = os.path.normpath(os.getcwd()) + '/../../'
    print('Generate Qstring in :',path)
    headerfile = './mimxrt_port/genhdr/qstrdefs.generated.h'
    gen_qstr(path=path,hash_len=2,headerfile=headerfile)
    make_version_header('./mimxrt_port/genhdr/mpversion.h')

# get current directory
mpy     = GetCurrentDir() + '/../openmv/src/micropython'
pwd = GetCurrentDir() 
src = []
# The set of source files associated with this SConscript file.
#py
src    += Glob(mpy + '/py/argcheck.c')
src    += Glob(mpy + '/py/asmarm.c')
src    += Glob(mpy + '/py/asmbase.c')
src    += Glob(mpy + '/py/asmthumb.c')
src    += Glob(mpy + '/py/bc.c')
src    += Glob(mpy + '/py/binary.c')
src    += Glob(mpy + '/py/builtinevex.c')
src    += Glob(mpy + '/py/builtinhelp.c')
src    += Glob(mpy + '/py/builtinimport.c')
src    += Glob(mpy + '/py/compile.c')
src    += Glob(mpy + '/py/emitbc.c')
src    += Glob(mpy + '/py/emitcommon.c')
src    += Glob(mpy + '/py/emitglue.c')
src    += Glob(mpy + '/py/emitinlinethumb.c')
src    += Glob(mpy + '/py/emitnarm.c')
src    += Glob(mpy + '/py/emitnative.c')
src    += Glob(mpy + '/py/emitnthumb.c')
src    += Glob(mpy + '/py/formatfloat.c')
src    += Glob(mpy + '/py/frozenmod.c')
src    += Glob(mpy + '/py/gc.c')
src    += Glob(mpy + '/py/lexer.c')
src    += Glob(mpy + '/py/malloc.c')
src    += Glob(mpy + '/py/map.c')
src    += Glob(mpy + '/py/modarray.c')
src    += Glob(mpy + '/py/modbuiltins.c')
src    += Glob(mpy + '/py/modcmath.c')
src    += Glob(mpy + '/py/modcollections.c')
src    += Glob(mpy + '/py/modgc.c')
src    += Glob(mpy + '/py/modio.c')
src    += Glob(mpy + '/py/modmath.c')
src    += Glob(mpy + '/py/modmicropython.c')
src    += Glob(mpy + '/py/modstruct.c')
src    += Glob(mpy + '/py/modsys.c')
src    += Glob(mpy + '/py/moduerrno.c')
src    += Glob(mpy + '/py/mpprint.c')
src    += Glob(mpy + '/py/mpstate.c')
src    += Glob(mpy + '/py/mpz.c')
src    += Glob(mpy + '/py/nlr.c')
src    += Glob(mpy + '/py/nlrthumb.c')
src    += Glob(mpy + '/py/obj.c')
src    += Glob(mpy + '/py/objarray.c')
src    += Glob(mpy + '/py/objattrtuple.c')
src    += Glob(mpy + '/py/objbool.c')
src    += Glob(mpy + '/py/objboundmeth.c')
src    += Glob(mpy + '/py/objcell.c')
src    += Glob(mpy + '/py/objclosure.c')
src    += Glob(mpy + '/py/objcomplex.c')
src    += Glob(mpy + '/py/objdeque.c')
src    += Glob(mpy + '/py/objdict.c')
src    += Glob(mpy + '/py/objenumerate.c')
src    += Glob(mpy + '/py/objexcept.c')
src    += Glob(mpy + '/py/objfilter.c')
src    += Glob(mpy + '/py/objfloat.c')
src    += Glob(mpy + '/py/objfun.c')
src    += Glob(mpy + '/py/objgenerator.c')
src    += Glob(mpy + '/py/objgetitemiter.c')
src    += Glob(mpy + '/py/objint.c')
src    += Glob(mpy + '/py/objint_longlong.c')
src    += Glob(mpy + '/py/objint_mpz.c')
src    += Glob(mpy + '/py/objlist.c')
src    += Glob(mpy + '/py/objmap.c')
src    += Glob(mpy + '/py/objmodule.c')
src    += Glob(mpy + '/py/objnamedtuple.c')
src    += Glob(mpy + '/py/objnone.c')
src    += Glob(mpy + '/py/objobject.c')
src    += Glob(mpy + '/py/objpolyiter.c')
src    += Glob(mpy + '/py/objproperty.c')
src    += Glob(mpy + '/py/objrange.c')
src    += Glob(mpy + '/py/objreversed.c')
src    += Glob(mpy + '/py/objset.c')
src    += Glob(mpy + '/py/objsingleton.c')
src    += Glob(mpy + '/py/objslice.c')
src    += Glob(mpy + '/py/objstr.c')
src    += Glob(mpy + '/py/objstringio.c')
src    += Glob(mpy + '/py/objstrunicode.c')
src    += Glob(mpy + '/py/objtuple.c')
src    += Glob(mpy + '/py/objtype.c')
src    += Glob(mpy + '/py/objzip.c')
src    += Glob(mpy + '/py/omvdummy.c')
src    += Glob(mpy + '/py/opmethods.c')
src    += Glob(mpy + '/py/pairheap.c')
src    += Glob(mpy + '/py/parse.c')
src    += Glob(mpy + '/py/parsenum.c')
src    += Glob(mpy + '/py/parsenumbase.c')
src    += Glob(mpy + '/py/persistentcode.c')
src    += Glob(mpy + '/py/profile.c')
src    += Glob(mpy + '/py/pystack.c')
src    += Glob(mpy + '/py/qstr.c')
src    += Glob(mpy + '/py/reader.c')
src    += Glob(mpy + '/py/repl.c')
src    += Glob(mpy + '/py/ringbuf.c')
src    += Glob(mpy + '/py/runtime.c')
src    += Glob(mpy + '/py/runtime_utils.c')
src    += Glob(mpy + '/py/scheduler.c')
src    += Glob(mpy + '/py/scope.c')
src    += Glob(mpy + '/py/sequence.c')
src    += Glob(mpy + '/py/showbc.c')
src    += Glob(mpy + '/py/smallint.c')
src    += Glob(mpy + '/py/stackctrl.c')
src    += Glob(mpy + '/py/stream.c')
src    += Glob(mpy + '/py/unicode.c')
src    += Glob(mpy + '/py/vm.c')
src    += Glob(mpy + '/py/vstr.c')
src    += Glob(mpy + '/py/warning.c')
src    += Glob(mpy + '/py/nativeglue.c')
#shared 
src    += Glob(mpy + '/shared/runtime/gchelper_generic.c')
src    += Glob(mpy + '/shared/runtime/interrupt_char.c')
src    += Glob(mpy + '/shared/runtime/pyexec.c')
src    += Glob(mpy + '/shared/runtime/stdout_helpers.c')
src    += Glob(mpy + '/shared/runtime/mpirq.c')
src    += Glob(mpy + '/shared/readline/readline.c')
src    += Glob(mpy + '/shared/timeutils/timeutils.c')
#extmod
src    += Glob(mpy + '/extmod/machine_i2c.c')
src    += Glob(mpy + '/extmod/machine_mem.c')
src    += Glob(mpy + '/extmod/machine_pinbase.c')
src    += Glob(mpy + '/extmod/machine_pulse.c')
src    += Glob(mpy + '/extmod/machine_signal.c')
src    += Glob(mpy + '/extmod/machine_spi.c')
src    += Glob(mpy + '/extmod/modnetwork.c')
src    += Glob(mpy + '/extmod/modubinascii.c')
src    += Glob(mpy + '/extmod/moducryptolib.c')
src    += Glob(mpy + '/extmod/moductypes.c')
src    += Glob(mpy + '/extmod/moduhashlib.c')
src    += Glob(mpy + '/extmod/moduheapq.c')
src    += Glob(mpy + '/extmod/modujson.c')
src    += Glob(mpy + '/extmod/moduplatform.c')
src    += Glob(mpy + '/extmod/modurandom.c')
src    += Glob(mpy + '/extmod/modure.c')
src    += Glob(mpy + '/extmod/moduselect.c')
src    += Glob(mpy + '/extmod/modusocket.c')
src    += Glob(mpy + '/extmod/modussl_axtls.c')
src    += Glob(mpy + '/extmod/modussl_mbedtls.c')
src    += Glob(mpy + '/extmod/modutimeq.c')
src    += Glob(mpy + '/extmod/moduwebsocket.c')
src    += Glob(mpy + '/extmod/moduzlib.c')
src    += Glob(mpy + '/extmod/modwebrepl.c')
src    += Glob(mpy + '/extmod/mpbthci.c')
src    += Glob(mpy + '/extmod/uos_dupterm.c')
src    += Glob(mpy + '/extmod/utime_mphal.c')
src    += Glob(mpy + '/extmod/vfs.c')
src    += Glob(mpy + '/extmod/vfs_blockdev.c')
src    += Glob(mpy + '/extmod/vfs_fat.c')
src    += Glob(mpy + '/extmod/vfs_fat_diskio.c')
src    += Glob(mpy + '/extmod/vfs_fat_file.c')
src    += Glob(mpy + '/extmod/vfs_posix.c')
src    += Glob(mpy + '/extmod/vfs_posix_file.c')
src    += Glob(mpy + '/extmod/vfs_reader.c')
src    += Glob(mpy + '/extmod/virtpin.c')
src    += Glob(mpy + '/extmod/moduasyncio.c')
src    += Glob(mpy + '/drivers/bus/softspi.c')
src    += Glob(mpy + '/drivers/dht/dht.c')
#port hal
src    += Glob(pwd + '/mimxrt_port/bufhelper.c')    
src    += Glob(pwd + '/mimxrt_port/gccollect.c' ) 
src    += Glob(pwd + '/mimxrt_port/modmimxrt.c'  )
src    += Glob(pwd + '/mimxrt_port/mpgetcharport.c')  
src    += Glob(pwd + '/mimxrt_port/mphalport.c'  )
src    += Glob(pwd + '/mimxrt_port/mpputsnport.c' ) 
src    += Glob(pwd + '/mimxrt_port/mpthreadport.c' ) 
src    += Glob(pwd + '/mimxrt_port/mpy_main.c'  )
src    += Glob(pwd + '/mimxrt_port/mpy_pin.c'  )
src    += Glob(pwd + '/mimxrt_port/pendsv.c'  )
src    += Glob(pwd + '/mimxrt_port/modled.c')
src    += Glob(pwd + '/mimxrt_port/modrng.c')
src    += Glob(pwd + '/mimxrt_port/modservo.c')
src    += Glob(pwd + '/mimxrt_port/moduos_vfs.c')
src    += Glob(pwd + '/mimxrt_port/modos.c')
src    += Glob(pwd + '/mimxrt_port/irqmap.c')
src    += Glob(pwd + '/mimxrt_port/modules/modmcu.c')  
src    += Glob(pwd + '/mimxrt_port/modules/modpyb.c' ) 
src    += Glob(pwd + '/mimxrt_port/modules/modrtthread.c')  
src    += Glob(pwd + '/mimxrt_port/modules/moduos.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/modutime.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine/modmachine.c')  
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_adc.c')  
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_hw_i2c.c')  
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_hw_spi.c' ) 
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_lcd.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_pin.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_rtc.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_timer.c' ) 
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_uart.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_wdt.c' ) 
src    += Glob(pwd + '/mimxrt_port/modules/machine/machine_pwm.c')
src    += Glob(pwd + '/mimxrt_port/modules/bufhelper.c'  )
src    += Glob(pwd + '/mimxrt_port/modules/machine_wdt.c' ) 

#nxp lib
src    += Glob(pwd + '/nxp_lib/aia_cmm/cfg_mux_mgr.c')
src    += Glob(pwd + '/nxp_lib/aia_doc/doc_mgr.c')
src    += Glob(pwd + '/nxp_lib/fake_libc_include/fake_libc.c')

path    = [pwd + '/']
path   += [pwd + '/mimxrt_port']
path   += [pwd + '/mimxrt_port/modules']
path   += [pwd + '/mimxrt_port/modules/machine']
path   += [pwd + '/nxp_lib/']
path   += [pwd + '/nxp_lib/fake_libc_include']
path   += [pwd + '/../openmv/src/micropython']
path   += [pwd + '/../openmv/src/micropython/py']
path   += [pwd + '/../openmv/src/micropython/extmod']
LOCAL_CCFLAGS = ''

if rtconfig.CROSS_TOOL == 'gcc':
    LOCAL_CCFLAGS += ' -std=c99'
elif rtconfig.CROSS_TOOL == 'keil':
    LOCAL_CCFLAGS += ' --c99 --gnu'

group = DefineGroup('micropython', src, depend = ['NXP_USING_MICROPYTHON'], CPPPATH = path)

Return('group')
